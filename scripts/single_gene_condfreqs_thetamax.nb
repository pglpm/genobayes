(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    565508,      11271]
NotebookOptionsPosition[    550280,      11017]
NotebookOutlinePosition[    550626,      11032]
CellTagsIndexPosition[    550583,      11029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\pglpm\\\\repositories\\\\genobayes\\\\scripts2\\\\\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.7480581918151317`*^9, 3.748058214344571*^9}, 
   3.7485400693033943`*^9, {3.74998579523592*^9, 3.7499857954387197`*^9}, 
   3.7507604846618743`*^9},ExpressionUUID->"0de31abf-1d59-4b57-b3bf-\
379f992303cc"],

Cell[BoxData["\<\"C:\\\\Users\\\\pglpm\\\\repositories\\\\genobayes\\\\\
scripts2\"\>"], "Output",
 CellChangeTimes->{
  3.75062770674234*^9, 3.750655679064475*^9, 3.750686545549798*^9, {
   3.7507604917598867`*^9, 
   3.750760492368288*^9}},ExpressionUUID->"dd70fe88-ad8f-479c-a602-\
f466c684e4c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bd", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], "=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BetaDistribution", "[", 
     RowBox[{"b", ",", "a"}], "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749321980708143*^9, 3.7493220086945925`*^9}, {
  3.7493953735631523`*^9, 
  3.749395375123155*^9}},ExpressionUUID->"3c0df4f5-357a-4856-a3d4-\
b9fbe96aeb33"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}]], " ", 
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b"}]]}], 
         RowBox[{"Beta", "[", 
          RowBox[{"b", ",", "a"}], "]"}]], 
        RowBox[{"0", "<", "x", "<", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.749322010145395*^9, 3.7493949608312273`*^9, 
  3.749395376137157*^9, 3.749395682958496*^9, 3.749396885603809*^9, 
  3.7493998524436207`*^9, 3.750328780379343*^9, 3.750944737161847*^9, 
  3.7509994745628624`*^9},ExpressionUUID->"c3153706-c8da-46e1-acf7-\
fbdab1103d7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cd", "[", "x_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"x", ">", "0"}], ",", 
    RowBox[{"FS", "@", 
     RowBox[{"Log", "[", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CauchyDistribution", "[", 
         RowBox[{
          RowBox[{"Log", "[", "1000", "]"}], ",", 
          RowBox[{"Log", "[", "1000", "]"}]}], "]"}], ",", "x"}], "]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.750631248081361*^9, 3.7506312608577833`*^9}, {
   3.750631307611065*^9, 3.750631326939499*^9}, {3.750631923160947*^9, 
   3.7506319272169538`*^9}, {3.750631983205452*^9, 3.7506319869962587`*^9}, {
   3.7506320218155203`*^9, 3.7506320277123303`*^9}, 3.7506323779641457`*^9, {
   3.7506557215745497`*^9, 3.7506557227445517`*^9}, {3.7506557944734774`*^9, 
   3.7506558252055316`*^9}, 
   3.750677581302578*^9},ExpressionUUID->"968c91aa-8f11-40f3-9536-\
75a3b8d22a09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"6", " ", "x", " ", 
        RowBox[{"Log", "[", "10", "]"}]}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "10", "]"}], "2"]}]}], ")"}]}], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "1000", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.750631311979073*^9, 3.750631327781901*^9}, 
   3.7506319889774623`*^9, 3.7506320287263317`*^9, 3.7506323820201526`*^9, 
   3.750655724663355*^9, {3.7506557983266845`*^9, 3.750655826235133*^9}, 
   3.75067758247258*^9, 3.750677945595418*^9, 3.7506865482174025`*^9, 
   3.7507126384423018`*^9, 3.750748936120027*^9, 
   3.7507604931950893`*^9},ExpressionUUID->"40c8a50e-7aaa-4ce4-95c9-\
94f10c62f8b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"cd", "[", "lx", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"lx", ",", 
     RowBox[{"Log", "[", 
      RowBox[{"10", "^", 
       RowBox[{"-", "3"}]}], "]"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"10", "^", "9"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Auto"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7506777652903013`*^9, 3.7506778136815863`*^9}, {
  3.750677861979271*^9, 
  3.750677884817711*^9}},ExpressionUUID->"c28e7804-ce1b-4027-ad07-\
683cfd1bf95a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$565740#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.009216015742187068},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6.907754715083747, 20.72326527304802}, {0.009216015742187068, 
   0.046080071334278515`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.750677790359545*^9, 3.750677814102787*^9}, {
   3.750677862462872*^9, 3.7506778854729123`*^9}, 
   3.7507126444171124`*^9},ExpressionUUID->"d973ca1f-120e-4498-9001-\
24b8c35b85d9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savedir", "=", "\"\<1gene-results_math7\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<gene\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allgenes", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "94"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allsymptoms", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"symptomnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quantiles", "=", 
   RowBox[{"{", 
    RowBox[{"0.05", ",", "0.95"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7499857018697557`*^9, 3.7499859097245207`*^9}, {
   3.750009828342239*^9, 3.7500098319926453`*^9}, {3.750010290980652*^9, 
   3.750010303195473*^9}, 3.7503295175762386`*^9, {3.7506248099008512`*^9, 
   3.750624811273654*^9}, {3.750629502761895*^9, 3.750629503619897*^9}, {
   3.750630731127653*^9, 3.7506307316112537`*^9}, {3.750630864008686*^9, 
   3.750630864429887*^9}, {3.75063123060933*^9, 3.750631230968131*^9}, {
   3.750633089201595*^9, 3.7506330921188*^9}, {3.7506558856244373`*^9, 
   3.750655885858438*^9}},ExpressionUUID->"fb1bb9ee-4ca6-4283-b55e-\
8db71a85a372"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gnames", "=", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", 
       RowBox[{"4", "+", "allgenes"}]}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"qnames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<EV\>\"", ",", "\"\<STD\>\"", ",", "\"\<Q.05\>\"", ",", 
     "\"\<Q.95\>\"", ",", "\"\<theta0\>\"", ",", "\"\<theta1\>\"", ",", 
     "\"\<post.theta0\>\"", ",", "\"\<post.theta1\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.749985916120532*^9, 3.749985962749014*^9}, {
  3.749986005305889*^9, 3.7499860159295073`*^9}, {3.7499861169562845`*^9, 
  3.7499861811503973`*^9}, {3.75032963832145*^9, 3.7503296519558744`*^9}, {
  3.7505702149056215`*^9, 
  3.7505702175264263`*^9}},ExpressionUUID->"f30d45b8-5f12-4baa-9629-\
0cb6d966ea17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"binoutcomes", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noutcomes", "=", 
   RowBox[{"Length", "@", "binoutcomes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alcombnames", "=", "alnames"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nalleles", "=", 
   RowBox[{"Length", "@", "alnames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ncombinations", "=", 
   RowBox[{"Length", "@", "allgenes"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.749986231883687*^9, 3.74998626774815*^9}, {
  3.7499863205230427`*^9, 3.749986348696692*^9}, {3.750060467781559*^9, 
  3.7500604806983814`*^9}},ExpressionUUID->"9ce342a5-1044-4b5c-8e8f-\
bbaba906f475"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", "=", "1"}], ";", 
  RowBox[{"sdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", 
        RowBox[{"3", "+", "allgenes"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7506865960470867`*^9, 3.7506865996194925`*^9}, {
  3.7507127889367657`*^9, 
  3.750712789357967*^9}},ExpressionUUID->"89e8e3ab-6e59-4a4b-9459-\
f7291162bf38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", "10"}], ";", 
  RowBox[{"f", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"sdata", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", "g1"}], "]"}], "]"}], "\[Equal]", "x"}], 
            ")"}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "al"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"al", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "binoutcomes"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7507128023683896`*^9, 3.750712810121603*^9}, {
  3.750713328480314*^9, 3.7507133290263147`*^9}, {3.750745280680406*^9, 
  3.750745281086007*^9}, {3.75074892633881*^9, 
  3.750748927508812*^9}},ExpressionUUID->"d64b2ef9-8038-4a4c-be6a-\
c3527a84c355"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1769", ",", "2599"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"666", ",", "995"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7507128109016047`*^9, 3.750713329665916*^9, 3.750745284876813*^9, {
   3.750748929349615*^9, 
   3.7507489489744496`*^9}},ExpressionUUID->"716b941b-a3e8-422a-b30d-\
b3fa038d1600"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"logprob", "[", "t_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r2", "=", 
        RowBox[{"f", "+", "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Total", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", "\[IndentingNewLine]", 
       RowBox[{"Total", "@", 
        RowBox[{"LogGamma", "[", 
         RowBox[{"Total", "@", "r2"}], "]"}]}], "+", "\[IndentingNewLine]", 
       RowBox[{"noutcomes", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"LogGamma", "[", 
           RowBox[{"Total", "@", "t"}], "]"}], "-", 
          RowBox[{"Total", "@", 
           RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"Log", "[", 
          RowBox[{"Total", "@", "t"}], "]"}]}], " ", 
        RowBox[{"(*", "math3", "*)"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"-", 
         RowBox[{"Total", "@", 
          RowBox[{"Log", "[", "t", "]"}]}]}], 
        RowBox[{"(*", "math4", "*)"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"+", 
          RowBox[{"cd", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"Total", "@", "t"}], "]"}], "]"}]}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"Total", "@", "t"}], "]"}]}]}], " ", 
        RowBox[{"(*", "math5", "*)"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"nothing", ":", " ", "math6"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"+", 
         RowBox[{"Total", "@", 
          RowBox[{"cd2", "[", "t", "]"}]}]}], " ", 
        RowBox[{"(*", "math7", "*)"}], "*)"}], "\[IndentingNewLine]", "+", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"cd", "[", 
          RowBox[{"Log", "[", "t", "]"}], "]"}], "-", 
         RowBox[{"Log", "[", "t", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",ExpressionUUID->\
"d3819453-f026-4b7a-9d5a-2a497ec5127a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"logprob", "[", 
   RowBox[{"Range", "[", "2", "]"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.750748957102064*^9, 
  3.7507489644496765`*^9}},ExpressionUUID->"1a3630cb-46b0-4147-8f61-\
832c52e50d03"],

Cell[BoxData[
 RowBox[{"-", "3566.052052940715`"}]], "Output",
 CellChangeTimes->{{3.7507489621096725`*^9, 
  3.750748964792877*^9}},ExpressionUUID->"f6de44c8-9a6f-4738-8099-\
e3a09d6ee035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thetas2", "=", 
  RowBox[{"thetas", "[", 
   RowBox[{"[", 
    RowBox[{";;", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7507129568710613`*^9, 3.75071296766628*^9}, 
   3.750748980751705*^9},ExpressionUUID->"c0cd252a-203c-42a6-8f1d-\
5fbf46354b2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t$1", ",", "t$2"}], "}"}]], "Output",
 CellChangeTimes->{3.7507129679938803`*^9, 
  3.7507489817969074`*^9},ExpressionUUID->"c67ed780-297a-4a84-bbd8-\
2fa283917db9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"logprob", "[", "thetas2", "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", ">", "0"}], ")"}], "&"}], "/@", "thetas2"}], ")"}]}]}],
     "}"}], ",", 
   RowBox[{"T", "[", 
    RowBox[{"{", 
     RowBox[{"thetas2", ",", 
      RowBox[{"Mean", "[", "f", "]"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.750712997727533*^9, 3.7507129988507347`*^9}, {
  3.7507489858841143`*^9, 
  3.7507489889885197`*^9}},ExpressionUUID->"226863fa-ffb2-4fa0-944e-\
3decc26851ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3563.368176405471`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t$1", "\[Rule]", "0.12440949212354363`"}], ",", 
     RowBox[{"t$2", "\[Rule]", "0.10317857806812149`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.750713003483943*^9, 3.750713345016343*^9, 
  3.750745293082428*^9, 
  3.7507489897061214`*^9},ExpressionUUID->"97b054af-9c2e-4ac8-bfc3-\
55bda0097207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"thetas", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"logprob", "[", "thetas", "]"}], "]"}], "*", 
      RowBox[{"Exp", "[", "3563", "]"}]}], "]"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xx", ",", "0", ",", 
          RowBox[{"+", "Infinity"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xx", ",", "thetas"}], "}"}]}], "]"}]}], "]"}]}], "]"}], "/", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"logprob", "[", "thetas", "]"}], "]"}], "*", 
      RowBox[{"Exp", "[", "3563", "]"}]}], "]"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xx", ",", "0", ",", 
          RowBox[{"+", "Infinity"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xx", ",", "thetas"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.750743013161222*^9, 3.750743105295984*^9}, {
  3.7507431403336453`*^9, 3.7507431422992487`*^9}, {3.75074318304652*^9, 
  3.7507431904565334`*^9}, {3.750743230579804*^9, 
  3.7507432832308965`*^9}},ExpressionUUID->"b52c17b8-6d92-4e95-b649-\
cdbdadfe657d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.0008727233882367612`", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3563", "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"1958", "+", "t$1"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"2410", "+", "t$1"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"740", "+", "t$2"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"921", "+", "t$2"}], "]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"LogGamma", "[", "t$1", "]"}]}], "-", 
              RowBox[{"LogGamma", "[", "t$2", "]"}], "+", 
              RowBox[{"LogGamma", "[", 
               RowBox[{"t$1", "+", "t$2"}], "]"}]}], ")"}]}], "-", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"2698", "+", "t$1", "+", "t$2"}], "]"}], "-", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"3331", "+", "t$1", "+", "t$2"}], "]"}]}]], " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "1000", "]"}], "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", "t$2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "10", "]"}], "2"]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Log", "[", "10", "]"}], " ", 
            RowBox[{"Log", "[", "t$1", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"Log", "[", "t$1", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "10", "]"}], "2"]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Log", "[", "10", "]"}], " ", 
            RowBox[{"Log", "[", "t$2", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"Log", "[", "t$2", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t$1", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t$2", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"0.0008727233882367612`", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3563", "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"1958", "+", "t$1"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"2410", "+", "t$1"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"740", "+", "t$2"}], "]"}], "+", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"921", "+", "t$2"}], "]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"LogGamma", "[", "t$1", "]"}]}], "-", 
              RowBox[{"LogGamma", "[", "t$2", "]"}], "+", 
              RowBox[{"LogGamma", "[", 
               RowBox[{"t$1", "+", "t$2"}], "]"}]}], ")"}]}], "-", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"2698", "+", "t$1", "+", "t$2"}], "]"}], "-", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"3331", "+", "t$1", "+", "t$2"}], "]"}]}]], " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "1000", "]"}], "2"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", "t$1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "10", "]"}], "2"]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Log", "[", "10", "]"}], " ", 
            RowBox[{"Log", "[", "t$1", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"Log", "[", "t$1", "]"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", "10", "]"}], "2"]}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"Log", "[", "10", "]"}], " ", 
            RowBox[{"Log", "[", "t$2", "]"}]}], "+", 
           SuperscriptBox[
            RowBox[{"Log", "[", "t$2", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t$1", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t$2", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.750743078697937*^9, 3.7507431062163854`*^9}, 
   3.75074314289205*^9, 3.750743193295738*^9, 3.7507432457596307`*^9, 
   3.7507432867565026`*^9},ExpressionUUID->"2ea6172d-987b-47ce-85ae-\
1231fd48689a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"logprob", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.75071305906684*^9, 
  3.7507130711724615`*^9}},ExpressionUUID->"55d89105-ca7e-4024-9f47-\
7427d642738f"],

Cell[BoxData[
 RowBox[{"-", "3562.3752465982743`"}]], "Output",
 CellChangeTimes->{{3.750713068489257*^9, 
  3.7507130715000625`*^9}},ExpressionUUID->"1c97a3d2-b63c-4ac0-af67-\
933116cc3ee6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "posterior", " ", "theta", " ", "parameters", " ", "and",
     " ", "resulting", " ", "standard", " ", "deviations", " ", "and", " ", 
    "quantiles"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sdata", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "i", "}"}], ",", 
           RowBox[{"3", "+", "allgenes"}]}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ClearAll", "[", "logprob", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"sdata", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", "g1"}], "]"}], "]"}], "\[Equal]", "x"}],
                   ")"}], "&"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "al"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"al", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "binoutcomes"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"logprob", "[", "t_", "]"}], ":=", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r2", "=", 
             RowBox[{"f", "+", "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Total", "@", 
             RowBox[{"Flatten", "@", 
              RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
            "\[IndentingNewLine]", 
            RowBox[{"Total", "@", 
             RowBox[{"LogGamma", "[", 
              RowBox[{"Total", "@", "r2"}], "]"}]}], "+", 
            "\[IndentingNewLine]", 
            RowBox[{"noutcomes", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"LogGamma", "[", 
                RowBox[{"Total", "@", "t"}], "]"}], "-", 
               RowBox[{"Total", "@", 
                RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"-", "2"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"Total", "@", "t"}], "]"}]}], " ", 
             RowBox[{"(*", "math3", "*)"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"-", 
              RowBox[{"Total", "@", 
               RowBox[{"Log", "[", "t", "]"}]}]}], 
             RowBox[{"(*", "math4", "*)"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"+", 
               RowBox[{"cd", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"Total", "@", "t"}], "]"}], "]"}]}], "-", 
              RowBox[{"2", "*", 
               RowBox[{"Log", "[", 
                RowBox[{"Total", "@", "t"}], "]"}]}]}], " ", 
             RowBox[{"(*", "math5", "*)"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"nothing", ":", " ", "math6"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"+", 
              RowBox[{"Total", "@", 
               RowBox[{"cd2", "[", "t", "]"}]}]}], " ", 
             RowBox[{"(*", "math7", "*)"}], "*)"}], "\[IndentingNewLine]", 
            "+", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"cd", "[", 
               RowBox[{"Log", "[", "t", "]"}], "]"}], "-", 
              RowBox[{"Log", "[", "t", "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"theta", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "/.", 
          RowBox[{
           RowBox[{"FindMaximum", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"logprob", "[", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
               RowBox[{"x", ">", "0"}], ",", 
               RowBox[{"y", ">", "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"fnew", "=", 
         RowBox[{"f", "+", "theta"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nnew", "=", 
         RowBox[{"Total", "@", "fnew"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"quantities", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "EV", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{
               RowBox[{"T", "[", 
                RowBox[{"fnew", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], "/", "nnew"}], 
              "]"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "STD", " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Times", "@@", "fnew"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nnew", "^", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", "nnew"}], ")"}]}], ")"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "Quantiles", " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"T", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Quantile", "[", 
                 RowBox[{
                  RowBox[{"BetaDistribution", "[", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"fnew", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "al"}], "]"}], "]"}], "]"}], ")"}]}], 
                   "]"}], ",", "quantiles"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"al", ",", 
                  RowBox[{"binoutcomes", "+", "1"}]}], "}"}]}], "]"}]}], 
             ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "Theta", " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"T", "@", 
              RowBox[{"Table", "[", 
               RowBox[{"theta", ",", "noutcomes"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"f", " ", "+", " ", "theta"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Sequence", "@@", "fnew"}]}], "\[IndentingNewLine]", 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"csvquantities", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Prepend", "[", 
             RowBox[{"alnames", ",", "\"\<\>\""}], "]"}], "}"}], ",", 
           RowBox[{"T", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "qnames", "}"}], ",", 
              RowBox[{"T", "@", "quantities"}]}], "]"}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"savedir", "<>", "filename", "<>", 
           RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
           RowBox[{"symptomnames", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
          "csvquantities"}], "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"g1", ",", "allgenes"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "allsymptoms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749986355545104*^9, 3.749986435432844*^9}, {
   3.7499864988781557`*^9, 3.749986526349804*^9}, {3.7499865646322713`*^9, 
   3.7499865796706977`*^9}, {3.7499866302303867`*^9, 
   3.7499866346607943`*^9}, {3.7499872639658995`*^9, 
   3.7499873010315647`*^9}, {3.74998734380684*^9, 3.749987380794505*^9}, {
   3.7499875199935493`*^9, 3.7499875270291615`*^9}, {3.749987669005011*^9, 
   3.749987683793837*^9}, {3.7499879795859566`*^9, 3.7499880071980047`*^9}, {
   3.7500073255644426`*^9, 3.750007326266444*^9}, {3.75000745501347*^9, 
   3.750007456495473*^9}, {3.7500075144651747`*^9, 3.750007560922056*^9}, {
   3.7500077607438073`*^9, 3.750007816482705*^9}, {3.750007909708469*^9, 
   3.7500079453077316`*^9}, {3.750008026599474*^9, 3.7500080911065874`*^9}, {
   3.7500084602510357`*^9, 3.750008594395672*^9}, {3.7500087242346992`*^9, 
   3.7500087827192025`*^9}, {3.7500088231856737`*^9, 3.7500088318904886`*^9}, 
   3.7500090001523843`*^9, {3.7500092850868845`*^9, 3.7500093117005315`*^9}, {
   3.750009472521214*^9, 3.7500095011472645`*^9}, {3.7500095457009425`*^9, 
   3.7500095628609724`*^9}, {3.750009613046261*^9, 3.750009648130722*^9}, {
   3.7500098180306206`*^9, 3.750009818732622*^9}, {3.7500098655327044`*^9, 
   3.750009929165216*^9}, {3.750010065838056*^9, 3.750010075307273*^9}, {
   3.7500101301257687`*^9, 3.7500101719026423`*^9}, {3.750010311213887*^9, 
   3.7500103140218925`*^9}, {3.7500104865747952`*^9, 3.750010487479597*^9}, {
   3.7503287828441477`*^9, 3.7503288112829976`*^9}, {3.7503288442614555`*^9, 
   3.750328910779972*^9}, {3.7503293521359477`*^9, 3.750329418498464*^9}, {
   3.7503294665465484`*^9, 3.7503294671861496`*^9}, {3.75032954699789*^9, 
   3.750329564595721*^9}, {3.7503296930785465`*^9, 3.7503296992717576`*^9}, {
   3.7506248421929083`*^9, 3.750624864329347*^9}, {3.7506295244615335`*^9, 
   3.7506295624164*^9}, {3.750630758926902*^9, 3.750630798956572*^9}, {
   3.750630855303871*^9, 3.750630855600271*^9}, {3.7506312382845435`*^9, 
   3.7506312410925484`*^9}, {3.7506313327427096`*^9, 
   3.7506313657367673`*^9}, {3.7506320604723883`*^9, 3.750632060971589*^9}, {
   3.750632484013132*^9, 3.7506325052135687`*^9}, {3.7506331145828395`*^9, 
   3.750633129201065*^9}, {3.750655918899296*^9, 3.750655931285718*^9}, {
   3.7506559755117955`*^9, 3.750655985542613*^9}, {3.7507126843073826`*^9, 
   3.7507127657863255`*^9}},ExpressionUUID->"656204ee-2c7c-4b90-a8d3-\
39c18dc5ba1a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.750011060767307*^9, 
  3.7500110612041073`*^9}},ExpressionUUID->"428545ba-f714-46b7-9cfd-\
c22153e4abb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "various", " ", "measures", " ", "of", " ", 
    "\"\<spread\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"meanf", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "i"}], "]"}], "]"}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spread", "=", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"values", "=", 
           RowBox[{
            RowBox[{"Import", "[", 
             RowBox[{"savedir", "<>", "filename", "<>", 
              RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
              RowBox[{"symptomnames", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;", "3"}], ",", 
              RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"values", "=", 
             RowBox[{"resu", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"sp", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Abs", "@", 
              RowBox[{"Differences", "[", 
               RowBox[{"values", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/", 
             RowBox[{"Total", "[", 
              RowBox[{"values", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"fmax", "=", 
            RowBox[{"Max", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fmin", "=", 
            RowBox[{"Min", "[", "values", "]"}]}], ";", 
           RowBox[{"drms", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"values", "-", "meanf"}], ")"}], "^", "2"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"arms", "=", 
            RowBox[{"Abs", "@", 
             RowBox[{
              RowBox[{"Differences", "[", "values", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], " ", "*)"}], 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"only", " ", "works", " ", "for", " ", "two"}], "-", 
           RowBox[{"valued", " ", "case"}]}], " ", "*)"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"g1", ",", "sp"}], "}"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g1", ",", "allgenes"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<diffmeasures7_1gene_s\>\"", "<>", 
        RowBox[{"symptomnames", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\"\<SNP\>\"", ",", "\"\<norm.spread\>\""}], "}"}], "}"}], 
         ",", "spread"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "allsymptoms"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749986355545104*^9, 3.749986435432844*^9}, {
   3.7499864988781557`*^9, 3.749986526349804*^9}, {3.7499865646322713`*^9, 
   3.7499865796706977`*^9}, {3.7499866302303867`*^9, 
   3.7499866346607943`*^9}, {3.7499872639658995`*^9, 
   3.7499873010315647`*^9}, {3.74998734380684*^9, 3.749987380794505*^9}, {
   3.7499875199935493`*^9, 3.7499875270291615`*^9}, {3.749987669005011*^9, 
   3.749987683793837*^9}, {3.7499879795859566`*^9, 3.7499880071980047`*^9}, {
   3.7500073255644426`*^9, 3.750007326266444*^9}, {3.75000745501347*^9, 
   3.750007456495473*^9}, {3.7500075144651747`*^9, 3.750007560922056*^9}, {
   3.7500077607438073`*^9, 3.750007816482705*^9}, {3.750007909708469*^9, 
   3.7500079453077316`*^9}, {3.750008026599474*^9, 3.7500080911065874`*^9}, {
   3.7500084602510357`*^9, 3.750008594395672*^9}, {3.7500087242346992`*^9, 
   3.7500087827192025`*^9}, {3.7500088231856737`*^9, 3.7500088318904886`*^9}, 
   3.7500090001523843`*^9, {3.7500092850868845`*^9, 3.7500093117005315`*^9}, {
   3.750009472521214*^9, 3.7500095011472645`*^9}, {3.7500095457009425`*^9, 
   3.7500095628609724`*^9}, {3.750009613046261*^9, 3.750009648130722*^9}, {
   3.7500098180306206`*^9, 3.750009818732622*^9}, {3.7500098655327044`*^9, 
   3.750009929165216*^9}, {3.750010065838056*^9, 3.750010075307273*^9}, {
   3.7500101301257687`*^9, 3.7500101719026423`*^9}, {3.750010311213887*^9, 
   3.7500103140218925`*^9}, {3.7500104865747952`*^9, 3.750010487479597*^9}, {
   3.7500112361428146`*^9, 3.750011371270252*^9}, {3.750011403624709*^9, 
   3.750011462873613*^9}, {3.750011505633288*^9, 3.750011523464119*^9}, 
   3.7500143778958483`*^9, {3.7500554210086946`*^9, 3.750055455079154*^9}, {
   3.750055511738454*^9, 3.750055512643255*^9}, {3.7500555943873987`*^9, 
   3.7500556333104672`*^9}, {3.7500557131358075`*^9, 3.750055754897081*^9}, {
   3.7500557884371395`*^9, 3.750055961987445*^9}, {3.7500560501119995`*^9, 
   3.7500561369271517`*^9}, {3.750056308387053*^9, 3.7500563091358547`*^9}, {
   3.7503289198279886`*^9, 3.7503289307324076`*^9}, {3.7503298471610174`*^9, 
   3.750329857301035*^9}, {3.750627733745988*^9, 3.7506277410780005`*^9}, {
   3.750627821122741*^9, 3.7506278246795473`*^9}, {3.7506278582508063`*^9, 
   3.7506278714640293`*^9}, {3.75062792285052*^9, 3.7506279594325843`*^9}, {
   3.7506280077458687`*^9, 3.7506280254674997`*^9}, {3.75062805960036*^9, 
   3.7506281152768583`*^9}, {3.750628626898357*^9, 3.75062867979805*^9}, {
   3.750628815424688*^9, 3.750628830712715*^9}, {3.750628874845192*^9, 
   3.750628875500393*^9}, {3.7506301763594785`*^9, 3.750630176796279*^9}, {
   3.750631402413432*^9, 3.7506314028814325`*^9}, {3.7506331438026905`*^9, 
   3.7506331441926913`*^9}, {3.750656009379455*^9, 
   3.750656009909856*^9}},ExpressionUUID->"7c930844-9799-4a15-a7ec-\
570beb879ec8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7500112279216003`*^9, 
  3.750011228498801*^9}},ExpressionUUID->"7e179b1e-b662-45c8-9318-\
108341b63165"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Make", " ", "plots", " ", "for", " ", "alleles", " ", "sorted", " ", "by", 
   " ", "different", " ", "measures", " ", "of", " ", "spread"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7503289455368333`*^9, 
  3.750328976128487*^9}},ExpressionUUID->"2be90315-1c75-4265-8b8f-\
0586656cd3c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datadir", "=", "\"\<1gene-results_math7\\\\\>\""}], ";", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"sy_", ",", "g1_"}], "]"}], ":=", 
   RowBox[{"T", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"datadir", "<>", "\"\<gene\>\"", "<>", 
       RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
       RowBox[{"symptomnames", "[", 
        RowBox[{"[", "sy", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75005932966496*^9, 3.7500594082578983`*^9}, 
   3.750402446416243*^9, {3.75062493429747*^9, 3.750624935545472*^9}, {
   3.750624974717141*^9, 3.7506249823611546`*^9}, {3.750630193597509*^9, 
   3.750630194018709*^9}, {3.7506314083570423`*^9, 3.750631408715843*^9}, {
   3.7506331520707054`*^9, 3.750633152538706*^9}, {3.750656020471074*^9, 
   3.7506560209234753`*^9}},ExpressionUUID->"5c2376dd-2189-4a26-a4ff-\
108a33f9d2e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "spreads", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"spreads", "[", "sy_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"thespread", "=", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{"\"\<diffmeasures2_1gene_s\>\"", "<>", 
           RowBox[{"symptomnames", "[", 
            RowBox[{"[", "sy", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;"}], ",", ";;"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"thespread", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "3"}], "]"}], "]"}], "=", 
        RowBox[{"-", 
         RowBox[{"thespread", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"spreads", "[", "sy", "]"}], "=", "thespread"}]}], ")"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"spreads", "[", "sy_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"\"\<diffmeasures7_1gene_s\>\"", "<>", 
      RowBox[{"symptomnames", "[", 
       RowBox[{"[", "sy", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.750056589486947*^9, 3.7500566031369705`*^9}, {
  3.750059850035074*^9, 3.7500598526402783`*^9}, {3.7506281591597347`*^9, 
  3.750628239499876*^9}, {3.750630200461521*^9, 3.7506302009139214`*^9}, {
  3.750631416220456*^9, 3.7506314167040567`*^9}, {3.750633159714719*^9, 
  3.750633160104719*^9}, {3.750656028801489*^9, 
  3.75065602925389*^9}},ExpressionUUID->"f1afbafb-c78c-440e-924c-\
7f83bbaccda0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",Expre\
ssionUUID->"7e657153-6fa0-47f5-ae9d-b04af68f7a5d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geneseq", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"5", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geneseq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\< \>\"", "<>", 
      RowBox[{"geneseq", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "geneseq"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.750059536505723*^9, 
  3.750059558454962*^9}},ExpressionUUID->"79588f39-401f-4bd1-91a7-\
6ceb89887c62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numpairs", "=", 
   RowBox[{"Length", "@", "allgenes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sortcolumn", "=", "2"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", ":", " ", 
     RowBox[{"no", " ", "sort"}]}], ",", " ", 
    RowBox[{"2", ":", " ", 
     RowBox[{"normalized", " ", "spread"}]}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"columnnames", "=", 
   RowBox[{"{", "\"\<normspread\>\"", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sortspreads", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"spreads", "[", "sym", "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "sortcolumn", "]"}], "]"}], ">", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "sortcolumn", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"data", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"data2", "[", 
           RowBox[{"sym", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"sortspreads", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "numpairs"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"min", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"max", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"ticknames", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"geneseq", "[", 
            RowBox[{"[", 
             RowBox[{"sortspreads", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}], "<>", 
           "\"\<        \>\"", "<>", 
           RowBox[{"alnames", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<        \>\"", "<>", 
           RowBox[{"alnames", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "numpairs"}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"min", ",", "max"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "7"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<SNP\>\"", ",", "41"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"freq", "[", "\"\<symptom | SNP allele\>\"", "]"}], ",", 
            "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Large", ",", "Black"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Auto", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"T", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"numpairs", "*", "nalleles"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                  RowBox[{"(", "ticknames", ")"}]}], ")"}]}]}], "}"}]}], ",", 
            "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", 
         RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "Thick"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{
               RowBox[{"numpairs", "*", "nalleles"}], "+", 
               RowBox[{"1", "/", "2"}]}], ",", "nalleles"}], "}"}]}], "]"}], 
          "\[IndentingNewLine]", ",", "Auto"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"a4longside", "*", 
         RowBox[{"{", 
          RowBox[{"5.5", ",", "1"}], "}"}]}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<symptom \>\"", "<>", 
             RowBox[{"symptomnames", "[", 
              RowBox[{"[", "sym", "]"}], "]"}]}], ",", "42"}], "]"}], ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"labelposition", "[", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.99"}], "}"}], "]"}]}]}], "]"}]}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<sort7\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sortcolumn", ">", "1"}], ",", 
         RowBox[{"\"\<_\>\"", "<>", 
          RowBox[{"columnnames", "[", 
           RowBox[{"[", 
            RowBox[{"sortcolumn", "-", "1"}], "]"}], "]"}]}], ",", 
         "\"\<\>\""}], "]"}], "<>", "\"\<_1gene_std_s\>\"", "<>", 
       RowBox[{"symptomnames", "[", 
        RowBox[{"[", "sym", "]"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      "plot"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"sym", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sortcolumn", ",", 
     RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.750056738404808*^9, 3.750056797263712*^9}, {
   3.750059294923699*^9, 3.7500593010077095`*^9}, {3.7500595054304686`*^9, 
   3.750059519829294*^9}, {3.7500595627761693`*^9, 3.7500595884538145`*^9}, {
   3.7500596271886826`*^9, 3.7500596861099863`*^9}, {3.7500599858811126`*^9, 
   3.7500600217299757`*^9}, {3.7500600563620367`*^9, 3.750060083022483*^9}, {
   3.750060248148773*^9, 3.750060248507574*^9}, {3.750060343730141*^9, 
   3.7500603458361444`*^9}, {3.750060497437211*^9, 3.7500605087628307`*^9}, {
   3.750060744607045*^9, 3.750060745028246*^9}, {3.7500607934507313`*^9, 
   3.750060793887532*^9}, {3.750060944725197*^9, 3.7500609519168096`*^9}, {
   3.750401720482568*^9, 3.7504017426970067`*^9}, {3.7504020629499693`*^9, 
   3.7504020981124315`*^9}, {3.7504022679509296`*^9, 3.750402268918131*^9}, 
   3.7504023419106593`*^9, {3.7504024546686573`*^9, 3.7504024570398617`*^9}, {
   3.750402515711565*^9, 3.750402557207638*^9}, {3.7504027950038557`*^9, 
   3.7504027956122565`*^9}, {3.750403120344427*^9, 3.7504031214676294`*^9}, {
   3.750570244966874*^9, 3.7505702780389323`*^9}, {3.750570313825395*^9, 
   3.7505703725594983`*^9}, {3.750570456004045*^9, 3.750570457688848*^9}, {
   3.7505705104793406`*^9, 3.750570511836543*^9}, {3.7505705443002*^9, 
   3.750570595078289*^9}, 3.750625018757019*^9, {3.7506282608095136`*^9, 
   3.7506282913719673`*^9}, {3.7506283369718475`*^9, 
   3.7506283598570876`*^9}, {3.7506285051557426`*^9, 
   3.7506285055925436`*^9}, {3.7506302146263456`*^9, 3.750630215172346*^9}, {
   3.750631436516092*^9, 3.750631437296093*^9}, {3.7506331772491493`*^9, 
   3.7506331776235504`*^9}, {3.750656046772721*^9, 
   3.750656047412322*^9}},ExpressionUUID->"1c4ad68d-0b1c-4957-8a99-\
7fe5c5a842a7"],

Cell[BoxData[
 RowBox[{"resu", "=", 
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{"savedir", "<>", "filename", "<>", 
     RowBox[{"ToString", "[", "6", "]"}], "<>", "\"\<_s\>\"", "<>", 
     RowBox[{"symptomnames", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", ";;"}], ",", 
     RowBox[{"2", ";;"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7500607469002495`*^9, {3.7503290532550225`*^9, 
   3.750329064767843*^9}},ExpressionUUID->"74a319f0-c483-4f5a-a600-\
9cbb3fb2ba4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resu", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.259170041293112`", ",", "0.2835056871550766`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.008047270661176678`", ",", "0.006356164161544898`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0.24602617884103603`", ",", "0.273099777196446`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.27249871224939903`", ",", "0.29400954440503735`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"714.7260245717754`", ",", "714.7260245717754`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"266.147127108531`", ",", "266.147127108531`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2195.7260245717753`", ",", "3601.7260245717753`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"768.147127108531`", ",", "1425.147127108531`"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7509447236834235`*^9, 
  3.7509447245102253`*^9}},ExpressionUUID->"e0803910-0ce8-44c3-8d7a-\
ef14ff009cbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.259170041293112`", ",", "0.2835056871550766`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008047270661176678`", ",", "0.006356164161544898`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.24602617884103603`", ",", "0.273099777196446`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27249871224939903`", ",", "0.29400954440503735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"714.7260245717754`", ",", "714.7260245717754`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"266.147127108531`", ",", "266.147127108531`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2195.7260245717753`", ",", "3601.7260245717753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"768.147127108531`", ",", "1425.147127108531`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.750944725524227*^9},ExpressionUUID->"885c8cd5-2ca7-4cda-baaa-\
7d5905373c48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MF"}]], "Input",
 CellChangeTimes->{{3.750329070524253*^9, 
  3.7503290716786547`*^9}},ExpressionUUID->"16ce116d-cb84-4ea5-b0f4-\
64b12cad5e98"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.259170041293112`", "0.2835056871550766`"},
     {"0.008047270661176678`", "0.006356164161544898`"},
     {"0.24602617884103603`", "0.273099777196446`"},
     {"0.27249871224939903`", "0.29400954440503735`"},
     {"714.7260245717754`", "714.7260245717754`"},
     {"266.147127108531`", "266.147127108531`"},
     {"2195.7260245717753`", "3601.7260245717753`"},
     {"768.147127108531`", "1425.147127108531`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7503290720998554`*^9, 3.750329876785469*^9, 
  3.750336757420189*^9, 
  3.750944728457032*^9},ExpressionUUID->"77b85d2d-efc5-4461-ac0f-\
d642ecc994a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"resu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"resu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.2", ",", "0.35"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<conditional frequency symptom \>\"", " ", "S"}], ",", 
      RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
      ",", 
      RowBox[{"labelposition", "[", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7503291090095205`*^9, 3.750329160973212*^9}, {
   3.7503292148089066`*^9, 3.750329223825722*^9}, {3.7503299142255354`*^9, 
   3.750329958654413*^9}, {3.750330014502511*^9, 3.750330153904356*^9}, {
   3.7503301920776234`*^9, 3.7503302759901705`*^9}, {3.7503303183130445`*^9, 
   3.750330352679905*^9}, 3.750944709175398*^9, {3.750944754680678*^9, 
   3.750944819155591*^9}},ExpressionUUID->"92111910-fe2c-416a-8f47-\
a6d8951ab636"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[
         NCache[
          Rational[2, 5], 0.4], 
         NCache[
          Rational[4, 5], 0.8], 
         NCache[
          Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[
        1.], LineBox[CompressedData["
1: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
T/s/AXHQtg==
         "]]},
       Annotation[#, "Charting`Private`Tag$2612#1"]& ], 
      TagBox[
       {RGBColor[
         NCache[
          Rational[14, 15], 0.9333333333333333], 
         NCache[
          Rational[2, 5], 0.4], 
         NCache[
          Rational[7, 15], 0.4666666666666667]], Thickness[Large], Opacity[
        1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
OlHZ88+ohvZ/k1R6qA==
         "]]},
       Annotation[#, "Charting`Private`Tag$2612#2"]& ]}, {}, {}}, InsetBox[
     TemplateBox[{"\"first allele\"","\"second allele\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[1.], 
                    RGBColor[
                    NCache[
                    Rational[2, 5], 0.4], 
                    NCache[
                    Rational[4, 5], 0.8], 
                    NCache[
                    Rational[14, 15], 0.9333333333333333]], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[1.], 
                    RGBColor[
                    NCache[
                    Rational[2, 5], 0.4], 
                    NCache[
                    Rational[4, 5], 0.8], 
                    NCache[
                    Rational[14, 15], 0.9333333333333333]], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[1.], 
                    RGBColor[
                    NCache[
                    Rational[14, 15], 0.9333333333333333], 
                    NCache[
                    Rational[2, 5], 0.4], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[1.], 
                    RGBColor[
                    NCache[
                    Rational[14, 15], 0.9333333333333333], 
                    NCache[
                    Rational[2, 5], 0.4], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 5], 
                    Rational[4, 5], 
                    Rational[14, 15]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26666666666666666`, 0.5333333333333333, 
                    0.6222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/5, 4/5, 14/15]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 5], 
                    Rational[4, 5], 
                    Rational[14, 15]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 5], 
                    Rational[4, 5], 
                    Rational[14, 15]], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[14, 15], 
                    Rational[2, 5], 
                    Rational[7, 15]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6222222222222222, 0.26666666666666666`, 
                    0.3111111111111111], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[14/15, 2/5, 7/15]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[14, 15], 
                    Rational[2, 5], 
                    Rational[7, 15]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[14, 15], 
                    Rational[2, 5], 
                    Rational[7, 15]], Editable -> False, Selectable -> False],
                    ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.05, 0.9}], ImageScaled[{0.05, 0.9}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.2000000030612245, 0},
   AxesStyle->Directive[
     GrayLevel[0], 21, 
     Thickness[
      NCache[
       Rational[1, 500], 0.002]], FontFamily -> Automatic],
   DisplayFunction->Identity,
   Frame->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameLabel->{{
      FormBox[
       RowBox[{"\"p\"", "(", "\"frequency | data\"", ")"}], TraditionalForm], 
      None}, {
      FormBox[
       RowBox[{"\"conditional frequency symptom \"", " ", "S"}], 
       TraditionalForm], None}},
   FrameStyle->Directive[Large, 
     GrayLevel[0]],
   FrameTicks->FrontEndValueCache[{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{0., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {20., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {40., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {60., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-20., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-15., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-10., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-5., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {10., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {15., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {25., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {30., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {35., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {45., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {50., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {55., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {65., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {70., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {75., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {80., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}, {Automatic, {{0.2, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.25, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.3, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.35, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.15, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.16, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.17, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.18, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.19, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.21, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.22, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.23, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.24, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.26, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.27, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.28, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.29, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.31, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.32, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.33, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.34, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.36, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.37, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.38, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.39, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.4, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}}],
   GridLines->{None, None},
   ImagePadding->All,
   ImageSize->NCache[{
      Rational[75600, 127], 
      Rational[53460, 127]}, {595.2755905511812, 420.9448818897638}],
   Method->{
    "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[
            Rational[2, 5], 
            Rational[4, 5], 
            Rational[14, 15]], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
T/s/AXHQtg==
           "]]}, "Charting`Private`Tag$2612#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[
            Rational[14, 15], 
            Rational[2, 5], 
            Rational[7, 15]], 
           Thickness[Large], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
OlHZ88+ohvZ/k1R6qA==
           "]]}, "Charting`Private`Tag$2612#2"]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0.2000000030612245, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0.2000000030612245, 0}, AxesStyle -> Directive[
        GrayLevel[0], 21, 
        Thickness[
         Rational[1, 500]], FontFamily -> Automatic], DisplayFunction :> 
      Identity, Frame -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameLabel -> {{
         "p"["frequency | data"], None}, {
        "conditional frequency symptom " $CellContext`S, None}}, FrameStyle -> 
      Directive[Large, 
        GrayLevel[0]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, ImageSize -> {
        Rational[75600, 127], 
        Rational[53460, 127]}, 
      Method -> {
       "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[
          Rational[2, 5], 
          Rational[4, 5], 
          Rational[14, 15]], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[
          Rational[14, 15], 
          Rational[2, 5], 
          Rational[7, 15]], 
         Thickness[Large], 
         Dashing[{Small, Small}]]}, {"first allele", "second allele"}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
      Scaled[{0.05, 0.9}], {0.05, 0.9}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7503303309646673`*^9, 3.750330353709507*^9}, {
  3.7509448152711844`*^9, 
  3.750944820606394*^9}},ExpressionUUID->"7dc9ad2e-f50b-418a-880a-\
b3db1a6626a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<example_distr_condfreqs.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.7503303566891127`*^9, 3.750330382741158*^9}, {
  3.7509448353016195`*^9, 
  3.7509448387804255`*^9}},ExpressionUUID->"f9211cab-ce51-4082-8420-\
858be598f83a"],

Cell[BoxData["\<\"example_distr_condfreqs.pdf\"\>"], "Output",
 CellChangeTimes->{3.750330386453964*^9, 
  3.7509448466116395`*^9},ExpressionUUID->"d3d489b0-462d-48fe-8a50-\
f54ed3fe4abc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expectation", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Reverse", "@", "#"}]}], "]"}]}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"resu", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"resu", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.750944851354048*^9, 3.750944855612855*^9}, {
  3.7509448911809177`*^9, 3.7509449975117044`*^9}, {3.750945033049567*^9, 
  3.7509450430647845`*^9}, {3.7509452467573423`*^9, 
  3.750945250454549*^9}},ExpressionUUID->"7553c6a7-ac45-475a-b577-\
09853bd1543a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.259170041293112`", ",", "0.2835056871550766`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750944999227708*^9, {3.750945038821577*^9, 3.750945043439185*^9}, 
   3.7509452512345505`*^9},ExpressionUUID->"bcb8068a-c36a-4090-90ab-\
b82682758f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CentralMoment", "[", " ", 
     RowBox[{
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Reverse", "@", "#"}]}], "]"}], ",", "2"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"resu", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"resu", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.750945164496398*^9, 3.7509451825300293`*^9}, {
  3.7509452215476985`*^9, 
  3.7509452407513323`*^9}},ExpressionUUID->"54e88105-cc88-4068-b882-\
a930550a795a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.008047270661176678`", ",", "0.006356164161544898`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7509451761652184`*^9, 3.750945183154031*^9}, {
  3.750945224714504*^9, 
  3.750945241297333*^9}},ExpressionUUID->"ba9b988d-c073-43fc-adac-\
1afcc8932429"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Variance", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "\[Distributed]", " ", 
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"Sequence", "@@", "#"}], "]"}]}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"resu", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"resu", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7509450929858723`*^9, 
  3.7509450954038763`*^9}},ExpressionUUID->"14368894-2e59-4fdb-94dc-\
166a82a5dbd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"del", "=", "0.01"}], ";", 
  RowBox[{"Total", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"bd", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"resu", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "i", ",", 
          RowBox[{"i", "+", "del"}]}], "}"}]}], "]"}], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"bd", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"resu", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "i", ",", 
          RowBox[{"i", "+", "del"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"1", "-", "del"}], ",", "del"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7503307453989954`*^9, 3.750330759922621*^9}, {
  3.7503307967074857`*^9, 3.7503307997962914`*^9}, {3.750331290522154*^9, 
  3.750331455274043*^9}},ExpressionUUID->"1d85bc22-9240-4b43-acfa-\
b0784deb4148"],

Cell[BoxData["0.03219075671182148`"], "Output",
 CellChangeTimes->{{3.7503307583938184`*^9, 3.750330760515422*^9}, {
  3.7503307973158865`*^9, 3.750330803212697*^9}, {3.750331324421013*^9, 
  3.75033146494606*^9}},ExpressionUUID->"03da0f68-51fe-418a-b2a4-\
68a2355b2ed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"del", "=", "0.01"}], ";", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"resu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"7", ";;", "8"}], ",", "1"}], "]"}], "]"}]}]}], "]"}], "*", 
     RowBox[{"bd", "[", 
      RowBox[{"y", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"resu", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"7", ";;", "8"}], ",", "2"}], "]"}], "]"}]}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"Max", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", "-", 
         RowBox[{"del", "/", "2"}]}]}], "]"}], ",", 
      RowBox[{"Min", "[", 
       RowBox[{"1", ",", 
        RowBox[{"x", "+", 
         RowBox[{"del", "/", "2"}]}]}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75033622288325*^9, 3.7503363400082555`*^9}, {
  3.750336476258895*^9, 
  3.750336482405306*^9}},ExpressionUUID->"92aa8bb4-1a8a-4a04-8520-\
ea8b354fd93f"],

Cell[BoxData["0.027833744769475775`"], "Output",
 CellChangeTimes->{
  3.750336341677459*^9, {3.7503364776784973`*^9, 
   3.7503364836377077`*^9}},ExpressionUUID->"a3987965-625b-4ca4-9b52-\
f319469a8718"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.751001032952688*^9, 
  3.751001035667093*^9}},ExpressionUUID->"a4cf0954-a91e-4c11-8dd1-\
e7016746ba69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ils", "[", "y_", "]"}], "=", 
   RowBox[{"Log", "[", 
    RowBox[{"-", 
     FractionBox["y", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}]]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.751001118222438*^9, 
  3.7510011293462577`*^9}},ExpressionUUID->"8f2de507-64ce-4666-b64b-\
66f1542cbdb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FS", "[", 
  RowBox[{
   RowBox[{"ils", "'"}], "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.75100122196362*^9, 
  3.751001231698037*^9}},ExpressionUUID->"2e834708-5a14-4140-a316-\
07e13629e1ca"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"x", "-", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.751001222338021*^9, 
  3.751001232197238*^9}},ExpressionUUID->"348999a3-3c86-4eaf-b3a3-\
b376ab3b4884"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "*", "t"}], "==", "1000"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "k", "]"}], "*", "t"}], "==", "1000"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7510212048344336`*^9, 
  3.751021238296492*^9}},ExpressionUUID->"b51209e2-3e48-4261-b4b0-\
e76075728b8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", "1"}], ",", 
    RowBox[{"t", "\[Rule]", "1000"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.751021230730479*^9, 
  3.751021238717693*^9}},ExpressionUUID->"3cf0cd56-ed0c-4b35-bc1f-\
2088b9014c9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"priorc", "[", "x_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{"x", ",", "Reals"}], "]"}], ",", 
    RowBox[{"FS", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CauchyDistribution", "[", 
        RowBox[{
         RowBox[{"Log", "[", "1000", "]"}], ",", 
         RowBox[{"Log", "[", "1000", "]"}]}], "]"}], ",", "x"}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7509994984309044`*^9, 3.750999530613761*^9}, {
  3.750999588193462*^9, 3.750999589878265*^9}, {3.751018100127286*^9, 
  3.7510181004236865`*^9}, {3.7510187359532022`*^9, 3.7510187456408195`*^9}, {
  3.7510199222934866`*^9, 3.7510199223714867`*^9}, {3.7510200000284233`*^9, 
  3.7510200212912607`*^9}, {3.7510202874745283`*^9, 3.7510202877709284`*^9}, {
  3.7510207792653913`*^9, 3.751020789358609*^9}, {3.7510208341306877`*^9, 
  3.7510208342710886`*^9}, {3.751021069163701*^9, 
  3.7510210694601016`*^9}},ExpressionUUID->"8e65796a-690f-4fe1-aad8-\
5d12af0a56bf"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", "1000", "]"}], 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"6", " ", "x", " ", 
      RowBox[{"Log", "[", "10", "]"}]}], "+", 
     RowBox[{"18", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "10", "]"}], "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.7509995318149633`*^9, 3.7509995909858665`*^9, 3.751018101437688*^9, 
   3.7510187481368237`*^9, 3.7510199232606883`*^9, {3.751020003210829*^9, 
   3.751020022196062*^9}, 3.751020289050131*^9, 3.7510207908562117`*^9, 
   3.7510208391850967`*^9, 
   3.7510210703649035`*^9},ExpressionUUID->"08a92458-3fa0-4eb1-aef4-\
2d98453e6f22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"priorc", "[", "x_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"x", ">", "0"}], ",", 
    RowBox[{"FS", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"GammaDistribution", "[", 
        RowBox[{"1", ",", "1000"}], "]"}], ",", "x"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7510209691187253`*^9, 3.7510209748127356`*^9}, {
  3.7510211355079117`*^9, 3.7510211376919155`*^9}, {3.7510212683577447`*^9, 
  3.7510212701205482`*^9}, {3.751021378462738*^9, 3.751021379055539*^9}, {
  3.7510235032990713`*^9, 
  3.751023525903511*^9}},ExpressionUUID->"af3b2ccd-a23b-4969-b43d-\
d824694998ca"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "x"}], "/", "1000"}]], "1000"]], "Output",
 CellChangeTimes->{
  3.7510209800231447`*^9, 3.7510211389399176`*^9, 3.7510212737865543`*^9, 
   3.75102137949234*^9, 3.7510215466954336`*^9, {3.7510235051398745`*^9, 
   3.7510235264651117`*^9}},ExpressionUUID->"23d724e3-b39d-4875-ac8c-\
56ad28630fb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"priorc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"10", "^", "4"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7510210358420424`*^9, 3.751021055622877*^9}, {
  3.751021276516559*^9, 3.751021309541817*^9}, {3.751021577505488*^9, 
  3.7510215870371046`*^9}},ExpressionUUID->"7100cf0d-a2fe-4fa0-b940-\
b2eceb1afd8b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1: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
DBvM7ND/ASsOuTE=
       "]]},
     Annotation[#, "Charting`Private`Tag$401896#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9999.999795918367}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.751021047401663*^9, 3.751021072377307*^9}, {
   3.7510212772341604`*^9, 3.7510213103842187`*^9}, 3.751021381395543*^9, 
   3.7510215479902363`*^9, {3.7510215785350895`*^9, 3.7510215873803053`*^9}, {
   3.751023506356677*^9, 
   3.751023527135913*^9}},ExpressionUUID->"e4626697-27c5-4063-8635-\
8a545abb5076"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"priorc", "[", 
     RowBox[{"10", "^", "x"}], "]"}], "*", 
    RowBox[{"10", "^", "x"}], "*", 
    RowBox[{"Log", "[", "10", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751023098897561*^9, 3.751023145636243*^9}, 
   3.7510232676294575`*^9, {3.751023348359599*^9, 3.7510234167033195`*^9}, {
   3.751023534545926*^9, 
   3.7510235487731514`*^9}},ExpressionUUID->"8bd1f12e-3e92-4d60-a8d9-\
d7cb459a8d2f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1: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
OzA=
       "]]},
     Annotation[#, "Charting`Private`Tag$402471#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9999998775510204, 4.99999987755102}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7510231361826267`*^9, 3.751023146088644*^9}, {
  3.7510233861740656`*^9, 3.75102341717132*^9}, {3.75102350816628*^9, 
  3.751023549256752*^9}},ExpressionUUID->"18c03e05-fa6b-4f3e-8de9-\
01b00da61511"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", "7", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.751023159130267*^9, 
  3.751023167725882*^9}},ExpressionUUID->"0b6b63fb-c45e-4e5a-a606-\
02fa95323d11"],

Cell[BoxData["1096.6331584284585`"], "Output",
 CellChangeTimes->{{3.751023163997475*^9, 
  3.751023168053482*^9}},ExpressionUUID->"ceacd0ad-88b8-41f4-a5b2-\
9e9759c0b6ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"con", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", 
      RowBox[{"10", "^", "9"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.751019391937355*^9, 3.751019412950592*^9}, {
  3.751021448368461*^9, 
  3.751021457260477*^9}},ExpressionUUID->"5bb7dbd0-fe7c-4f4a-a30d-\
5a0cc4aabedf"],

Cell[BoxData["1000000000"], "Output",
 CellChangeTimes->{
  3.751021455794074*^9},ExpressionUUID->"a4b24159-b645-470d-a178-\
370c967eb1aa"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"integrand", ",", "initprob"}], "]"}], ";", 
   RowBox[{
    RowBox[{"integrand", "[", 
     RowBox[{"x_", ",", "a_", ",", "q_"}], "]"}], "=", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"0", "<", "x", "<", "1"}], ",", 
      RowBox[{"FS", "[", 
       RowBox[{
        RowBox[{"bd", "[", 
         RowBox[{"x", ",", 
          RowBox[{"a", "*", "q"}], ",", 
          RowBox[{"a", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}], "*", 
        RowBox[{"priorc", "[", "a", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initprob", "[", "x_", "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"integrand", "[", 
     RowBox[{"x", ",", "a", ",", "q"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", 
      RowBox[{"+", "Infinity"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", 
     RowBox[{"+", "Infinity"}]}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "5"}], ",", 
    RowBox[{"MaxRecursion", "\[Rule]", 
     RowBox[{"10", "^", "6"}]}], ",", 
    RowBox[{"MaxPoints", "\[Rule]", 
     RowBox[{"10", "^", "6"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7XL6kmrDp9eO37Y91QLR92tk9EH0u8wUUxAtJivm
A6LblpT4gejpZz8GgegPAVGhIPrUnr3ZIHpR8L4cEL1M2bcYRH+yyK4C0ZNm
zK4H0QVPRLtB9KwztRNBtJN87BQQzef6aAaI1nsgvwxEm2h7rQLRB46+Wgei
1901PQSiNaz+HgHRE9aangarVzp0FkRPjTx6FUQ/umV0A0QrWXB8B9GshWq/
QPQN5SP/we6XuwimD55oZm0E0nKndrCBaMH5vSIgeq/TcjEQzXRVNQlEO9gk
gemwyaeKQPSZGV+LQTQAALSxoQ==
  "],ExpressionUUID->"4130ef19-7cd6-409a-afec-3f56bc7d90b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initprob", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.7510188566818147`*^9, 3.751018860098221*^9}, 
   3.751019321626031*^9},ExpressionUUID->"6b226763-0b13-40a8-8716-\
49e76f70bdb7"],

Cell[BoxData["0.9931822911831097`"], "Output",
 CellChangeTimes->{
  3.7510188606598215`*^9, 3.7510189310783453`*^9, 3.75101918423559*^9, {
   3.7510193222812324`*^9, 3.751019329941846*^9}, 3.751019477877906*^9, {
   3.751019519030778*^9, 3.751019553803239*^9}, 3.7510196126787424`*^9, 
   3.7510196893372774`*^9, 3.751019748960582*^9, {3.7510197805828376`*^9, 
   3.751019796916066*^9}, 3.75101982766372*^9, 3.7510198983318443`*^9, 
   3.7510199298595*^9, {3.751020007828437*^9, 3.7510200258464684`*^9}, 
   3.7510200765465574`*^9, 3.7510201445002766`*^9, 3.7510202474760575`*^9, {
   3.7510205214905386`*^9, 3.75102055036619*^9}, 3.751020606931889*^9, 
   3.7510207376757183`*^9, 3.751020798281825*^9, 3.7510208480459127`*^9, 
   3.7510209885885596`*^9, 3.7510213394782696`*^9, 3.751021387432754*^9, 
   3.751021554245847*^9},ExpressionUUID->"45f0a8f6-2659-433d-bb6e-\
b5dce324ed70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"initprob", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.05", ",", "0.95", ",", "0.05"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<conditional frequency of symptom \>\"", " ", "S"}], ",", 
      RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
  RowBox[{"(*", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
     ",", 
     RowBox[{"labelposition", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.751016840310873*^9, 3.7510168724313293`*^9}, {
   3.75101711749216*^9, 3.7510171202065644`*^9}, 3.751017650123895*^9, {
   3.751019085768217*^9, 3.7510190862518177`*^9}, {3.751020161270306*^9, 
   3.7510201914251595`*^9}, {3.7510206510175667`*^9, 
   3.7510206516727676`*^9}},ExpressionUUID->"bff23df7-a040-4301-905c-\
ba58d891f486"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 5], 0.4], 
      NCache[
       Rational[4, 5], 0.8], 
      NCache[
       Rational[14, 15], 0.9333333333333333]], PointSize[
     0.019444444444444445`], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0n5U0NX/lvff2EP5O+zO3nnDeOPHe3sQY
BA7bd2wy1/Y4BJM/ae931nOCypn39gxgcMF+ZanxrbJT7+3Byo0v27f5/Xtf
dPK9fXoaCFyzb3Q7pH/xBEz/TfsHE11eHtjwwv7sGRC4Y+8t2/dK/wTMvAf2
lorFVmpw9Q/tr8hA5CHueWy/YxJE/zmw/if2Ez0h5kPse2bP4w+xnxFs3gv7
rlyI+yDmvbQ3PQNxP8S81/ZaKyD+g5j3xj78DMT/EPPe2cumQMIHADTjmtc=

      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameLabel->{{
     FormBox[
      RowBox[{"\"p\"", "(", "\"frequency | data\"", ")"}], TraditionalForm], 
     None}, {
     FormBox[
      RowBox[{"\"conditional frequency of symptom \"", " ", "S"}], 
      TraditionalForm], None}},
  FrameStyle->Directive[Large, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->NCache[{
     Rational[75600, 127], 
     Rational[53460, 127]}, {595.2755905511812, 420.9448818897638}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 0.995930402695311}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7510169905859365`*^9, 3.7510172676268234`*^9, 3.7510176536807013`*^9, 
   3.7510176958661757`*^9, 3.7510177468782654`*^9, 3.7510178649714727`*^9, 
   3.7510179151567607`*^9, 3.7510180004889107`*^9, 3.7510180500345974`*^9, 
   3.751018317014467*^9, 3.751018367808156*^9, 3.75101886551143*^9, 
   3.751019076767001*^9, 3.7510191416007147`*^9, 3.7510193128120155`*^9, {
   3.751019758788599*^9, 3.751019799458871*^9}, 3.751019830144125*^9, 
   3.751019904306655*^9, 3.7510199367235117`*^9, {3.7510200117752438`*^9, 
   3.751020030557677*^9}, 3.751020079276562*^9, {3.751020148337884*^9, 
   3.751020194638765*^9}, 3.751020273543703*^9, 3.7510205270285487`*^9, 
   3.7510205701782246`*^9, 3.7510206271963243`*^9, 3.7510206840272245`*^9, 
   3.7510207606077585`*^9, 3.751020812852251*^9, 3.7510208647847424`*^9, 
   3.751021006685591*^9, 3.751021356170299*^9, 3.751021397775572*^9, 
   3.7510215654310665`*^9},ExpressionUUID->"a28963de-3af6-471f-a00a-\
5d31214d28b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"priorclog", "[", "x_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{"x", ",", "Reals"}], "]"}], ",", 
    RowBox[{"FS", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CauchyDistribution", "[", 
        RowBox[{
         RowBox[{"Log", "[", "1000", "]"}], ",", 
         RowBox[{"Log", "[", "1000", "]"}]}], "]"}], ",", "x"}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7510000848535347`*^9, 
  3.7510001749748926`*^9}},ExpressionUUID->"78c7da4f-c4a6-4cb7-8d7b-\
dea41aae4aea"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", "1000", "]"}], 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"6", " ", "x", " ", 
      RowBox[{"Log", "[", "10", "]"}]}], "+", 
     RowBox[{"18", " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "10", "]"}], "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.751000176254095*^9},ExpressionUUID->"08ccb2df-0c81-49f6-9806-\
35241532b90e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"priorclogit", "[", "x_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"0", "<", "x", "<", "1"}], ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"CauchyDistribution", "[", 
         RowBox[{
          RowBox[{"Log", "[", "1000", "]"}], ",", 
          RowBox[{"Log", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"ils", "[", "x", "]"}]}], "]"}], "*", 
      RowBox[{"FS", "[", 
       RowBox[{
        RowBox[{"ils", "'"}], "[", "x", "]"}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.751001037461096*^9, 3.7510010644491434`*^9}, {
  3.7510011450554852`*^9, 3.7510011473642893`*^9}, {3.7510011856779566`*^9, 
  3.751001199483981*^9}, {3.7510012412296543`*^9, 3.7510012569856815`*^9}, {
  3.7510105345614967`*^9, 
  3.7510105885843916`*^9}},ExpressionUUID->"b0b5c9ef-208b-400e-9156-\
28dc4cf63c30"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"Log", "[", "1000", "]"}], 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Log", "[", "1000", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1000", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "x"]}], "]"}], "2"]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.751001200934783*^9, {3.751001246252863*^9, 3.7510012574224825`*^9}, {
   3.7510105420963097`*^9, 3.7510105889743924`*^9}, 
   3.7510106839785595`*^9},ExpressionUUID->"4879d919-d70f-4e41-9020-\
ba2c4b657409"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"logitintegrand", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0", "<", "x", "<", "1"}], "&&", 
     RowBox[{"0", "<", "a", "<", "1"}], "&&", 
     RowBox[{"0", "<", "b", "<", "1"}]}], ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"bd", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Exp", "[", 
         RowBox[{"ils", "[", "a", "]"}], "]"}], ",", 
        RowBox[{"Exp", "[", 
         RowBox[{"ils", "[", "b", "]"}], "]"}]}], "]"}], "*", 
      RowBox[{"priorclogit", "[", 
       RowBox[{"a", "+", "b"}], "]"}], "*", 
      RowBox[{"priorclogit", "[", "b", "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7510015358839717`*^9, 3.751001555852007*^9}, {
  3.7510015936986732`*^9, 3.7510016007498856`*^9}, {3.7510103835872245`*^9, 
  3.7510103917900457`*^9}, {3.7510104460625415`*^9, 3.7510104506801496`*^9}, {
  3.75101069595938*^9, 3.751010716816617*^9}, {3.751017404641864*^9, 
  3.751017410803875*^9}},ExpressionUUID->"60e74f47-ffbd-4677-a1aa-\
70da9aae1c7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "a"}]]}]], " ", 
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "-", "b"}]]}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "1000", "]"}], "2"]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "b", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["b", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "b"}]]}], ",", 
      RowBox[{"-", 
       FractionBox["a", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "a"}]]}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Log", "[", "1000", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1000", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "a"}], ")"}]}], "a"]}], "]"}], "2"]}], 
     ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Log", "[", "1000", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1000", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "b"}], ")"}]}], "b"]}], "]"}], "2"]}], 
     ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7510015899858665`*^9, 3.7510016075982976`*^9}, {
   3.7510104344717207`*^9, 3.751010452364952*^9}, {3.751010686022163*^9, 
   3.7510106973009825`*^9}, 
   3.7510107460822687`*^9},ExpressionUUID->"23ea33f8-160a-4274-a667-\
dfae6114fceb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logitintegrand", "[", 
  RowBox[{"0.65", ",", "0.5", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7510103191123114`*^9, 3.7510103504683666`*^9}, {
  3.7510107068637996`*^9, 
  3.7510107073162003`*^9}},ExpressionUUID->"7534d763-4e13-4814-828c-\
5092c977a0a2"],

Cell[BoxData["0.008493493506669647`"], "Output",
 CellChangeTimes->{{3.7510103204383135`*^9, 3.7510103515447683`*^9}, {
   3.751010690514971*^9, 3.7510107077062006`*^9}, 
   3.7510107464410686`*^9},ExpressionUUID->"8b1e8863-44d3-490f-8a11-\
943a52bf9c94"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{"logitintegrand", "[", 
   RowBox[{"0.75", ",", "x", ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7510167236538677`*^9, 
  3.751016732592684*^9}},ExpressionUUID->"35bf2fc0-fdd4-4333-a7a1-\
f8b95820b864"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"priorclogit", "[", "x", "]"}], "*", 
    RowBox[{"priorclogit", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Auto"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Axes", "\[Rule]", "None"}], ",", 
     RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<conditional frequency of symptom \>\"", " ", "S"}], ",", 
        RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], 
       "}"}]}], ","}], "*)"}], 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
  RowBox[{"(*", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
     ",", 
     RowBox[{"labelposition", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7510102760562353`*^9, 3.7510103074902906`*^9}, {
  3.751010366536394*^9, 3.7510103670043955`*^9}, {3.7510107512770777`*^9, 
  3.751010793724752*^9}, {3.75101083801323*^9, 3.7510108386060305`*^9}, {
  3.7510166446157284`*^9, 3.751016707327839*^9}, {3.7510167815611696`*^9, 
  3.7510167954451942`*^9}},ExpressionUUID->"c0f490e3-a6aa-4ffc-8af5-\
15bfd2925c0d"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJysvXdUFM/Th4s5Y85rzpjzYmoz5rxGjJgzRowgioDKknPOsATJYAARlUUx
CwZEEReRrJjFwMXfO58a7uyZc8/3nOs/e/axtqaquru6u3pm6LZhz6JNNTU0
NMY21NCoVfV5PcVpqeGTExPweWCabou4urdYh7nulmn6V5mQb1pUw1upf1eN
d65sf0Imy1TjDWXR/ZT62Wr8mKz3DokyV43ra+yfJJO9U+NbQq61lasK1Pjq
pY3LUvVL1PjiGituVlZ+UOP4Dv+E/uIz2VvvwOgkD/IXfMbVA7d+JNmSv+Cx
TQ/2Wu9nRf6C9297u31kPSvyF/xW7+4jTNpbk7/g3kP6bj0gsyN/wZ2MQped
X+RG/pKdTYc/1bkfQv4K/YK/8EPoLzj8wnd8HrF4uMl0tTn5C8626EofrDMh
f8Hv+1/5Zep4hvwFr3HUfNXM7ybkL/j3XulDnnY+R/6CGxZHDfg2xIb8BR/5
vr1xzWxv8lfoF/yFvUJ/wdFe+D04/MJ3fH7p0+G0eW1j8he8b9PbWe9WniJ/
wa8cXrJc97Qx+QteMrCs/5VaZ8lf8Akjhpx5FSwnf8HDbzzRDungQf4K/YK/
sEvoLzj6IfwFR3tBLzj8wnd8XsqLXmsYb0T+gnuf2u6lmXmK/AV/XbGkxqER
JuQv+JjJiop+5hbkL3iSc4P3YyvdyF+hX/AX1xf6C47xBX/B0Q/hLzjaC9cD
h1/4js+lXi9ehdQ5Tf6CrxlX2TrCg29f8AaVs5ZEn7Ikf8GPd47rYF3Gt6/Q
L/iL6wj9BUfegL/gGF/wFxz9EP6Co71gBzj8wnd8vj3s1z//HT9+wb+en+3s
dIUfv+CS3Q1NOm30IX+FfsFf6BP6C458CH/BkTfgLzjGF/wFRz+Ev+BoL9gH
Dr/wHZ+70u2Dg9u6kL/gLlre3R66B5O/Qr/gL34n9BcceR7+giMfwl9w5A34
C47xBX/B0Q/hLzjaC3aDwy98x+fdeX29B/e+RP4K/YK/+H+hv0IOf4Uc/go5
/BVy+Cvk8FfI4a+Qwx8hx3chPzM5c+cd/VD6/BGzP9+uYxw78nvLF5mM/3+n
mfNmet33ZSUy51B9yXvi79b1qKeb6cveauQbKxRFxM+aPyx+u+siex4ybIVK
WkZceF1cB/ohD97boF1+p6+xJI/r47qQB1dMbqe0+83Lwy7Yg+/4VDhWtBq4
LID0gI/ZWmNO5I7rpAf/D/thHzjshB3gsAd6waEf34X6cV2xdS/+f9HnxVP/
NFfQd/w/OH4vjH/fJfcCJMpH9LvEQ2tt1nT0IL/w6Xkg3eFrkjXJgzu4Ltu8
4Oc51kqxebFc9Zz09Dmk/B2/2JU45Dt0OqebcMyMafzv3xuSz6n56ZznFVfi
kPfT0nrz4LkZ+6aY81QqV5F8aaXHQc1ensQh3zCz5qKV78/TuID852sWJUa1
g6hdIF/QPfHzn5vWNF4gb7C08NUyu3hqL8g3i5xq69LXjdpJbD0vjDPaA3p2
9010MFjlSHKIK+IPeyDfoiRr7KCu/vQd8og/7ATv4G0xyGKzPdkJ3qifXqVm
RARdF+2D9oJ+cLQX/ASHX7guuNRo6cConbZ0XXBfmfaTEbPDKT5CPbAH7Y/+
AHvA0R9gD7jQHvDtayxCLOJ4e8Bt+9/qvTGJt0eoB/agf6G/wR5w9DdcF7w8
d/aYrT0c6LrgZZfXaiyeEkkcef3isr2q452iST/6Kfon7EG/Rn/GdSHvkqrX
aeAwfv8Frjvg/iXdPv4kDz2TDR+ZH23hTfaAp0wbaljL6zLZg9+h/8MeXAfj
BfLg6Lfof9CD/gmO66N/on9AHv0KHPLoV2g/yKPdwSGPdkd7QB7tBQ55tBfi
CHnEGfECRzwhjzgg/vgOee0W+ZeSUyLoO/4fHHYI1yeIv3Aex7gQziOIm1Ae
8RFbb0AP+if8BUc/gX3C60KvkOO72DoK/rGTp0b5J3nx8weXR5E/Kd9xXKb9
xXJrsjX5K8zPlNc4+Y33Py+8L7GiOAjlwSH//GVCYfOVVtRPwPd6Pf/bdLUN
tTv4mOu/Zm7Tc+T7Pcf9Zv/sVMPMh/ykegXnL+TgH/xCnMH7RB9sMEaTl4d/
8AvyNA/3cjuxq5c7ydP44PyCPHizGK10ZsfLw2/4C3lw65WXCgpdeXsQD8QB
HPFAHOAP9MEv2E3zIWc/7AOHnbADHPZgHY54v5ifqhWo7UbrcPAW2UNDCwa7
0jocXEthM3mxhjuNC/B6j8KOTprA50/4t2x+vV0X8q8SR/u69fiiUdcqin4P
u2AP5Gnffyz3UIdZF0ke9sJOyIMPf+M+xbhHOMnDD9gPefCKdm1bD2jJrwfg
H/yifs/9Dn7BH3D4BbvpOpz9sA8cdsIOcNgz6Hst1VJZLH12n9nx3ofTgcw3
+HNzbfkT4jtyN+YV9rNnlpUXkhSKLOLNRlgO03toy5K0bEfKVW+If/l4pzLH
3Y7FZOY0UurnEdf78uda4V1H5vD0llxf8oE48gC+4/q4Ljiuj+tCD/jD75nx
bsXXSB52wR7Ig5tZHT612DWZ5GEv7ATH72AnrgeO60IvOPTju1DPsoHT+tzX
d6NPYRzA30xzSHHcfpW+4//BB/Wve1glzSe+2NF3++MnLqzDKc8eMlmpmn7Y
IeSQh56N9xcsWzYinvjphR07d1JeZ7uaNSoP1Ywgvicw5o5clcZ0t0d27vMt
mO9XnF2wB9fD74T+guO6kBfGDXZAHvbADnDYg+/C60KvkOO78LoYv7Cr6Zjd
ZnbHbpD9tE+f2kNzTRd+vOP/wTH/CeOP7/gd9DsvmVigL3lG/99uxmud5xuC
qB+CBxmqyuXlgSSP686MbebffZAdM1G8sFNJX/NxfXWo/c0uQdRvwe+F5hnk
FAaRPPSMr22r5fXNtmqdeMlLoXjLj5tFHRoPeWZPcYP9WSGy8Y6PrlEchfM+
5TuR/qm2v+P0h/0NGKuh8ZA12TXD/GNsAHHkjfHrDg/UeetHehEPxA12gyM+
kEdcEU/oh/yRCq2+GYW+ZCe4qc6x9wsnJZM89NyNi663yMKX1mHgwnZHvNEu
sBMc8Yc82g3thfhCXhg38AsRl6ybRPP2g0/Nd1zj2oq3H/pbavjParvcj+xB
+wvbHXz05XUZky38+ToJ9//oD2g/cLQj2g8c7Yj4giP+iCM44gx5+Id2gZ+Q
RxzgJzj8pfbg9CA+8BPy8JfWJ4J8gvYSqweKzQvC9TzsUauXctcT2xcI9eO7
2H5BbL4Tjl/YKeToJ8jT+jodF1yf5kX2i9VzhHnAq/+RBKm8mPS0XXzt/LYK
H1p3gq8++nbj8buBpFc4vqBfbFxgntL9u71m7SMKsr/n00VzJcpCNnp7g71j
0n2Jw64XO8z2vtsZQhx2FeWklXQdFknrCVyn4cPf01ceD2QKowFvKyvfk544
+e2RdXb6EIe811lP/00DLpIc7JnlKS9Nbc3nJfBXPy9dGWMWTfL4TO6X02bW
b14Pftd3S1F+s2ZXKG5i7S5W96b5+qy2Qcl3fp0jVg/H/lLYDzFvC+WxXxHK
I09cvnLGrmvj6ySP/Y5QHn4L68lCO3E9IYdeIce+S63/c/0J/Xmvy34Tp5F8
/UEoj/aD/NXjbkWLiuPJbvD04oMBrW34OKP/C+sSsEvIhfGBXlxHqB92Cddd
wn4CObF1GsYH8gDiLIwD9pVCjnwLe+vcbzvm+EYFjS9w3UFrlylTQmkcgccF
Ntmzu000cdhzy9UoZ7GjJ9kPjvEOjjz9Jdjr7IqeIRQvyCMPYFyAIw9AHnpG
7m85ze9eFPkp7OewG/28Zs26bdrbBlN8MX/K3X3HvzFPIT2In1AP4oT4oB8L
5aEf8f57YLtmtCPf3tCT1etV+tP+N2j8gyO/wX/EG3GGPeBoF3DEG/0f8QIX
xp/0cPkT9lB+5fIn5jXoWbT1ycvINkmkH/rQLui34Jh3aL7BOSc376A9ECe0
C+IrzBvID7RP4eYdyvvcdZGfYTc48j84fof8j++wE/kZcYAepe1K77HPb1L7
wX60L/Tjd4gbfi8c78jjaP+aO+L9Rsx3ofiAW8Xv2f6sliNxtP+iQ/dVdx/w
8yn0QQ/k8DuhPDj0076Sq6845zYe0qsWf36K+sruoPTbze47kl/Q83p8qKnR
M/4cH9yvY4j0YIYX6UE9pvmWO7N7NLMjPViHnl+oHNPN3JH0gHttO/Jbftqd
9KB+80BX8/X4xbakB+uW2i1Ci/Rm8HrAj+5tWLp2GK8H9Z6YITuCV7nz9mBc
t9HZdOylgTPpAb+qrLtxRLkn6UGdKk/bfvax00583uP6r90ta50bMz35vMfx
0Xn1n/b28KV5FvVsyZaU+SFn7GkcoX+1uNT73M+NrtRO4Es/DZS90fCidoJd
aC/0D9i1NfGdebuLHsRh1+Dex9MGjPeldoIetBfyLPTkDdGIvxXuRBx6snvI
s25/5u+jgB60F9ZL0KNf8+bs9I6OxOn+tZ0Om/ZX8PddQA/aC/sR6Lmsm1G4
r5ETcejZe/3snYre/H0a0IP2wriGnt639OJqpLgSp/OjCO1JJ7d4U94Ef5a+
SlXSPpC+o12K/E/eeP+Jz5tUn3bPCWmjGUPxF+YHxBMc6zf8XigP/cL8SXUw
rr9hfQWOODidHPbqXNQV6le07+fyAPqncL2B/gl9wVpZX74HRxOn8/HPN1dJ
FwTQ74XrW/wev4Me/B4cehAf/A7zPtqFztlVBV/vBflTfBBv9H/EExz9H3ox
3rGOQn5HvzhhEb2ouE0UxV24nqT6LRd/4f4R3DHzlKlKL4bshh+wH3aCo79B
P7hQP/iM4TnDUmsmkD/4HdYtsANxQr4Cx/WRr/Ad8ujP6Pe0v+P6P+IFuxA3
xEts3hf2c3DoQdzgp1AeHPKIA+wGx/yOfoD2/666bfXhzkXiaB/33vuP3Wzg
Q/McnW/Ym3RqY+lJeRz9HPkc8UF/Rj7H9XAdXBd6wXFdcFwf14VfGB/Iz2gP
cORnyCPvIg9DHhx5GPLIr8i3dJ8cx5FvIY/2R16FPDjyKvzB77CuAMfvsK6g
9QEnj/UDOPVTbv2AdQDksU4AhzzWCRgvkMd6ABzyWA/QepTbp9zp4WWy3NWZ
OM4Pi2f7P2s2gV9H4fyw5s4+FnsdeI51cevTXRovOuFCHOMmf3jFHf3XXtR/
0N98P2cNkx/g7xMQjgvkfdp3nhnSPyGB39+hvzVfURg2p5cDcegf1HHcY52F
TqSfzr036Tw9VpO/3wk8bUy7ns4rrUgP2tPiRcPELWttSQ/iYxzZoEmjM2ak
B7y235QJzSMsSA/auXFC0M4Lv61ID+K5aXKHUZNzeT3gA+bfiPjUVU560P4P
/dbnPr7H60H8HbfahT39yPsFbjon9GdREe8X+sXjUVd7yDbw5+/43FHn4ur6
6dakB3yiRva3X+f5/IA8tyJgj3OpnQPNy3HPNkoCq9X5sd4bFpLmeq4ax/rN
/fGaa8eqcazHTh2c0sOgGsf6asjXOjonq3Gsl162Myi8UI3D/plXgq76VOMY
D+3fDK1MrMZT7axtq59Hg6e3Of2r+nk0eH7P2KF51c6dwR+NyJmQV+18GXz9
lGN986qdI4MPdpV8rn5fE3hSMxPf6vcXgW+t2Hjx3ziZUT508b88Cd4oO+/S
P360YXqrkGr10gH2DaL+8SWFT5f/y3vgJ5dLXf9xt2WL2v3Lb+DQi+uAQy+u
Aw69uA449OI64F8nmnU4uTKAPsGX6zePMvxVyiYcPLCnZs8I4gXvdxV8ul/G
xjU+Ft/2TwrxHTmRvz42/cBWdO/QcOM0ft0ybsyMC876Zezkvofzv+jz9THo
xXVIntOL64BDL65DceP04jpq9+O9H/YxvVrdG+NB2K8gJzwXm/I519eg2n2G
4Pv7NByfV+3+QPDLA682P1rtPkBaV3x+Mjqv2v174BgPwn6F8SC8byqvRvSC
2pdL1TjWJcZtJk6p68DXY2Ef7BXeFwS7hOMX40A4fjEOwHE9sfu1ED/hdREn
cOQj4biG3sy3zVdP7RVNHHlKON6Rp4TjHXlKON6Rp8Se+0AeAocdQn9hN/KT
MK8iPwnzKvKTMK8iP1G/slzU9JpBGWs0yON10b7LfL5aGfq/8b/6x7Wt1c9l
wgwCov/xQLOoZtXzDH4PfZSHud9DHzh+D33gO+M6NVhVtd9bN+S1PLHa+MoZ
dXvvkiouGbByzc1qHHL4HTjk8Dvw3vOMwiSfS1jJLfuDu3X9+HMB7jv+H3zg
HrM9rQaU0iflmQXXc858V6idf+E7/p/y6qSBcbuq1gc7f7Wse76a/J4/XuMP
VfHfnmMemVXj83rld7tYFbcNj6LKTatxRenndQFVvE7TmLnV5ZUzc0bkVK0b
9nbz7FOdnwq9/fp9FbdvMs3MvBrv98VzrFVV/D9WhmyyqMYdszPaXqjiBluP
7TlXjddM/2ZwLbtU9Hz/zPlTxe338XkefsJvcPgJv8HhJ/wGh5/wG/xukir2
X78ZeKa2i341PQveDoj/xxvv1NTeV40PqSi+VP2+I3DEC/EDR7wQP3DEC/ED
R7wQP/DNe8f6mFW7TwD8QMTrhH/2pH0LnFidp7g2/B/PHqH3vjpH3NEOxLm4
C8+vERfECRxxQZzAyQ7OLnDYAbvA4c/Fz3b/L474jq4tya/ebyGPeIBDTtgu
0CuMW8bKwPonW5ew+RH39rtUiwN+j3YWrgMxv9F432G4yriJ+v1F08Ls71d/
vobWdd2e305q96FqfvgTdyODP/ec4Z0XN639BxZwXFtrwkeeBwb0leRVe76A
8lWdVWH/7NOccztDWm1d1zgtaX/152to3XWoy9Pzy8rYmvTHlYtu8xz2wV5w
XA/XF+6zcB2KA7fuvzP3UG3HauN6wDPXityqdX/XsApnj2rt5RF4/XpeFZ/p
mfnArxqH/lGTZU8vVtPj3DTComPVPqJ0VcmwuGryTbbdzPm3vxj/sMWLK9X4
BsM9Bf/2ld1jj/ZNq8brXDy19x//4yzre6saX9Lb5XWrhDJ23GrnasXIZOLw
R1gHa65xJPhatXojOK6H64Pjerg+eI9Bz9kGxzIWNXDT38aT+fNW2AG7wCGH
3wnby2VQk6BT1eKGfZ30ZG+3M9W41lSPwKCqfZ1VyKtaltXiUG9a88OhVfyo
7Rxd22r8TfNRvmlV6/P0wBPjXKvxzy0yZ9yq4iyzauarxgdnvs7Q0ChgYW4V
Dy9W4738p1/9W/meBV813x5cjcNuYT8ftb+l7oUquWm3AgaNr9bP2yTcM7Cq
4vOHNR49shr/tuab579xUVI6rf2//Tj47NQ873+87eu89dU54iI8D4Wf8Bsc
fsJv8D4z9ZrnVXsOBXzO/f6Kf9c1Nlts8m8fTXFrOTPoH7dPHHe5Ol8xXu72
j5fvbvs3tZp+xBFxBUccEVdwjBOMG3CME4wb8H0PDv+MNi9TO/dHHBFXcMQR
cRX2N8QDHHkWeVc47yOP0jyb3e5c0Bj+vBIccUGcwGE3/ABHvkP+Ay9wCrv7
s/IBu9Ng8mOnav1w5eCnH2v9q392X5RhU41DDr+jeZOTw+/49f//5Xfke3Dk
d+R7cORx5HVw5E3kUXDkTeRRYT6fWuhY6lBtvE+wGh7XXnmdDetRryCqml83
yuKdu1XxlVPWzVJU41ObRiYHVKu/geP30Edx434PfTQPcuMW45j6AzduMY7B
kY+Qn2jdy+Uj5CfwWTqT71d/LpXy7c2gKbubV42v9oX93wzk43O8W837D5up
n1+4yTxrvnhaxiIq6yzdcpnXs/fB/vjzt8vYA9OTl94t4sdd4N12h1wflamd
U2CcY9zTOpAb5xj3xDn7YC847IO94LAP9oLDPthL63zOPtgLjnGFcQae/N3v
t50qjT1UpDi6VWsXn/s/LcyrePHm3ZOqz9eQw+/AIYffCdcJofMMWq//pH7/
oXAfLbavFKu/ic3jYnWh/7/WaWJ1v/86H/3X9Z5YfU+s3vhf9ztidSSxfb3Y
/kis3ihW/xTb14it58X2O2J1LbH6g1j9U6we+1/nd7F1gti8L1Z3FasD/9e8
J1YXFcurYnlSLB+K5U+xerXYelhsfSJWv/2v+yCx9YZY3VJsPSNW/xRb54jV
hcT2lWL7ULH9rFj9Uyz/i62XxPZ9YvVtsfWY2P5FrH77X+c1sflRbN4Rq9uL
zb9i87VYXVrsXENsHSu2fhZbP4itN8TqtGLnL2J1VLE6/H+t54jVhcTqzGLn
R6L1GZH6sNj5glj9SqzeJVYnFzv/ElvPi9VVxPZTYvsvsXq+2P5CbD8iVv8R
O+cSq0uInUeI1fPFzinEzt3+a91SrA4vdm71X+s2YvUfsf212H5c7Hztv+73
xepUYvtEsX2l2HnTf62HiNVVxPZxYvs+sXOx/1o/Fzv3FKvPi9Xbxer8Yud6
YucRYvVqsXMKsXNesXMQsXMTsXPJ/1pnE6vXidVDxOonYueq/3VfKVavEKtL
iNUxxM7f/+v5oNh5vdi5nth9DmLng2L3D4idb4qdh4rdh/Nf60VidSexuoFY
nUHs/p//Wq8Tq4eL1Z3E6lRi9x3913NYsfsNxM5hxc6/xM5zxe6DEjvPFTtH
EzvnFbsvQuycV+xcWOy+rP96HiF2riF2HiF2fiF2P9h/PbcSO/8SO+8QOx8R
uw/tv55/iZ2jiZ1/iZ2Xid3/Jnb/g9g5vtj9WmL3Ayy6t3TIfsk1tfvzfasu
KpMpKW/VvvPG98Ayh6rxeXnSPskDNfk5UyfNVuo/IfnH7vXbTBtrzWZ28T8o
kz1Tk59eUd9LJX1J8n1S2/b6rGnFui7fWlFpyL+3uVn0qSGuv6yY5zSXpkp9
9ecWOw+/21Oup/7+aveuf7VlMv79RVovIs/PreHEJJpD5kt0CtXkXX+t36iS
FpN8xfLzo7/v8mcdCm2PKLRK1eQL5HktV+9Wf//z1RR5k4OSi5Rfxz8J2HCp
vRfFGXyKdXz6/ta2FGfwb6d6nR+oL6c4g89LnfWqp4cZxRl886Q9PT/uOUtx
Bn82ZP7g4X1NKM7gTXT6jOl6+Qyb8q8bSHKIr88MMtzb0YTiD75rU5OJ91+a
UPzB3ScbrX1SaErxB0+y2mX+VuccxR/cqp9PoE2eJcUZfM2IxpKBpq4UT+H6
BPHE/PA0crpLUA9Xiid4yx0OyadaW1E8wffI6tlqBZlTPMHX/1rb2/jaGYon
+M1kVq9xoTHFE/zX8hvHnmSconiC76iM+9XE4BTFE3zt0lczW9w5RfEEt7I1
aTN8pzHFE7yHyZl0sz5nKJ7g9UfNj13c+yzFE/zkQtsTg3LPUTzBmy0ZmLpr
uCPFU7j+RDwxj7k3MDjUo6cLxRP8XPOlSb1+yyme4G+S7m5xiTOjeIJb9pPb
9/t9muIJPsDQvFhjNB9PcO2O/euXD+DjCV7b7OVvuydGFE9wq7U/2tp35+MJ
vna87p5rSaconuCHtj9vrdx2muIJ/nf+mEdpMhOKJ3jdz3bjO+aZUzzBC3Ky
J/5Z7kDxFO47EE/Mty86ScsvvuX7J/jLjeZ9Es7y/RO8nofkaoruOYonuJ35
h6ILC00onuCyC4Pm9tl9muJJ7/dSuBxfusiY4gleFl/3d63PfP8E7zXwgONM
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
7Cgfgr9+Ol6/XiO+TjX+r+/n1PIidkjzQmnKRXvKh5CfE94j66OXE82ztP60
G3pTw4/fb6Id/Suy9h20j6J+BXmnBt31nz7iz8Vmao9KrTRUv9+yyHdniFTz
A5tlPrpWjlEyv98X7BegX5jn0a8wL9/RaXG1y2++3cXuA2k1eUP/g5JA1rzd
8skJDfm6If0dsB72DSYP8qc4YH4PvZ5hLJ3lR/bovl92VFuuZPeWb5sbfNWd
uPGW5h3zpHeY29eX3rEd+PGF97SH7zIdZBAdROsE4XPN4Nn73pd/z3+nxo1U
PX/fP5evto/GeyMe6lwfscySX8+DX34yrMaHoDDSszytyepW4e/V5s2IHtEN
5XolTE/2LbWflJ83LYezzaqEIhZUU5ae88GJONrdUNahQ9Jhfp+F9cC59c9/
RV7j5036uyjN9hk0bBlCesTm8YD7lW9Sy9XX2z6jvoySKNU5vW/pb4Pu3U7y
6zT6u9I9Vlw3tbxB/QTtW1zntH/eA36dif3IvvTxnp/H2ZD94MX+z9IGJzkQ
v7mh6+wx8mts9s/rFq5FrsT99APadFLeYPVmzzO/18aJ2ov+vsn1JFvdLvw+
GvNUzrHyVRVf+H7lPPPWNrnqMdMYm3k6Yr8j8bAG3S+rpBlsUp2792d85ucp
/P0I34W7r8e89iV5E881bTQ0sph/+co33S7b8/rXXtksk71ka/I8JztE8PMU
6jY3OqcdnuvC718uVRzLlcrfsC2JRz657eDv976xUmGukuayiSWhQ7VSeHvw
9yamR/nsGbOKt+eif1q8viSPaTzM6mMW4Mzrr/N9rUSZx74tWDrP8hxfp8Lf
oegxpqCO/vIAmi/mf3s1TaIsZhrd7wd4N+XPH8vXteovk1WNy3YjnHq25ucX
9EOz+3XPL2/Dn0P9sOpvqFAUs0Yl3W4oxjnx9zUlT35SWVnMGusVZy3c7UL5
tm75ij4yWQmLOb1cr6ILv67G/vTJsJ9TL9RzIo7zPptrymUWD/j44/zuc4CF
wbHufDyxj4jqvXe1y0teD/LGlv5JfXOCPKnfiuVP5LdroXsNez7wpv5ppWQ3
5Ko77MiVMXWyi22JzzPt91iuSmU/934uKL/DzxftO20eFKK4y8rrfV/9uRf/
3FlqUq0LMtkjtnZ4SP62QRdI/qbzljiVNJMFf584NLI/fz8q4jPI9Izf4wT+
vizwIYXrz446aE1c+1XKSQ2N+yxI78VLnVh+PCbJS0ZraDxi09fVNI0O5Z9T
MNh4d4pSP5M1bPhdkdiWv25UK3epUv85yzlVturWDHM+733Q0JPJspm9V1Tw
p3n8feBor2cfhjw538+crgs+PeLozo6RlsTNblYU60uesrFr469O0bQirsgz
ydOXPGfLw9rb1LaypOtuvLzpo1SezTr1+rUheyF/XY/to95J5Tls4+TQQewQ
b+f97vdMVQm5zKqVRuDNCN4v9J9aG/dMk5rzdoK7jLa9c68Vb8+BDnZOKukr
dmrkyO4TF/L2O4zpYq2S5rC0Ob71vQN4O/uaGc6TZeayG++uzJp0m7/utDfv
Z8hkKrZt7I7JnzZUa/d77ddIdN6xrd+jL44v4/sJ+nNI2RyHQ2EX6Lrg40Y+
WDu9Kd++QxIcfBRab1ninmUXDd/z9k+ake2h0FKxxlNa7uxnybc7Pg2ndjfa
0p9/rmfs+RFd5Kp8Nt6h+6YOhbz8ZYPNI2SZBSw5cHfbVjH88ywYX7f9Mh72
nsLbQ+9bip4Zv1TDkXhvPZWBKuEdO79s1e2w7fz9BqM/9z2oSshnZU6/w95V
2lOeF7sfo1g+P+ZJ3Sw1vnPfgQgfa/X7u1Yun/1in+ygWp2BzvMz+h6c9e0m
5bdVxj8W2Kuc1OqxeadMmk6U26rdf1Jc899B4wW1+5lb1GTt+ytPqdn5VVXz
tYvBUzU+/taJTzOSn6nxN9pu5xrbv1Lj/Tq29byczddj6VxmrIFMJVW/T+br
DstgqVz9/Ej4/hzo/yuNq7eh6LHaeuNEzAaNCft01epdNsuf33JTmanl1eQB
a/16KK3V1qU5L2eGSeVlbOGJPQ7h2Sk0X/StvXFFzX071dYtf8L/JYjj6ueS
kicbFiXcV+ML9+RNe+b7UI3nK106Xlv+Vo2fkz7v5fBbnW/odP3syy78/f+Y
H6d5a0lkMvW66J5nIUd1ZfZqdQbVftkyVUIZa5iQ2GXOpWRa509q0GWfQkt9
3d407PwHPZmJ2r4g/1nnq5EKF+KI22/XgD8WKvX1ocnr8+MkOmXMRNn5Zy/P
GIqn+SHH/FT9MnYkuW6ly6hEsvPLU6l2PQ0rtX611mNyfw0N9X7l6G7dOERR
pmbPvK17lf/uKxOOxx+pL87cqXYegesuapqo76bvp+bvYOecx7ukHmr9YcfE
ti/Wq4LU+tunJYsTB8jVz6MXz6lbNP2cv1p8PD+uuPsvPsLxPuPqzR4bFT5q
43pcT8M7lysD1dqrdbBh8r/+LOwPX4oTp/yrywn1Zy1v5/3v3F+o/03u8d0a
Rur3m12/+Crn98BStXZZEfR9xJFKT7V26XB0/BRNmb9a/E++MnrQ+VOpWhxa
ynVsKy1C1Mb1hV8ZfVKlAWrt21t5yXqbQqEmn//mRvNXDupxsDP88fV9qrda
u/80cjZXVXufGNr9sOLzx3/7X2Gc13lvyV0iCVTrD1/PWFw5VKBe91vto+kw
UOf/O55i8qJ+iVxXrF+JjQuxdhcbX2L9R2ycisVTrH+KtYtYPxfrV2LjXawd
xfKAWP8Ryw9i40JsXIuNF7HxLtb/xcaRWL4SG1//NY+hjpPInQeRPFcXrv/7
S5SGRjLbWaviquk7N5KPOt7NXkODf48W6sWQdxzYo8enbBvikP+4dKt1kNKC
fx8EJ79pq1PBjXRL4pC/G9F30Oz25lT/hfy01Y4lm73kxCFvEDFo4O8BZlTn
hfyFI0t73JZZEYd8x+zTF7/eNufruZx8SfbgCdE7bYlD/mSaX003hZx/3puT
166IlLX05P/uM7jmrXOdNtwLpvoLuDDO4Vxd4v7RGEXENRuKcy2WOEBDI0Mt
zpAvOr1/5Yo1ZsQhv23Q2+ShXc9SPCG/81mj9ETzM8Qh/9i2jf1Tf2OKJ+R7
ahjuX5t2mjjkt5z/NnHqt1MUT8jv0b7aYV4HE+KQ77u1LK1dv9MUT8h/eW+7
p2k7Pv6Q3+X2bNzDtLMUZ8j3sN0UpJxmTfEEF8ZzOffcbkLnjLrRE6wonmHX
CjU1NLLV4gn5mM5ep5a0NiEO+XeRJnskfnzcIB+Y9KtHyc1TxCEf23Vea6NN
pyhukJ/QxXunZyeeQ37d6E3K2OtGFDfI61/RHV45yZg45Gt2Kzz2OecUxQ3y
ystfxtaIMyEO+abyv4u3TzLh34/AybdIS5p/psyC4gkuzA81BM+/ID7gBZY+
IVt1TCgO4PtuyNt3+8D7Cz5weFMNnel8/wH/3aw7W73LmOwH9+ioaGRbaELt
27/r+R+Vlbns11cDi2+TrMlO2cQ25ZWVKjU7IX/d7lXfFO2zxCF/zOTxuhpW
ZmQ/5Lu0lE/bcMWYOORdzO3cHKPPkF+QH9nvSJs6jfhxBPktTf6Mu/jxNPkL
+bYVq7qNYzyH/Mtu5UbzpvHtSPJWKw73UJ0lDnnrU2dVQ2ebU/tCflbUgKDR
dy0pL4Hfm9GwVHuwJ7U7uHAc4XnkrLPPxkUctac4Bwve1414Qr5vn63Ltze6
QBzyq+09t9gWWFE8Id/R8qhbro8pccgHRXUpW2J0geIJefajVfKym2eJQ37D
xyW/f+8/T/GE/Ou9YZETZ/LzAtmjmXDm0wwLiifkVV/Lx/XMvUAc8p9H75Lu
2cb/3VLIW8evz068bcvX6zkeOf32Kb/5vhRncOH4+sPVP4XxfOIVn1VZWbU/
Xv/2fu9oe4oP+IhzfZw+zLShOIBvz08zT3K3Jn/BJ2pGFiru2JBf4EFOl2ac
Xe7Av9+E48savU7/0YXvJ+DCfoLniFc63Nb1rHuF7Ae3Hf99661VkWQ/uNTM
5+WpyWFkP/jlRJdLdQbz728Fl9+zHXWoWTjZD27zeVGXpm8iyX7wwMGbmr95
l0D2g8N+zOv4zDgbmnIr0pLVbnTspEqaR1zvs8WtvuPOs4pY5RKJ8j3xrvPa
NzhWas3CuXN9zF8VJUExpvXt2GDueWPw1y4uwZVHTOk7Pn+vdOukvek02+g1
1VmhyCM+ZM7LjE01zrKVs633qKQFxG3yf7xtN9uCLeDq8uAurWPbXmvgwgK4
+3hofvGo8Hz104qF9Nm9Q1ueTjzuQGY9zVYm7Pq2BRvkqgziwVN99k51PUXf
8Vkyo6jGgrtG7O6566+kcn4+Orq9Waud906xlJGaMfoSft4J/XRz88YGJizh
zcpzCkUB8d5DvknOFlxgF7n76sDLh0uT1551ZX7c+ZNwvv7O1TExL2jkjFiV
o32G8iA+NbcYzHtYbspmF29QSuXvie9qlTlv1yI528mdD2FcD68nbVZRYc18
uHMd8NCPSy92NLVg0dy5CLixVcJBszdW9B2f27f61FpRbs/acfcrY1zfTVzt
6+AewvJ+Z40MUdwh/nHDWT2lsxdbk3FWR6mfQXxixTaDhI2ubJZW1y9S+Uvi
Te9vdj7dxIU13xHcW67KI76gb+chlt29WL02336n6hcQd9ONDSmqHUDf8Zla
Pnuplk0M+8zV9YT5R8697wD7gmErjrvLLsazq9xz2uCa5jXOby3xYeO4+i+4
w6/wRYZjfNgw7nk/8Kjrr+9KTUJZX24cCvcduN8F42v9n6Kkl+mhdF8veObs
5rMG7A9nh7n7U6m9Apvs2d0mmnXk6pLg4Wc9/TcNuMhcOP3IYym791iMeR1L
3/FZFFPwuzjLh64LfnTw3ajauvH0PghhPonj4gM+qHNm0KljMWwc934fypOm
Wxe4xkVT3Rz8qrVna6u70fScJHiMy0cvp1rX6P5U8IarXrdW7kum70J7UKcT
cuRtxD9v0GSmMy+IzmuxT/Ha3/hhh6FB7DZ3/gT5T2f10o7L3EgOnwYOf35v
PunKJh4PXxyiSOH3TR9mpX07acMa2+1dqtR/SHz2t5513605x2K5cyPo/3Dr
RcCic87sR2GDWtryZyRf8ONHmddCU+bNnd9AftSUrKi1d5yZJFl3gUzG7/se
3RyfeizbkrXgxgt4B8M1TjUTbWi+gJ6/Dw6daX87gD20H6crUfL7weG7mqQv
jbRlr79ur63Uzyd7Psw5npuvYUXzPvRkSL273fnF9yvINxs8sU/XAEeaj8T2
3ZDPqZwUlKZRNS9z/Rz7ndmH7qvuPgih60I+8NniXqWxvuwMdx4J+frTFhx/
6G7FbnDvy6B5Z+Bw++9FctaLu+8E8nLu79Ef4J6vhvyVATe1zrla0/iCfMtd
M8w/xgYwe+58FNzM3Xf8G/MU5se95wL7C4sa3XqsrOvLagT+3/sswBWduj+v
CD/Hyrn3VoD7XzzZ8m+MKa2XhPsUPEcN3tOtco7nCBs2kXteGvx1gWZMYdU6
9ij3vDR4275RJ850CGajuOelwd+6zZR0yYhnB7hxgXnnR81P5zyvuLKD3P0K
4MFaWm8ePDdjudx9P+Bb11iEWMTZsmfcuRS4af9bvTcmhVN/EO6znLi4Yf7q
t6ztzECtqnzOvQcEvIPUoXx8O0t2mosD+L67jRYdmGlPz4eDf+7+uodRjTA6
J8O6tNOhE69ntoih96qAH2tk9Funqj+YcP0KeTXxUYz/zUaO1H/Aa98+rlfc
05X6J3hm+ipVSftAui8K3GLD6XbW/T2JY9wYDUrvun21H5vA5RPw5qN33821
d6V8hfnr/saTzf8OiaX7SMC1lHMqR672JY58+LxtyyYnzGJYQy4vQf9ft5cW
B4bZsemttL7rS54QPyLPvVXexZbO46En5flmb5vYcHqvGbi5/b5ZQRPD2Vcu
j0FPSfsu79JU1mzY9hu+KmkW8Qu/ZWMDw6zpHB16lEkHg7KjQug9YuAvS5d1
veoawpquGxSkULwhPY+31+2/fYwNnXNDPnmO8Sn5rxB6Pxe4T9fEDw97hrI6
3LoXeiKvF68+mm1H77eCvOzuvBYtb15kr7h8CHnHiKwdsf5OlFcR/yQWdqXi
aCCd74K37FBvcLqeL3Hob9bp8c/DljHUHyAvvd5Wt+RSOHHIz3PrMmjLrGTq
z8L1DPKGcB7EPgV5+PCI5lKjW57UT8BLFlndPn3HhzjmhaNXkp8u+2JP91VA
vlnTFo8rLd2IQ35f5xQDg4tWdH8D5AfX2KXMKnEmDvnscc1sesyS030GNE+9
uvN013wX4pDfleH5dF6inM77If9neGqA5gV34pD/+njDzPjJ1hR/yGdHvO7w
/qEPccgHtN954P4ve4o/5O94t47q/SiMOORfp6Y5DxrmTfMa5pGF1zaWqjSt
+fcOcOv8FrvvJy9paMW/74Dz7/nLhMLmK/l5Frx5jFY6s3MneeS3E2cGtO/3
0obkwReZ/GwVU4O3B/mnoGvGgoosZ+LoP1EePfvGHQ+mdgSv+PJkRcVud+Lo
V30nSIxyR/LvKYB896vngifEuxCn/W9pSLNeS/i/LwJ5rzVTpjyRuBKH/OKh
nh4vr/F/HwXy8zSCixP2efB/B4qTH7oiZ0Jgzwjad9P6pI9k+99UF9p3gx+8
kXcpt2odhX03eKLzTaMjp11p3w3+0TnL+uEqLxp3aPfzzrPTh2hdIY71yb7n
Wh9HXIwhjnXC4oD+Rg29Iimfo5/sTvIsn13G/z0MzMu2A3TShlu4kh7ad/sX
5w1sEEEc8u3X9hhXdi6c9KC/ySynOmwYwesBz51nbW/Ql5dHf3vDzfvgqJup
RnwJKprqTnogb8fN7+CQ1x5o9GmIdgTpQf881FduX1zhSRzzb0X+ij3Fo3z4
9uA+Xw85GjDQJJp5cvt98NQ0k/wju4PZNW5fDz7hy8AX8Qdd2H5uHgH33qR9
5+0+ZxbBzQvgGyf0DRr8xZkFcPkfvGHiqBl15rvTfh/cd1TtILeHnsyM23cI
17fh3HMOaK/G4/+MfFHqwOI4OcS//bDbc+std2amnB7wb5EL6klnRLMWgvzw
issPLwTxv8LFH+9TQ5y1jt7v8NvAlfXk9ung22ftyPndyp51TX92Xyrn/br4
YOm2/jO9aB2Ffv52cIOLbkfjWCBX/0F7BSXWLhozwpnFcf6CVzovtPibWLVv
uvh/96MI5yM8fwXe/KJzn8ojV5gPV7cB/65jsfG2ViTdnw07vS4dq9+gGd9v
wT87rR1i6hZDz3OC6xzwX1NTK4WdsFM5SpR8fhhZuLxB6igXtq3o+FS5is8P
nXrfOe+w3plpcf0YfI7dlwMNR7nS/UDgxw9kTNFRJNJ9k2r7HcE+ogG3j7jD
7bvRT1q9f1Q59ngg0+LaC+P6ySTjYwa9bJgbtx9HP9ls0+jPykFerB8XL/A8
me+IbydCaL0trC85c/HHOL01tGvRhxk2LJWzG3wK5y/qGOC/n1zOaGEUxq5y
4w7t5fLlrF+viFBmxMWZ5ouXw1X194WynVycaV7I6Nl2k2kIG8DpBf/M6Uc+
EfYftK/afp+Ls5CjXYQc4wL9fGG7uQ1f+XkyKTeOwDe4j56V09+f/eXmITov
HvozYvnGQKqfoP87bzfbf2pbGPPnxgvWjbYbTDruPOrLpnP6Ma91SW0ze5N/
FPVz8PTWTfxtC8JZMpd/YH/Cy/2fg6ZFsjlc3Q/yJq/Sv0fc9mVxXB0S8i3f
tVti+Sqe7m+GPXKNzpaxkfy5rfC8G/dvCTnkhee2+dzzdTRPzfAdeOBYIskL
16tSbh8qto4VO0cQ1ueNuP0j9LR13G4/Sfcq2S+UR50W43SP3sqBs7/503Mp
4HWyKpKbzwtm4Vz9FlymaWT3WhJLzyeAq3xzcp+ZRpKdwnPbUK4uh/gcnP0q
1rQqDzgI6gnRU2P+V0+AHuG5FeIpPAfEfETnYhZ1HcdkxdD70SC/sFaTOUb3
rrDeXH/D+vC+q1HOYkdPNkrAr3J8tKAO6RbU7X91SORhxPmpd0nOlVGhzJOL
D+Qj5bdH1tnpw7wF/BLH2wvqmfZcPRN5APqXT85p+Hr6NdaEG4do9zXcePzB
1Q3ArbvcU81u4kf3r9O6N3/Bj316/qw7Nw9ivJzxztWa4B/JDLh5EPINE09n
ZmXeYMqJ5sNkskLipXmOpukrgpgxV5egevj6sCF+c0MpL4FX7e2KvxgmUX/D
dX0b32vZav8VFsTNg+hXXdp9rLgZ6UnPT2I8No4d4hXv407PW4KvyZJ6T7Nx
ZjqCepqm/6v/1dOGce0LbhG/Z/uzWo6Uf5DfTFq1mrjfz5v2O9D/ZG78+4Cz
LsSh56bfgN/zXBxoXIDnjg81NXrG3zcC7tcxRHoww4t/bo0bFxluTzTOW9kR
xzxYduTzAbm9LT1HAW56ZaiuzjJeP/gFZcPxJ5e4kx7Mg+PWf9+yc6ktcayj
dnD1K3CMo+zppmM73bdjYVweAPcoyI3qYc3rx/gqG+3xd+cVB+K0XgqfXPEn
z5nyMLjHtPZuEUu86DkT8FAfmxlDndxpP45xUePWNe8MP1viGBcLMz+/6Bri
zNK4uha4c4Rz3JUH/P6RzkPT1pkG+XhRfQD9U//t3Yoba7zo+SLwHcbxZ3Vn
edM+C9xo58IJDZxc6XkhcJmWMk3nkSvtv8CP3bmzcZydC8vI+GkmUb4gXtwy
YqNbVxd6Xgh8/eiw5V0audB+Dbymnl7SlJVubJ397Q5KfX5fqWtmuPLFAxd6
Xgi8keXArFHt+f0d+L0jYyxMXnqxpVz7gXccX3yj6LgHPS8E7myzQ2I4w5Oe
iwNnYTaNf6b4UT9EnM3r2AyWtw2ncQH5jc6BLzvVjWIe3LyAdi97+bz3V89Q
WudAz9A/k953fZVAeQz54b5ZlpPLPT+aL4T3X6G+Ct6vhfHsYysiyH6aB5PW
fDkz1I/6Icb7oqPjGx9p4kH9Frzh29CUmNtezJhbl2JcrPp8XGfCEW/K2xgX
o/zM+3UJi6T5S3h/BeZr4byP+QXy5aqCr/eC/KkOL9TjKMJhD/j04TnDUmsm
sEfcOQjaZXfQNjvD2t7sAvceefBzpumDumz2oeecwY+qCsad8famdgdf/u10
7x4ucZTnwa18zi5fVltB/Qr5v9XU/NQrRhGkH7z8WlmvRi5R1F7g45a9XOn9
nl+HgIePzc0cVPsGjV+079JZA8u1H3nR84HgGp2T907f6U71TLTvdSe3DTrT
7Ngtbr5D/8l0K9yb8tKV6vDgbZacLZ/QyYvaC3p0PxTu/nXUhzjy/1F7k05t
LD3ZR66/0X1xScMknUwd+eefOf7w/NphxokexJHPt94PTW3w143pCupmDbm6
Gdbt6Ic9uXG9lfs7H2iXJo9nz6044k7xATcbc+r/qezMo3Levj9uTCFcpK45
IropU9QlJ0MRmTJkuGSKTF1yxUXRPDyaeJonKk2kUpnHZMqlkq+pjIVEJJIh
+X3Xuue9z7M+fs/6rd9frV5rr/Oczz777DPvvcPILJY9Gph+pNz4jphX+E39
/UVxJL3nB5ct2tdt3n/Hx4KdFrZz5jwkfvc/DyoL+0Yyxu/Tgjcu+/c9IN7z
gxuNLX291DSSlVa98yw3fkb8/BH1KUeHRbNQntcBvEPj2iSbeTH0np/mRa2O
vmuVG/3TuPyQj8vgGDdPTRuhFrE8jDj02Xydrv+GUMGhz56JY5+m9ooijv6V
w+d18GOwBzvHZstNLTMprjG4PNp2rs73EOov4OFqjU5TMkOZIe8XqL+vuW/z
1CA/5sL9BewkOr5w7fhyb7Jn8NNWmVN7OARS+ShHxs8BkTcCeogpyutc/99y
sE8Ce8sKvh5vHyvuGYJvcuhRrhLgT/0F5bTxK2gTcjuQveb7zNDninFdR4x7
6kPl0L3B6Rcza3sHMG3+u/CrL5++r/w4yZv583rSfs46Lf+uh2VUDvjy7vKl
XWyD6X4Cyvnd8UeryHZy8rP4+72dn/Yn3QDSM9oxc5Lz9hnjxTkynXM9Ny66
VRxG7YhyLsStnB8eG0LjFvioNl9aBncIozgs0nUZ/LN0/8SKv2uS8lv8XZn0
nPR2+r/y0n2PC3laNv/bPU/4Jen+AOJhSTn8j5Rj/Uvj4+4EA1lCHq2/4Cd9
8+2P9p+Tz+yb/1t/6fp3Ln8fJV1ft+Dy0nXfTi4v1effnEvH0ya8HOk8IYHr
WbreRHvR+WnBzQ854XlsHS9fuj/wsYtV/cA31T99l5GjeQ9F/YC/9tC7cVph
ngM+LtB+q4nCvAU8Xe+fweoK5+zgBz+UjKxQ2BcFL39f9lBx/Qu+f/oGe8X9
CvDB8+1Trijsx9I7iM0LsiYpzHPAF4QPefzm8v6f9PzduEXYmC8/3//ZprF1
yKo/Mn+yn7hfTrcpUNi3BK/u2jhznMK+H3jm92ntDiqc44On8TzEUj2cWPdk
n+I+A7jnAp1tivYJ3mtb9etDCut98FOHWvpNV9hvofcgOeNePLi8/yd9amSY
J/+qcL4Pvunx+cArCvsV4H+UrrZKd/3ZP5ww0mgIUVjPUn+MbtBWtE/w5H+0
nKKK3/5U/5n2H7QiK17/pP+r00Y/TVQYp/4v/SizZ2V6VmZvytpRmR0qs3Nl
+lRm//9fvSlrF2X9XZmeldm/MrtS5h+U2aey/qjMDpX1a2X9SFl/VOaXlPUL
ZfaszA6V+UNlfkOZ/5nA73ug/LpVv9b1euLDBvN7GrSPlDnauL+KN2vH712A
r6pc72Ca7031xl/Nj32qJ3p7s0g+HwY3Ca5/MtvWg72Tz72/sXsp6eFQxuzo
pt3dmBef90Le8sHTjs4dPZhDXX3exu7ifc3ionovnZduzITPbyHfkBRfaPfV
k1nw9aNUz+v4PB/tMqK/eW7YI3f6H3/P3CzJPeDtyibw+Tk48uIhjxr4q5Sc
+kue7sxZcj8qnt+P0uPn5uD57VT1HP3dWRd+Pk7zwKsRpl/DXOl//PXJuxwb
8siVVUvmjav5vBF5j2DPFq9yLE02y1g/Z/mdOXNukD2bXQrc2uGzJ3vhsqQs
Le2WsP81V507/PBkLvy8BvJvd1bUrj/sxm7x/RnIZ137uLTtUA+2hp/jQH7a
jYvHUrTdmC3fh4G8jdNL304lHiSHv0VTj7pluLszE57XEP305Mas2nPrvFkA
3/9Bv+5n+s3iZrKM8gJC/kC38l3v+3izM3yfB/INzv4/lr/dTXn1IO+Tu3DK
pFW+rBu/P0nrcVPzZs2co+gcE35GZei3gIrsJNoPAV8Ws3pL7xdJdF4m9WNV
/P4z+uniNQVf6sfsZU+SddtWGN8knrLr2b4VBnvYEn4vGnyzy6Xi5zmBrIyv
N8Hv9LQu3KkRyKz4fWnwVnpFZ7boBbCrfL0JvnrQ8dgzYwNYBUvISEt7JPZv
j++qmm3mzSx43A34h7jbpqWhxdHsAV9vopzc+vlD2s8IYpWTexoElD+jcl5Y
h9TNSvdlqvw+NuT1UzMbdTMimJ5kn1nO95nXI44V7k927vxi7W9+P61PS/n6
dCg/L0O/O6vxZkb1+TAWEH/xa4XxWfLDQ/WzPr/pHsi6OOkc2Nj9FfGGiDSL
IdkBLJLLww5Htz87tCAniB3g++3gdgfmbZuS68X0+bsG2M+rYqs5LZL9WTb0
yO2hXuXmm9Nrw9lTrmd6nzLReE1RaTB7yfUG3tLZNN/x7F6KewL7KbucbDR1
Ugb7xt9fQN7e51PxKPso5s3v3aG9Vhc/Wdn0cRQ7yL8TvCO/V4D3C3Tf6dST
jUdfRtK7A+m4IJfcA7nL74G05fF/Ib9p+PjTNjuOUTxotPvUcJ2yorp0ilsN
Oyko+PY85XwKi+f6x/d6MtUAeeYJii8s7UeIzyXla3j58POxTWZfa70+geoD
Own12rHJfMx+1oaXD3tIa6f9XsMrji2W7Bd15/tF6lwe9tB0W/deVxr2sQHc
r6I+VgOeBOflZbIUXi74ZX7+XsD1D77i+ZTaK0PTKb8R9LZoetlsowvxpDfY
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
l57Xg0v3mf8HwIp98g==
   "], {{
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], EdgeForm[
      None], GraphicsGroup3DBox[
       TagBox[{Polygon3DBox[CompressedData["
1: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
x0jdtz/1n3Lft0I5Gb73hR5b2+fWhfFmiZtEf1cxrnBNeTJtTI9cK58Rea5p
Lk6mre6R2/oQ+XfidsYn5vbEbYrj7E4/rgvMh3fInDuckLv9hxXjCq8F9yvG
F8aLwo3ixYStFOcrhO9z97dzZj5UvOijGgeJ+TjVs8Qb7hK45npw7j5rvs9P
HfPX5l5rHg5cTzmh8Jot7BfEzqe0Dm1bOH86vTBPIj55l9wcpbhK7XuYmfr9
iM8/RXGkxK4no+9b4lXhB/HGqgf2F2YuMaew5xGK+bG5NmF11cLF2Qk3dSvX
UL3DvpnxhjD5sVoLUs+Ff8s1dxR6+9yYVzGqYWy8LMywusKcq+4Vrr84M2cr
7vaSwnmasGuvwnhX2LUf+oUlfhae1fqeIGunrgOp1vkZx2T0z8VB5M7p2uWO
E7/i3ygxr7Uzck1hvNcAfXXhvRBa2y8ujAnX479DYhy4TuNRaxrX9uK8amZ+
TTybeJgZiWOyYrP2JSgv1/6QaoVxdMNK1zrWKlYn5uNWB+Z/ngudI4h3EO+2
CtlE62bimK/Y/2xY5mtcm8P5rLKd2egz0d9IHNMV25XTiQ/T+58WuxY7OvAe
EvHhyh+1N0F7BjTefkXOZZ48RvsfI7to3Y+8V0ech+r1qtt3E48n3kLzrHDN
qDrtfJC43r2VvrwRO779rrgWO29TXiDu9LfAtbMtsfMh8X770FbdyHtOtF9D
XL34T3H5ylWVsz4del1TPrB74njUtfy+3fWs1NySeBjxMaqba67nlcZm4j3E
f/yUGoeLo5ibuAa9fex6T7fAePoD+vIg9m6R8wrlFxof4qVfQb5e+Fs9V+Z0
sxPXR4RZhdk1DjUeVaNQrUIYonXu5+r5syPb25d57YtlbisOXueq4yzgubO1
tiqmaj2OXdNsmpvzFJ5XPrCiHM/i7v4NzA2qxqBag/hT4QHVmm5H7pR7D4Zq
u+LfYmGw8tvp/6jG9FDmvF612oUVrpeNSBxzxMGIq1YOptxB80ccrHg28W3i
/cX/ax+U9p+o5qQaouoiqo80Tl33EIfXAtlcPHDk/ViaT3dhHxP7W+qbCkto
XVC9XnV7zWtxL+JguuSe400y1/c11z8tvLdFNW7Nhf1yr4nNMu8jU11Ve8sm
JcZd+pZfqP6mWFHijo9KvCHO8tXQa3+d3PXzrNI4ZU5oLrVeyRWLM9ZeJe1Z
0v4HtS+uXrUs7ctQvV7fURhC7anPLcr3IN5Se6dUXxBfoVjxZOjacdfce4Sa
Zh6jGqvao7I1dXxWzU77KHaIvG/tk9D/RRhF+4ueR36ZOO8WxtPeCfHx2ieg
byp8KB5rfOEaqvCdnjUvcU6gfGl+qcvWKXcOqJxCa6XWNeUsa0PHDcWUjL7M
Dz1vayaOb82EizPjau1nEF5+t8TMyh2E/5UH7Fi4Dvsf/+/HxDWd6on3i4xB
fzpxLJ8QOvdTLlYj8h4+YVrVUmaXfKe46I1l/FTMVG31U3zfR99NNTn8usfO
YU/jeEHzXhit8B4a1TdVV9BcUy1nQokfhCNUWxEXrfqp9sUpP1tceD+ecijl
UsqT9a7Ed6huIV5LOdLQ2ONkbeI6rXgn8U/fKt5p7UB+zfFm6P0tqtcoD1tU
ODeaGXpsqWarsaz9kqpdzQi8z+2kki+qhq1W4rVp18T7b1THUA6ofFTch+bG
nZxfHXjPgPYcaI5ovkxNnb9rjdu9xHXCdw8Wju+qrYgX0ny9Hnl35FxoeOS9
NMqpTku8F+dZ7v0+8t4w7ZOsX35r8WcTC9dmVKN5DrkkNabdMfP+N3GuLyKH
lrhFtTDVFpTzKvfV/iLVZF5F/lPhWqo4ty2pcYv2XaguqTmVC8PEzqG196wp
z/sG/b7IXJb2WKr+q/0zyk2092dBas6tbuY4IFwtfH1QZNx7AfLMktsXx9+n
rCOonvBAyd0op1BOqz0z2vM4rsRa4it6FuYY1X4vnvUD9w1IvYdKufmoxLyY
+KtbEtdkbgiMR8U/K8/SXkvxNpovqoWeV5jnrKMYXtav62Xeyyp+5Z7C+8aU
h+5Tri2K+eJ0/7f3FTmq8J4qccaqD4rbfFPrg/qbGdu+W5jDFL54GjmyzH3E
e6jupDqR6kXaN6j9Aapfi5cThpoqfF3mROJzfkid49RXblTmROJtNqRljRj7
IZlrIzM0dso4szgyhlfuMk05TVl/VB1yVYXHsOb2cPEhsTG26pXCDq8V5ucV
J7UH6fqydqMaTuMSA4vHFzcrTlj7o7RveRzXB6fGssK04m03V5gTmxSbk1J8
0h4/cZLCj9O1/sb+L6oHHJQ5x5pSeO+HOCXtO9OeW33TqvrmPOdz+rMs8n/X
d78v815M7ckU/7g2cl1gXeQ4ptqK9tVcWpgv1jzSvg6NPe0ve6nEPcLDGm/a
Q6E9YmNKXC3uq39Zi1FNRmvF4NAckGouqkNpL614WtXRtOf3Q9r5JHBePy01
v6f40yTynlXtXdXeQHEj4kh6ZubN3kK+ybXrtV4jXxJvIDykuRO7dqHajvYM
aL/fXuK9CtenhVtUu9a+X9XctQdYfID2VgvnzFNMQT4SewzflniPgfYTal/h
vNS8t+bIU7R5Tuw8VHsdxYPeVngvtfovnm1uar69Nrb3Uudxwr2Xl/dq3J6s
9xOa42qpuID+QORvfU3gvViqN6pOodxS+1xvDlyfXYjfbPwXIVcqLqGvEm9R
jlvN35si18dVJ7+o8L527RtZIg4F+1Ll5Ryd0Ichzy68x0N9nsz5NcI8yEcT
v6sBmvdlbqi6vObTgnLtnoLfUGHRyPt9FTNVQ3yh8H425Xf6v9ofq32y4l20
jmi/xf8BaUXr7A==
          "]], Polygon3DBox[CompressedData["
1:eJwtm3f8V+Mbxj/nfJ9znnOivdEmZCXK/CEzm8ree4SMRBlJ9gjZMyWVEQ07
s1CyZ1KpkJlSsrJ+19t1/jivz30/6zznGfe47vvT4dj+vc9Ia7Xa0rpaLei3
UV6r/ZrUatuIXk0Fm9er1XZU2d7if9HvVD0tRW+rur6laNUPFf22+uxW1Gor
VFYvq9U2VZv1RT+kZ7yeFer3s57NRZ9Xcx/6bq+29XmfJnFm7rbNVbdjzX2e
F99abX4U/2Ks1SaKX0f1+4hfU/Q/1dxmq2y2+Pt5v+itVbab6FfV90GNv674
vUXfobLb9SxQv4V6nhA9SOV91Ka7xu8k/lq1Ha0xloi+VU8iurvKmoveXd/4
rtp+qvmOLbwmK/VsVs9r9YToxmp7h/pMU/uOane5+JPUZ6Tox1XfSnwP1T+n
+kniW4vfQvwL4rfV87L4r8S30Xj3io+it1TZl2q7Zur1+0vPUaLnpJ5P1O9s
Pa2j1/5v7efq6v+Vvm2a6vdV2fmipzOG6LX121n1PfUNL/M9KttB9Fi970E9
P6l+uZ7jVHaq6qaqb6n2q7GPav+WyvZUWUO9bx3RS/S+Q9SvoJ/qZ6nsBdXf
V/obmPtXenpojF35Zs31V/120O8wtR2gPo+LnsT5UL/e4hPRDdTmF9HvqM1+
Ku+u/jurbLT40/Tunmpzh+g2Kltbdd9ojK/V/hyVbZV6r+u0fj1q3vOp4q8K
PsMTxL8o/vrgPWFvnhU/UvzV4h8W/6HGmKnxTuNMiP5ez7finxf/Xeq1aqr2
PWteM+4Ad+FE8Rtofu/raZB4z54X/ZTaNBGd6bed5nuN+u+l72qvNo1Fryv6
e9UfrLEvVJthKrtUz0uiX9bTXH0Wqc1Utd9W75qlMf/hrqlssdoN0TO7zt/X
kLOk5ybNr5H4yep/tNqvp74Xavwp6r+U862+F6l+Z9Udo/K/OSvccdEfq6yl
2jcU/5DoXVX2qOjf9RzB2VPZ16L7crY1XmeN9Z34g8RfoPddkPp9X6psf9G7
6XlM9B96jhR9NXNUn1Fq04i5a7zWos+kncbrr98W4oeo/V6sv9q0U/tF4qeo
7Tal1zrVu9bS2vwPmZNYdjUQf4/6nKz6E1V2n+hD1TcXvYXoS9TnlWqNWJsp
eo5X+Ti130Rthoq+WM8Gor9QWWfWJrp+J9FPa35vcMZUP0BlW4tepbHO1Tum
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
U744tU+Eb/R/dy0wwA==
          "]], Polygon3DBox[CompressedData["
1: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
Eu7/MJwb2A==
          "]], Polygon3DBox[CompressedData["
1:eJwVzrEuQ2EcxuE/Fc5B2Wyq7qFq6ChmiUVON5UYddGk3Tt0kYiEK7AQEmoS
YmzDFdAODGw66BV4OjzJe37fd3LOeq2+ezQdEXlm+Usi9mYi5kkpiW0tPxdR
8XzJchrxpD8zdpZNGks8cujuSN+xpwi67Oufetn+yEW807G39C990x5qA07s
bb3Agf3Ciu/++uaIe+5ItFNnZ5P/tZvuv9prFHmjpaVs2G1y7t1495YHuixo
584uWLSP3e/ZqxTo09Ayruxv//jDtV3V/gHovyfH
          "]]},
        Annotation[#, "Charting`Private`Tag$248206#1"]& ]]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Yk1/sw==
         "]], Polygon3DBox[CompressedData["
1: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

         "]], Polygon3DBox[CompressedData["
1:eJwt1FdsjlEYB/Cjn7bGpZUgKWLGDnFhxd5KhaCl+GxqhSuziNSITYhZIzEq
hGhIhZhBJERC4gIXroib2mr/Tl4X/5zzH89z3vc9z/c1TS8aszAjhNAbMuFt
jRAGVA+hMhXCX8Zd/G/NEDYx51QL4TOtnPZaphc+QK4/jMsKITc7hLp6dOU1
ks9Rd1x2I78E6vHK5Mp5abXtae3gMv6APpS2Al8Ou9U11C9Xrzx+C95rvJS+
hL8YVtOy8BJ6M7wpTKH9wK/T6+AN1X9SPxq/Ta/0DB+9wwfYQXsCBXKDnb9S
NsMz38cf6bPfug9m87qpzaQV4pNhr7p39GLaNOtUGKG2jdwifdY6s5BXhe+R
XaZmKXRx/nPZlrI9ZXpAPq2GXBV9npq03DQ4oO4XfTB/Jj4DDtM+qmlgXx9e
xDvBr6rNt9+cmdxVF/1nqO2pdoLnGcofRjuqfou6zfBYfgjegT8+7uN3iN8W
36AHK1zDK+I7q58El+wvgm14bN0lJx6O2ZfCHMZZ2tQ4U3gvmEt7T7MNB+N7
QRHtpAO+uodVvNXwNTu5h3gf+fBNvjm9ON6L/V7aHhgmMxJO25+Cfp59ttwh
/RbiC+K58i9lRsEF/Dzci/P9/27inDSh5UAx/sZa5ZDvUMDrLjdd7Rh6XrwP
2nq5Z/afMpIZqvw/663ivMdZg5dyRfi2OOP8zrROsB3P1e+cfRkMlJtLK/DO
OXJr4jzH7xnvh17Eb5xK+sb+r6BQbgQ+HMbGeYvf0P5EKrmDR6nkW8Zv+iUj
+b3GeejIrOD35feBJfhws5CnfjS05j2z7nT2Nv5WqE07Q3tiP12fq9YrMCEr
+Y/4o/9vGI93rxXCEdp8/rx43/I/vVc7Z9/Bb4PjQlv8YZwv/pE4y3Gm1VfA
Cto6fC0c1CsbBqlJe9Z0vG8NnvJmyt2wXoeJ9Fnxju1zU8n3aS9fkpmcd4t2
M86SzD+40Zqh
         "]], 
        Polygon3DBox[{{2046, 1420, 1408, 799, 798, 2191}, {2199, 808, 807, 
         1622, 1338, 2341}, {2130, 792, 791, 1522, 1527, 2131}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0r1LlWEcxvFfnXzLxaEWh6JBUEpN20QJCl8HLYfCl0yPitiQuggShKSi
WyhC4X+g/gGaQw5iKoIiKi3mUkPiHCUW+HlCOOf5Xt/r+d3Pue/Dcyc90Pz6
SkR89H0sJDnPZQTnMyNysS47Yke3yG/yFH/DV/ht3pYVMY31uk1dkVwkf8BD
/gAzrXmrO+JV/Nyafn7Ka/lf/oqf8ad8ii/jM10bVuAS3r0W0Y7vMiI6dff4
Cz7Gu3gx7+Df8BM+15XIL+Uq+VhekUuxExese6/vkv/JP+T77qX5OE/zE9zA
bt1391axhZfJPfJD+TNm23MrnmFH8kfiE2hy9q/8j7PVJDUfTZ7LK3mPuTls
0JXjMS+QZ+UDM4X4W9eu+8Jv8V/Jb/FlfoM38ims0V3HWnvOlyfl/VREDk7q
enV73BZignfz3dT/rcaQvCN7ZPx0tnXsN1Oth+hzeSSvydvmjMSMblC3xX3i
lG/zDXKVjxoavny3LgBwoklA
       "]], Line3DBox[CompressedData["
1:eJwl1GWXVlUYBuADrMXiOx8p6Q5ZgHQpJYg0iuTQHYKkgHSDCgxhgBLDDDEM
PQylDDU00iEhJaE/getZfLjmnvt53zlnn73PmpIpozuNypckSWE/cgskSfv8
SfIlpTlRKEk2ylos5w99hfyeMuzlT7N98gd+pBLpZmXlN0wkS28iezCJymSY
lZPTWcQMmnHa/CtZhfJk69nyMIc4q+fIqlTgnP63fEhtHvCIPPMn8jEV2RLP
E9cxryNXsiruRwt+N8+Vn3CKgSwumCTL5NL4nWO+86l8FWv22Tm5hvqxLuaY
pck2vORfXrDM/H9Zj+c8i70xay0/5AwnWWH2VP7DF0zTa8jetIo91ufKeXEv
ujPVrLpcQi9axrOZzZaz6EY1rjDfPDXOLM6SKXpXeZlLpOqrZV22MlnvLHvS
hV2e/yM503ym/I4BfMwBn22Sm2MvI/XjsWc05whXzY7K37gWnR1mneLvORhn
rO+X97nHdr1jPGfsB3v0prF2vo010oHd5uPlQibQmFtmX8txfB7X17PiGvF9
LpJjdkF+xlv+47jZTXk7rhHvjt5Q9iOFTL2RHExNBtGAMfalr+xDERbo1+UN
/uIn/Y18TVHm6nnyPNv4Rb8r71CMIQxlunlbOTzOkGFMNCsuR8R9GMkMs3Zy
NKOYpJeQGbGPzNbT5c7Ydz6IMzRbJ9ezNs5Nz4yzpmS8Q/rPsbZYf7wX+gb5
K6XoT5rZ2Hj+uHah9/9H3gFzYZuw
       "]], Line3DBox[CompressedData["
1:eJwl1Pd3T2cABvBLjGjtKLVFbapGa2+ltoqtLbV3Yu/dilGrUiFoQ8Vo7Vmq
1IgcPxh1KMf8H+w9Pu/xwyfPeZ7v/d6ce/OexA9KSkjMFkVRnB+9Y6KoF8m5
oqin7EF3UvUE2Y2vWaN3lV3oTCc6MtbeQbanHV+RYmsr2/AlrUm0tZItacHP
enPZjKYk6U1kYxrRkJW2BrI+9fiCJbbPZV3qUJtaLLd/JmvyKTVYZqsuq3Ep
NoqqyipUZrbPKsmKVOATLrqmvIynHGUpwwV7aVmKkpSgOCftH8tiFOUjinDC
HicLU4g/9IKyAPk5r+eTefmQHfoHMg+x5CYXWfacMgcxZOecLZuMeJs9ijL1
N/I1r3jJIdsL+ZxnPCXD9kQ+5hGH9YfyAfepyz1blvtmMtn7OSvPcJpTTLL9
G547PCPb9H/kcf5mon5MHuUvMvQj8jCHOMgW2wG5n338ru+Ve9jNZn2X3Mmf
4d2xybZDbg+/k62k2zLC/cI9wvfCdUywp8vf+DXQN8oNrGe8nibXsTbsemo4
3/wSrtFT5OpwRlkVziF3vZsV4ZyFc8Ud/Se5NJxJbuuL5SKSWcgt24/yBxYw
n5u2eXIuc8Iz6bPlLGYygxu26XIaU5kS/h5ct08K7zk8J//r4+U4krimJ8qx
jOGqPlqOYiQjOGIbLocxlCFcsQ2WgxjIf/r3cgD9+Y407+Vbedln38h+9A3v
0d4n5v3/kXcDQYkT
       "]]}, {Line3DBox[CompressedData["
1:eJwVzjlOQmEYheHPRtHS2RJQsTZRxAGcVkCiQkspyKANtBrWIRHjFlgHHdba
ayxNDD63eHOGe+6XP11rlZszEVHGMBWxig2kFiIK8xEVfmcu4pK+y7voy+ty
FWuY6B51OZzLP/RX90Sv5RtcJbfdLNFt/Rk9xRvfs73nH9DBMVZsp7SIE7za
de1afBtNFLClX7I94g/xkrzVLqu7kxvIY1N/QD99K2Eg38p1ZGwvdHt8Vr9P
x3IxeVdyX17GIj50z7oMvvGFWf936B9GNv+GeyOz
       "]], 
      Line3DBox[{2213, 2118, 1843, 2061, 2564, 2304, 2030, 2100, 2576, 2099, 
       1904, 2098, 2477, 2327, 1786, 2514, 1908, 1909, 2577, 1787, 2516, 1912,
        1913, 2578, 1788, 2328, 2478, 1916, 2580, 1789, 2329, 2479, 1919, 
       1790, 2519, 1921, 2480, 2331, 1791, 2483, 1844, 1903, 2481, 2305, 2036,
        2115, 2353, 2484, 1845, 2065, 2235}], 
      Line3DBox[{2214, 2121, 1855, 2426, 2027, 2080, 2026, 1706, 2489, 1857, 
       1931, 2427, 2307, 1708, 2308, 2523, 1933, 2428, 2309, 1710, 2310, 2524,
        1935, 2429, 2311, 1712, 2312, 2525, 1937, 1863, 2496, 1714, 2315, 
       2526, 1939, 1864, 1716, 2498, 1866, 1941, 2430, 2317, 1718, 2591, 2145,
        2146, 1943, 2351, 2553, 2028, 1719, 2338, 2534, 1995, 1964, 2201, 
       2241}], Line3DBox[{2218, 2040, 1969, 2010, 2545, 2343, 2150, 1809, 
       2149, 2593, 2085, 1877, 2600, 2174, 1808, 2394, 2173, 2599, 1732, 1807,
        2393, 1730, 2438, 2278, 2392, 1728, 2435, 2276, 2391, 1726, 1806, 
       2390, 2389, 1724, 1805, 2387, 1875, 2527, 1944, 1804, 1987, 2537, 1967,
        2052, 2232}], 
      Line3DBox[{2219, 1989, 1972, 2013, 2546, 2345, 2151, 1817, 2572, 2368, 
       2089, 2408, 2323, 2178, 1816, 2407, 2177, 2603, 1746, 1815, 2406, 1744,
        1814, 2405, 2404, 1742, 1813, 2402, 2401, 1740, 1812, 2399, 2398, 
       1738, 1811, 2396, 2395, 2322, 1945, 1810, 1988, 2538, 1971, 2012, 
       2225}], Line3DBox[{2220, 2125, 1974, 2451, 2016, 2015, 1755, 2324, 
       2452, 2453, 2325, 1757, 2291, 2454, 2455, 1759, 2293, 2457, 2458, 1761,
        2295, 2460, 2461, 1763, 2297, 2463, 1765, 2608, 2182, 2464, 2375, 
       1767, 2376, 2573, 2185, 2091, 2365, 2574, 2092, 1768, 2347, 2535, 2017,
        1976, 2056, 2234}], 
      Line3DBox[{2221, 2117, 1978, 2465, 1997, 1996, 1770, 2511, 1898, 2466, 
       2326, 1772, 1124, 2467, 1774, 2298, 2468, 2469, 1776, 2300, 2471, 2472,
        1778, 2302, 2474, 1780, 2611, 2186, 2475, 2377, 1782, 2614, 2189, 
       2190, 2094, 2476, 2096, 2095, 1783, 2352, 2510, 2029, 1897, 2209, 
       2250}], Line3DBox[{2222, 2007, 2544, 2337, 1868, 2049, 2050, 2561, 
       2359, 1942, 1837, 2048, 2560, 2358, 1865, 2047, 2122, 2584, 2357, 1940,
        1836, 1994, 2533, 1963, 1985, 1984, 1938, 2382, 2314, 2006, 1962, 
       2334, 2495, 1983, 1936, 1862, 2543, 2005, 1961, 2333, 2492, 1982, 1934,
        1860, 2542, 2004, 1960, 1981, 2488, 2332, 1932, 1856, 2143, 2589, 
       2364, 1929, 2075, 2142, 2588, 2363, 1930, 1835, 2119, 2583, 2356, 1854,
        1980, 2001, 1979, 2536, 2002, 1834, 2003, 2224}], 
      Line3DBox[{2223, 1999, 1793, 2340, 2485, 1847, 1907, 1848, 2541, 2000, 
       1794, 2348, 2515, 1910, 1953, 1911, 2548, 2018, 1795, 2019, 2517, 1914,
        1955, 1915, 2549, 2349, 1796, 2020, 2518, 1917, 1957, 1918, 2550, 
       2350, 1797, 2021, 2330, 2551, 1959, 1920, 2138, 2033, 1798, 2567, 2069,
        2139, 1849, 1924, 1150, 2140, 2035, 1799, 2362, 2486, 2074, 1850, 
       1926, 1851, 2555, 2141, 2239}], 
      Line3DBox[{2226, 1887, 1970, 1886, 2504, 2344, 2088, 2087, 2165, 2571, 
       1885, 2086, 1884, 2179, 2604, 1747, 2374, 2447, 2176, 2602, 1745, 2446,
        2284, 1743, 2445, 2283, 2403, 1741, 2444, 2282, 2400, 1739, 2443, 
       2281, 2397, 1737, 2502, 1882, 1881, 2503, 1735, 2011, 2321, 2442, 1968,
        1880, 2264}], 
      Line3DBox[{2227, 1888, 1973, 2336, 2505, 1990, 1946, 2528, 1889, 2285, 
       2506, 1750, 2409, 2286, 2448, 1751, 2410, 2287, 2449, 1752, 2411, 2288,
        2450, 1753, 2412, 1819, 1754, 2606, 2180, 2289, 2605, 2181, 2607, 
       1890, 2090, 2369, 2596, 2166, 2152, 1947, 2346, 2547, 1891, 1975, 1991,
        2247}], 
      Line3DBox[{2233, 1893, 1977, 2539, 1992, 1993, 1948, 2529, 1894, 2290, 
       2508, 1758, 2413, 2292, 2456, 1760, 2414, 2294, 2459, 1762, 2415, 2296,
        2462, 1764, 2416, 1820, 1766, 2609, 2183, 2417, 1821, 2184, 2610, 
       1895, 2093, 2370, 2597, 2167, 2153, 1949, 2360, 2562, 1896, 2126, 2057,
        2249}], 
      Line3DBox[{2236, 2078, 1872, 2148, 2592, 2318, 2079, 1721, 2501, 1874, 
       2431, 2319, 1723, 2388, 2274, 2432, 1725, 2275, 2433, 2434, 1727, 2277,
        2436, 2437, 1729, 2279, 2439, 1731, 2598, 2172, 2440, 2373, 1733, 
       2601, 2175, 1876, 2082, 2441, 2320, 2164, 2083, 2084, 2570, 2009, 1878,
        1966, 1879, 2053, 2243}], 
      Line3DBox[{2240, 2169, 1839, 2147, 2569, 2076, 2077, 1871, 2500, 1858, 
       2383, 1801, 1709, 2491, 1859, 2271, 2490, 1711, 2494, 1861, 2272, 2493,
        1713, 2313, 2384, 2273, 2497, 1715, 2316, 2385, 1802, 1717, 2499, 
       1867, 2386, 1803, 2144, 2590, 2170, 2171, 1869, 2081, 2585, 2123, 2124,
        1873, 2339, 2540, 1840, 1965, 2200, 2242}], 
      Line3DBox[{2251, 2132, 1842, 2064, 2512, 1901, 2063, 2168, 2062, 2565, 
       1902, 1900, 2613, 2188, 1825, 2423, 2187, 2612, 1781, 1824, 2422, 1779,
        2473, 2301, 2421, 1777, 2470, 2299, 2420, 1775, 1823, 2419, 2418, 
       1773, 1822, 2575, 2097, 1899, 2530, 1950, 2059, 2058, 2563, 2129, 1841,
        2060, 2258}]}, {
      Line3DBox[{1648, 1343, 1139, 1344, 1301, 2536, 1345, 1302, 1470, 1384, 
       2426, 1517, 1143, 1182, 1467, 2569, 1543, 1468, 981, 1469, 1544, 2592, 
       1184, 1261, 1308, 2537, 1309, 995, 1356, 2442, 1192, 1264, 1310, 2538, 
       1311, 1009, 1362, 1199, 1267, 2505, 1312, 1313, 1023, 1367, 2451, 1206,
        1270, 1314, 2539, 1315, 1037, 1333, 2465, 1144, 1273, 1438, 2563, 
       1525, 1439, 1051, 1392, 1440, 2564, 1145, 1275, 1393, 1445, 2566, 1394,
        1395, 1334, 1370, 1664}], 
      Line3DBox[{1654, 1642, 1247, 1452, 2567, 1451, 1530, 1528, 2582, 1529, 
       1506, 2519, 1239, 1060, 1602, 2612, 2611, 1600, 1047, 1595, 2609, 2608,
        1593, 1033, 1588, 2606, 1586, 1019, 1581, 2603, 2602, 1579, 1005, 
       1574, 2599, 2598, 1572, 991, 1178, 2499, 2498, 1176, 1259, 1321, 2533, 
       1322, 1286, 1414, 1665}], 
      Line3DBox[{1655, 1346, 1282, 2492, 1305, 1074, 972, 2429, 1164, 2493, 
       1079, 987, 2434, 2435, 1087, 1001, 2444, 1097, 2402, 1015, 2449, 1107, 
       1029, 2458, 2459, 1117, 1043, 2469, 2470, 1127, 1056, 1226, 2578, 1500,
        1502, 1133, 2579, 1064, 1375, 1376, 2549, 1297, 1318, 1659}], 
      Line3DBox[{1656, 1348, 1284, 2495, 1306, 1075, 973, 1169, 2496, 2497, 
       1080, 989, 2437, 2438, 1089, 1003, 2445, 1099, 2405, 1017, 2450, 1109, 
       1031, 2461, 2462, 1119, 1045, 2472, 2473, 1129, 1058, 1231, 2580, 1503,
        1505, 2581, 1134, 1065, 1378, 1379, 2550, 1299, 1319, 1660}], 
      Line3DBox[{1657, 1627, 1292, 2485, 1336, 1335, 1448, 1446, 2531, 1447, 
       1276, 1488, 2576, 1489, 1487, 1486, 1215, 2530, 1274, 2511, 1213, 1038,
        1209, 2529, 1271, 1207, 2452, 1024, 1202, 2528, 1268, 1200, 1010, 
       2395, 1195, 1265, 2503, 1193, 996, 1189, 2527, 1262, 2501, 1187, 982, 
       1157, 2500, 1183, 2489, 1155, 1253, 1424, 1514, 1425, 2583, 1153, 1516,
        1672}], 
      Line3DBox[{1658, 1449, 1294, 2515, 1372, 1371, 1559, 2594, 1557, 1558, 
       1491, 2514, 1222, 1053, 2418, 1124, 1040, 2413, 1114, 2454, 1026, 2409,
        1104, 1012, 2398, 2397, 1094, 998, 2389, 2388, 1084, 984, 1160, 2491, 
       1158, 2523, 1254, 1464, 1465, 2589, 1252, 1466, 1669}], 
      Line3DBox[{1662, 1161, 1281, 2542, 1162, 1347, 1255, 2524, 1163, 2494, 
       1165, 986, 2433, 1086, 2391, 1000, 1096, 2400, 2401, 1014, 1106, 2410, 
       1028, 2457, 1116, 2414, 1042, 2468, 1126, 2420, 1055, 1225, 2516, 1496,
        1227, 1560, 2595, 1277, 1374, 1228, 2517, 1296, 1229, 1684}], 
      Line3DBox[{1663, 1166, 1283, 2543, 1167, 1349, 1257, 2525, 1168, 1170, 
       2384, 988, 2436, 1088, 2392, 1002, 1098, 2403, 2404, 1016, 1108, 2411, 
       1030, 2460, 1118, 2415, 1044, 2471, 1128, 2421, 1057, 2478, 1230, 1501,
        1232, 2424, 1561, 1278, 1377, 1233, 2518, 1298, 1234, 1682}], 
      Line3DBox[{1666, 1416, 1175, 2560, 1430, 1429, 1260, 1541, 2591, 1542, 
       1540, 1571, 2590, 1570, 1471, 1577, 2601, 1578, 1576, 2600, 1191, 1474,
        1584, 2604, 1585, 1583, 1197, 2408, 1477, 1591, 1592, 1590, 2607, 
       1204, 1480, 2573, 1598, 1599, 1597, 2610, 1211, 1483, 1605, 2614, 1606,
        1604, 2613, 1217, 1219, 1146, 2483, 1242, 1456, 2520, 1455, 1532, 
       1457, 1458, 2486, 1248, 1668}], 
      Line3DBox[{1667, 1171, 1285, 1172, 2382, 1350, 1258, 2526, 1173, 1174, 
       2385, 990, 2439, 1090, 2393, 1004, 2446, 1100, 2406, 1018, 1110, 2412, 
       1032, 2463, 1120, 2416, 1046, 2474, 1130, 2422, 1059, 2479, 1235, 1504,
        1236, 2425, 1562, 1279, 1380, 2551, 1237, 1300, 1238, 1680}], 
      Line3DBox[{1671, 1511, 1295, 2548, 1224, 1373, 1499, 2532, 1498, 1497, 
       1495, 2577, 1223, 1054, 2419, 1125, 2467, 1041, 1115, 2456, 2455, 1027,
        1105, 2448, 1013, 2399, 1095, 2443, 999, 2390, 1085, 2432, 985, 1078, 
       2490, 1159, 2428, 970, 1304, 1303, 2488, 1280, 1154, 1694}], 
      Line3DBox[{1674, 1537, 2555, 1151, 1404, 1509, 2521, 1403, 1402, 1243, 
       1147, 2481, 1399, 1062, 1442, 2565, 1441, 1567, 1216, 2476, 1484, 1049,
        1555, 1554, 2597, 1566, 1210, 1481, 2574, 1035, 1552, 1551, 2596, 
       1565, 1203, 1478, 1021, 2572, 1549, 1548, 1564, 2571, 1196, 1475, 1007,
        1546, 2593, 1545, 1563, 1190, 2441, 1472, 993, 1520, 2585, 1519, 1185,
        1180, 1569, 1387, 2553, 978, 1432, 1431, 2561, 1434, 1142, 1703}], 
      Line3DBox[CompressedData["
1:eJwVz09KQmEUhvFT9E8FIWgDraDMFmFFGmZR08ai01xDK4hsUg2a5ESHTYog
CZIW4DB0ElRGETTp9w0ennPf+37n3m/5qFltTEVEGSdzEVvozkYsZCNu+A8d
DGciepmIlvkVx3iQXfIPXry74ntZk5/RwEB+K2ubl+w+52m7f2WH5iccYKyX
4z0s6u3zl+xbr2Z+xC6ymMgrnNfbSc86fVk5/RO2kcGnbJNz6V78rreRdvj+
HZfSPVFMXazjzZkLvTVzHQWMZPO8glOs4kN2pndt9z9T4SwV
       "]], 
      Line3DBox[{1678, 1643, 1536, 1150, 1398, 1507, 1397, 2554, 1396, 1241, 
       1240, 2480, 1061, 2423, 1131, 1603, 1601, 2475, 1048, 2417, 1121, 1596,
        1594, 2464, 1034, 1111, 2605, 1589, 1587, 1020, 2407, 1101, 1582, 
       1580, 2447, 1006, 2394, 1091, 1575, 1573, 2440, 992, 2386, 1081, 1539, 
       1177, 2430, 976, 1428, 1427, 2584, 1518, 1141, 1701}], 
      Line3DBox[{1687, 1637, 1293, 2541, 1149, 1337, 1494, 2513, 1493, 1492, 
       1490, 1221, 2477, 1052, 2575, 1123, 1214, 2466, 1039, 1113, 2508, 1208,
        2453, 1025, 1103, 2506, 1201, 1011, 2396, 1093, 2502, 1194, 997, 2387,
        1083, 1188, 2431, 983, 2383, 1077, 1156, 2427, 968, 1463, 1462, 2588, 
       1538, 1140, 1692}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
fjcl11IfNLoO0mHxjav7bhuGEwmOtU68Tl6kn7NROnqGDsFWJy9zMyeQl2vk
dZsX+pFLQe/uSIxRca35bnXgRwqZ0pLe+O2OD6lL3lnt3UXNV0M3IH82huBV
TVgpqmOUDlpvuJTPB6WQbkeeg3sux5Hs19tEjtTTQXL9ip4noxmEf/hrqA3/
a+JpGJIsSM05uvdM7KYNauC6Wf20tRT1fC02kBT2fRg2yl7esGRZImz0sJ7O
W9cOGWL0NqfBcRhz7DGYPu0NKueMJ0Lsm4Gx0FMxJ4cGRscUZMQjbpL877FZ
HIVNoF3YrfRpiAaB6imGvfX+5AnzSl8RjhYwVZ0iUmE0uL0113syLJ64xYnG
6xS2Q88JYYEzueMQ/UnlVXpHPnlVEu7rEt4DTVFMV0T3j0LX5im2HPlOYhB6
j9UybhBexKneD97eA9dWhWsItoyRVV2qyjOedTA2Xbdlu0UrLHwoy64yMUK8
Y3R3W/imU3N+Y1GJeS8YD4X12+kPkydXD2SziYbAnQvbbfIi+mHLPosvg2zD
5Fye9oGTIcZk9dPP62O4BkDXWokxIn6YZOfdvEAEIkiXztjRiyf6gUH6s1yV
+CgpKPjhbCmbSpiL3v9s4OsFVZdDWQuFx4nu+8crVB8WEzPXEcd1s+2wROlV
xJ95a8clY97H1Px1XTn0wX1q7vostGuezxk6aY7kk9jjexna3ZYszY0thcF1
1zL//P5y//03tjl+nmT+TedLV5JKQPr+4vN/ng+j1SraXannRc5lvCYPqOdE
tIv7oH20i/ugfbSL+6B9tIv7oP19Z08VZb8d+HtVH1rVt+h43dxz18yYrVLR
BJFN+sqkXZoHK7W1d9ODK0Hv/Ke1rBZ0stdLVLRLKIFEhiYl8UkUAhNHiOTK
BhpRl+g7bpVcSWqWuXEvLquFA9ZrEz+v6IU9x3oeqPsNEw1d+XPj2+oB7eI+
aB/t4j5oH+3iPmhfMuQww67F7SDsLBP55/d+r1TyU0ZLSv72A/YH9gWuw/tw
fXC9/U7OriZgte2VnUm0hhYmntn3vTR4dHlQQmLdMGHM1A5R4nAB7xdWGi8X
D8DWd4oX5IWaYW2qjgLz5BOyfeTxHv96GhgzaK2Xkx4m7/SX3T22x4f8mjU5
Zt/ZD9gP2B/YF9gP2B/YF3c/vIlSfjFCpmxjGvlCush6UIV3xY3AYn1HOSt7
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
+UG/MQ70H/UO9Q9173dC5rKAgFeQ77xgd9nBMfhE3nl2JXTDaa8miYcUfiwo
/205hftJB5zvpHBch/fhelyH9+F61HfUe9R51HfUe9R51HHUddRz1E3UUdRP
1E3UUdRPk82tDW+lciC2Jap6QfkHmCe3xas7dwxCD/Ht+1yeB2eObCBci2mQ
OK4j1rmtFVhCbl/sp3Djl7WO3BS+lDllspnCJSItd7B5jMMpeTMHnfwsMJVk
ZR4faP97P9pDO3g/2kM72LfYx9i/2LfYx9i/qEeoT6hLqEeoT6hLhwqPmzuI
jpFh68wrTcY5hCl3VCTsz9+B5rgPrntIJ4XiNZ5XyuPJSom9HgxrCuGMhkaU
siWlDwe6E42/xJOmiz5LbvMXwlLRm4NL59HJ7t3Xmg+yZRLTuv5X4lEVEHbH
yn3j4AThu7Ul1P88IbUdNgUu5yrBefP3q/dnKJxnfbVbZxY55uGsdKS9ArDP
se+x37HPse+x39E/9Bf9RP/QX/QT/UN/0U/0D/1FP9E/9Pevn//VV9hn2F8N
7xcEp+u8g1Iu/1TDNeNwbHKfac2GD3D5YcrvKgr3UHs+/zaFd/N5NzdSOK7D
+3A9rsP7cH3NVZGeXOF3pOrZ7sKsQ3SyYdWNzNF5pf/HfY7rX/xf/F/8X/xf
/F/8X/xf/F/8X/xf/F/8X/xf/F/8X/xf/F/8X/z/OY6fo8LPVeHnqf6pnZ/a
KUHLJxLh5J79zhNVufB+N+/Oty/m/n6Jqd1TGtrRniDxVujjpahMaI97v+hK
1dzrG9fcfT7/8F6Ik3XcRC9Ph64nTgeON9Fh3qedZ56pPyNBq2Sdfx/KBOZN
D6Iv1Pzz79kw4Ntvq300kcT+2DXVzpUPXzq17zE/ndvOPEPDsRj7WnKsvWec
ua4a6s/IcOlmzv05+bnwtwaMnyqut8KKfo41nU4J0PNMbUeGIg3EXJ7unTiX
DSUSE4KrAyKB1ePtx75cOuwT3l+luS8eHvOOCHxZHwq1Uou7dUbp4DoqE/5c
yQ/0VkzK518MBG99hU20b3T4OfbGVsboCcx++eKRUuwHlgLqQ2d+0qFIcl1o
hJcZ8Cso+BnKvIC7VxkOn5ulwyrp7xIKA/ug67bizP73vtA26OXoT+HOTwy2
WTy9R54z2wYeFHsB+p1mL/UofHDfCYMbOx3I+1Mu301W+0Ft+KuGQcr+7Ief
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
svS/I/Tnnu4Z39Zti6qsX6o+hnkBZYiR7t9zBk5FWu+m6LTG4lbpb5QRdnAl
jVp9F6EveqDuy2GSHz5w9Ip4n+0LElyHSZ6E/dym19VeG/sg813OgW1TjiDW
PGezSNjv3R9pS6GVit/m+md45kNA1idsR+DE2uMTzOHkHc2cB3Z767wPNL+C
cTu+WM7WtfUL3oaKfDvoC/mZAwrlkc9AhfNbiz5h/2Ap97bv4T5AN8sbfKX2
MtZOXT/5d5/piQ0FlcXir8G98RLNKT0jeFG6p+XvuShT5qUD10NegauZ2quB
rRfx/FIWVv3f51SMTp0Ovoa3+k9fNSozBKdTo4x/z/3wtNcKFxO5himRwlJs
ihewnySm/PecEGt259jpSSu81jB4N3rICIyKbrr/PdfCfJ09+Z6NFZY6/LKm
DryIxtZOPX/PwWhbL7DtgJw3Ks2JnVO/YAzGx5+rlhF2SjpIP9rT9AFDiu7V
jltK4sypk++/EfJ1iyPWMXuTMP1pOWnR/SWkKfZW+83/c97EwVUTGX3XF9K/
LNPyOb/ASTrXIQWi/y+vgvo/OL4Gx928G+scjNEptjwjhrBzU/wRlYc11/BX
tXooPz7Dr8Id2cOEnLr31vuGndYYPEOpK8P1HEPnVqTsCPne5Bd+RnbeWNPY
8odXzozIty+F4on+l3n8XlxOywfdjFSKnzPu+IWun9nqP/A+yvqhw5pv/SC/
rZpNscUe39MJz0QS84panWEkQi4Qnpk87Hxa5YUdSxLkT8Q8zG5TL9kxZgE5
mgtX1pNtULW8tP0aYc9V0Z+XaoMt4XHWhc9ct9yxZ3qUpEX4xSGVrS+vhCri
7K+z5mwHbfAxFbT7/N03rWX6e3uqEnYOLowbpLphG6U7czmhH/jxTugvsjXu
0ArgPmdli+1N84sHCH3ZPSXrRmnt0ArdGMX73bHkoMBTbkLf/RTVj3Y3Hwzk
bh9vcXPA9z5NHymIcdBb2mBmx+uP8bePSGQ//oCzG5vN9v8kg5dfeYkBZQr6
B1+7pGHphgN1HzdXkMjw60czQ5ZqIyb7vGs6ZhaC6w7ZXPtStfb6IkYY9Eg/
UAxusprMO07FYZ1nU6NQ/Nrj3Gf8NqknJwS+O+j8kocwdFf0PvqQiMPLB1gf
23JHwI1HjuY880l4RiUlNHGKDNfEL6YZ7rKBCOo39D1VQZhKrzcyRti/EpHE
OixiD84mfXlnd8VheS3L3VIiPhsfr7rPVaKKOY0PsC06EI8Id357R3zH0irR
yKCWm8i3+7zruwOxSFOy7RQz8Vymy4dYq/c6IP2JbNavIcHIJHhV7AXR/z42
7ru3r7jgQv2NuMMtcejq73i48wsZOrBm6vaPILyj4pn1ujoMDS31uvKIfpA5
Si0iMgw1Io/odPckYwar2q6/9jMzSQz+GEhHipZb5p1XY/BSHasEZR8Ztkuy
/dGhbEURo8kZbsos9FIfu8fK9s/XcQ2F9ZZkZMZCsb+trcy5j9gvJEfpU0oG
Nv6vRWF/XCBpl+kbh8FstFrYSFLqJsOFa2J/LJl08AVzsaLl+mzMqV1c/5mw
5+KnH/ef3PJAllf3hEze5mCTjCRFG5EHyRTdQXvro3Hn5deZndsLcP6K1HkG
Iu+883tq8LOoEJVuy8ev/1mKpunhflaaa393tT+3X6tsb4abW/tkX8VP4Uw8
u4RMVS94Yv77e2a5oGn+6Hqd0QQyW1cefXBvBARsDo6tmw6BnyEn7NN6x3Do
hzn/a40xoDebZr111hjPVjUtpb8cQyNTKy3e8jEYZ1vcMdQegYf8X3d384zj
ui6RWottY3DzVLeC9MlsvOj3mPdb/gQqX8nSk2YZAamRxz+MKatQW+/zvQ1z
U2jI4Xjc5PjaPMjGmPf8Q5e4/2oTOXnMSJNk8Hfn4U2e90Y/R5Oy8atRIGuk
MPiTwCEHrJc822cTcTBmfa0MfSJoLp9kqhoh5vOPedRmKocLsj2BcU5ecOvS
n6SLLoT+RP59X9tQmDY+SvvUzhEmWfLdrIk4o3K7oGC44e1/tfcj7t0eIfzd
aqqclk7ZCw/E9ILUVgcwU3uQ/Pd8M847H3yfZsZhxnH+RBuT90DLqZ47QMzb
obtpInwNVXh+M+20gbg/RC5Td0bcJkPtT8mGRf1CMBmwkM74cg2phAzPL5ST
oelZjmSLlD+kvRWINzh2GScfOCXv/P33nmjOfq2NljBw4aqq88nzWPypeUc2
EZf2nR47nF8ijv9q28uo5P+ej3FkYV+mooklsjAIPTrvK4HMMS2X/uZB+12N
jx/Me6G8LaPM95fSyCncmrmLeC/B2xvdHSQSsCjqE43cluv4suJ2x2vC/uNV
ucsPXtbhgXcpM9al2njZUXEgm2ft+Ua9UPUrvcQV93n0KG3qeoE9lZuvFBD9
+32fXLz20Qv/1V70EZiUJeLDmcs9tAUYg2Wk454b+P1Q+NrlR4XEc9eTZMZ/
vY8Hyo+Bvq/EkzF6jpuqkfiO2o9vsexwcwO/lv7Yttg4TChzkUwk9F8/7rRf
eROCG1Kqa8euJGOW2AYf/b/rELyp9T/bp+O/WqkTk2J8DWRIyNVXvT7YBkKf
Yrcqne/AZYZvyiry03B1WW3wzbVMOFrOdYfaoQF9FJ7L6daSoOVy250dj/2g
2l/z5khRDVpF91heO0OGjZy6L/0npXFA59efzZbVeM9xIf+ZLBkktsiYD51I
RitFPQU7wQYMeNzuMDFCgrPK2QxVJ0uxosIq5d7lVtyzh97bsWYWaIx+RVUZ
9eG/WhGnZxTcieNrjrPyabfSjIgxWHIr7yc4IRiun6LMnuoBzmi7yMeLRaAn
JW1wKagbvBMaOvvezYCv92yNwIlstEtK1LjJ1A3mg9NJ7J0z4J2y/idzST0e
MhY99v7IEHiINgreEVibv2x9tbO3KHUSbvjoeGxJyYXE8O0H99YNQQbF9gLp
lWF80mZAeby6GF4KSdCzfJgAlZ0u1jzbZmGn+dS5B3Z5mHsGP3J86YQHRpPT
0uLDGMh3ojl0sAy7g5TTrlJNgtOyx/gP7hkQvhkar8dZifSJodbSBD86sd3g
5jqGKvxXe1G08hpLJwlO6n5UtM4aR2Gu0Z9v2xuw9Df/pYSy4TXtL+ZJ2Snn
Ugk7v93nEnowiTlyIu++vSV4pZLX8SqJMrAXrpFtXTeJV7LpG7xliX6q5f2T
WYuQa6ly3kFwEo/MuTRPSg7DvfCSK9eUGjFzwaT6s8E0OvQoMjCu64E96see
y1c14zjbnMqWuGnMClja5XSz8x/nl/UmNlWbKBqgrNBkikJuAMqYD9IcUp2C
ma+KCT/NB6HgE8uA4qca0O58+IY8OAkfjG9yedFEQmXaKO3xyVaYv2h4xJeO
BB3RS4l3WMv+q6Ur+chnfILIO9QxhtlXsyBL1Y/rU1QiSG3ffXRrMxH31mdc
1PnhDe+aTT7HeUUC73y9iCmRZ6/zD9ZsVrKCw6eGGj3oWkCD8IE6HRJQbs+t
y4oygdPc87bqIuFgI2ywgYmInz8XcoOjNjvir3gBmr0iLZCpk114Vp0E1wfI
B3ZQu+DxGrer4XbZUJh5/8nTHjKMGJs6PZ4Nw5I+zQG/zHwY3P26/2w1Ed/C
vvrfli3FbTkyQz5SAzD9uGDjbc5pcDFYX12fE4XHPtKwZPh8hN6V9A/+BJ89
6L07jdI0Epe4tTd4lsXBdaHRX56zxPumdudBSS8OOnA8aZgcgcXH/hefcQxD
Fv3HxKftBSgcT0o/PZgGS6OxOSmpa8c3M2/BPkHnYmCtOD9l9CsVTj+JcBQM
IsOxlo0nks9Nw/Vr1LNxAfHwWnHv+41pA1CiFnSXWrEV5VS/W2TZFMCbMJ9X
M/OzoNyh23ZXIAtiJp6P8BWFAENEplYlMQ5qfEGbdF5mwo22m3JyOq7w5fBy
w+YhMjCs3kdP82/30R8Qi+FNEMzEKadN6kYsnhD9tuuRCKGfM7WjaUyoH1v0
kyXSatLAQujPkdTWaRCfHxs3NyNjpXiscJdxDCSlea5nPVoB+rqN23XShkE+
49fS1XAHiPtmwmMoOAnz8f4llzKToIqbWesLmxl4BWUtMxF8ZJdEAFucXQRM
l//esoXNGIqeWx6X/Q/nCJU0D7L+4c/Bh7c9LbbvegNyN04o7SZwEdflT+z8
z4qRQqww2rvYGsKW3quwphO8+KsOQ8GrYfw10tZueNQNvCaGPN01J2FM3127
OG0GZS7ujilpcobOkNvKNld7oKpXo7qLrx22bh0aaie/w/NGDrtSmmfhTVeq
cv6zaGCtu9cSU2iOQxWXHxxfIsPkxts7eAw/4iXRaf0fyXb4SOd2bXUtkS/O
txsLi00gW/PIellBbyQNziW49q5dz5ykahvkOzAKrjU1pw+FxqLZU81ZjcVx
cJAoEaahToPE19XW7Yt+aGkzE91K8GJ20+pvPwM/4u6YCIXK7FBUp+4uz64k
g9ONEe/jTKOY7GJ45kZyKp6y876f9H0cqGMkdOTdp/CiyeelPM88/FFwPbnT
ZhAC0u/NRAXnwRyVGne9eDRuWSzuZKwhg7xflA7X50K4o6gp0GqZgW3uDRpz
sWT4sNHjsrN3ESZXn18yO56NRairNOpD4POLRxop9Tpw0N3v/gWmEmSxEGD+
LTILGeHjSk17K1AmSMOCeS4P91S4yMook2H/z0Imef5azLARMom9/wldD/wx
//SeBG90e5xDWRG4d0nosO8vxl3JD1QHTQkcW9ARkqQwBi3zs43ccZ3YR19Q
IkU5DHXeZj9PHymG4AXdHs23zfj9QFr240NEnk12o/hwqRyyzJ9vEY6ZRE9r
LyvTW0OQfLvVX3t7GCQ+l7gSxpWHAZUjvtuJPN68m/ePXJ0PmC6/zVvclotn
f3u/FWojQ/3JX0jtngKqlxLZlSnGsV/w1jqXfWPgIT2fsZ0jEVRkdf3LP48h
a6839aFbY/B5o9sL0wRLuL5LYfmkfDa+F++Wi+4lcJT83qgr7vfB4ur9WXq2
bGzZeQkcCNxOGtQ6HanuAoxTr4TDJkdRPfKIWKn8OARIyL0EM1tg+7Z1G93w
KMYujNS4q4yDd7LOdoZ7jshx5lu+VF42PppdfrmZ8Pez+hq9ewY9UW9r/Mp3
ijE0OBKfGSY8DouvJbwodvhitbqPvzLrGB40N2i9zzUO6x6+q4lgD8NdFZls
Yr/z0MiRTu1YHYGj9pnF5PxJwWvWv/suqI3jHn/jDw8qR+HpQ/lEBbMUjL/G
TqPJU4QU6b5HLBMJ3ndKXnU8oBz3XU8UH/3RhuszVK3yNWchvCrF2ao4Dw3u
0ZzzCWnGQwpJb9kvkWC7JvfHOK8iVIRc977Pkzj6JZDlzLMh2E4lqd36uQnj
jb58sEnpRqOirtlNl6Yh9s++dopfjXjSfmLLpYppAr+l+0if+uf/oeSEOFK2
qqcCk7OSOLR1wJ6EwFTr+7Nw7S1t1yZ1hJnwGMEJmR4QOW6l+vLxDHx5ZHHr
s2UGVLGGqk/TFUHg3TCRsQjCr1me5b4hhcOfAUPPjXltINC5/vyz4VmY5mtU
vjnqA1dbloxpnHPAanMiW1M7GSyimgXVlyzg5YjbFaGxFujRqZaPPEeCFZl1
BzkKnsLCAf/5j7JE/M4SUCkcIEO8+9TzC7HOSKfH9rb3UCsEjt3onjtGArbu
52WduZaoc2alJDosC/gfKVzx7yf4yF7tIR2OSNz7NHScX7cdGCIPsb8vngXT
EU8Vz5d+GMIkdn29di48TYn6MdBChnIHfrKubg6y6F1yPfuwBxjL6u8IWM2A
1WUq9XmC9+KHR1bNO4rgQGdaJFMyGTYMKk7ZSjbgi3CrwwIUw8B7zdTsxqMJ
6GmkfmC4tQpfFNuJFSZUwl1DlhmqPhIIn/MVF72dD19+Lxdvy3MHG5LThbDP
ZEjUT5zyKsuFBLU31tMDiugdui9ch/Av34gsboYLeXDZCmqOtFmhWBSt+2PC
Tjnp02GPbBtwvLBs2N3JFW2N9zecnSRBzn79IUfBQmCssqyNnw7GnJHeW7kE
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
8Hf5D36BPIS/sxnFMbwyIyMtda92h3EMUB6iMGT6f1DPWUtuSaHOcVFsArMf
bn16VdAb534/v2rzH9ZXdFAzehhIzeIjvR7WsxUJaOw4l57q0AmnA5Nj/vp1
4I6pB26EXxuePlvCSfi1w/5lXbMlErLt5vjs0kvwYw8H6cvdtf/HxSXTrpY7
R7bNQvUcb4miXR4qXLd7PLvwz9eJ/XfJn2soFUSnDQOX0ZFA6XAH4DHYZHlG
cO11gP9T8iu3tk0F07nCPtLLfra0CNiTTBF0lcAPDimZgq3+mnBD9IaN9pZw
cH7gSydH4JNqhcAld2tLvCZp+STPIxyecRdEZf4gAzTzUU4G+vxX+yKaPeEC
gZd+2Z1+T8dpBoGaHmy5vzxBZsObTo4VAs/wnJRxnLwMSTeizdo8bGEWPOid
/hC4a535/t8e+rj0LHJSSs8TznG4BigS+hY3Bkees79BX3NT2WoaO2jtT22T
IPTdNE+1bBh0xtzaUqBZ9wFEuePopH+vjSsebaCl981xB8Web+o3lp9B/+Xn
P22J/tVs5cQmTI3+q53qnmr7ex/cptV78bT+7V68L6e9K7q2vsPyFe995Y5G
ILiywZ+VkOutro/a+G/rozakDPe8EXGFQwUXd5ktGyPlkWXpLuK532WMGgoy
9ODbXQ6Wh63PUHx/qtLfe+u2VW5595bQ+1c7XdwZWErIx1dxo8C/4caG9NAt
JRHRoC4hxmO6xxt/ftEXPfR3/fa3Pt7Eg77QHCSjUXHZHuN22LJ/IXCjFymK
4Y/We+iRa9rtS+eBGllxisHEuLXdNjPmOv4KLnTZnhNvtkFlxlHpW3+/C9V6
eWpDLXD0aZe92uyG1V/U1xUS9vvaP1TuHruJkrfD7ibesMEh3dskz7/30lJz
bN/BZoEWJdnNRyPccVj9CYUeoY/rap1mdtjhv9o5kaMCmwj9N5tUtvl/MYf9
OW+vmGsE4XldXc9jhJ2DHTsW73Zegdj0+TGNi7H409VwI9U3MqxPYqJSGzfE
/Z4fMpt0g/CWy5EJBUJ/noVP03K/A0YIyn2pCo9DNZT4Kkng2KkCtQtn6N0w
U7CvvIwUgkLXbCS1iXE7rxXl6/7L5/+q7cujsey+/pMhlSRJxkoqpWgQCbWN
JUkp6slYiaLHWIREZErmec6YebiJ29g2Zp6HROZ5vJWhSXkv67V+67eetZ7v
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  ImageSize->NCache[{
     Rational[75600, 127], 
     Rational[53460, 127]}, {595.2755905511812, 420.9448818897638}],
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0., 0.9999998888888889}, {0., 0.9999998888888889}, {0., 
   0.16426731010919193`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8236117110173348, -2.517602404138917, 2.1055502568566364`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.751010296258271*^9, 3.751010308332692*^9}, 
   3.751010368143197*^9, 3.7510107468622694`*^9, 3.751010802226767*^9, 
   3.751010839822833*^9, {3.751016646019731*^9, 3.7510167104250445`*^9}, {
   3.751016791701187*^9, 
   3.7510167961159954`*^9}},ExpressionUUID->"a87474a2-3622-478a-a0fd-\
801625cb5615"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"initprob3", "[", "x_", "]"}], "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"logitintegrand", "[", 
     RowBox[{"x", ",", "a", ",", "b"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", 
     RowBox[{"+", "Infinity"}]}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "2"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<AdaptiveQuasiMonteCarlo\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7510010216582685`*^9, 3.7510010258546753`*^9}, {
  3.7510012857219324`*^9, 3.7510013273896055`*^9}, {3.7510014489294186`*^9, 
  3.7510014783510704`*^9}, {3.7510016081910987`*^9, 3.7510016155075116`*^9}, {
  3.751001775610593*^9, 3.7510017761565933`*^9}, {3.751010863129274*^9, 
  3.7510108707420874`*^9}, {3.7510170866821055`*^9, 
  3.7510170969781237`*^9}},ExpressionUUID->"7d52a215-833a-4d2e-a741-\
f59cc7b8586e"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"logitintegrand", "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", 
    RowBox[{"+", "\[Infinity]"}]}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "2"}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"AdaptiveQuasiMonteCarlo\"\>"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7510108714596887`*^9, 
  3.751017097960925*^9},ExpressionUUID->"eb44d9d6-f326-4e9e-a593-\
df6e256807b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"priorc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"+", "Infinity"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751017759280287*^9, 
  3.751017769685505*^9}},ExpressionUUID->"994f1c73-375a-4821-bcad-\
687fb9fc989f"],

Cell[BoxData["0.987383764575824`"], "Output",
 CellChangeTimes->{
  3.7510177703251066`*^9},ExpressionUUID->"7ef3ee88-a24f-4960-a2b4-\
1a3a1e0869e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"initprob2", "[", "x_", "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Exp", "[", "a", "]"}], ",", 
       RowBox[{"Exp", "[", "b", "]"}]}], "]"}], "*", 
     RowBox[{"priorclog", "[", "a", "]"}], "*", 
     RowBox[{"priorclog", "[", "b", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"-", "Infinity"}], ",", 
      RowBox[{"+", "Infinity"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", 
      RowBox[{"-", "Infinity"}], ",", 
      RowBox[{"+", "Infinity"}]}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", 
     RowBox[{"+", "Infinity"}]}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75100018469371*^9, 3.751000257311837*^9}, {
  3.751001270293505*^9, 3.7510012727739096`*^9}, {3.751007088887726*^9, 
  3.7510070893089266`*^9}},ExpressionUUID->"f8eebcbe-71fe-40e6-932c-\
5653a0b356f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"initprob", "[", "x_", "]"}], "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"bd", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"ils", "[", "a", "]"}], "]"}], "*", "q"}], ",", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"ils", "[", "a", "]"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}], "*", 
      RowBox[{"priorc", "[", 
       RowBox[{"ils", "[", "a", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"ils", "'"}], "[", "a", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", 
     RowBox[{"+", "Infinity"}]}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
    RowBox[{"MaxRecursion", "\[Rule]", 
     RowBox[{"10", "^", "4"}]}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "60"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.750999555589405*^9, 3.7509996141363077`*^9}, {
  3.7509999467308917`*^9, 3.7509999607553167`*^9}, {3.751000247811421*^9, 
  3.7510002482482214`*^9}, {3.751000713551239*^9, 3.7510007138788395`*^9}, {
  3.7510056582938128`*^9, 3.7510056587930136`*^9}, {3.7510176254290514`*^9, 
  3.751017674352738*^9}, {3.751017704617791*^9, 3.751017705725393*^9}, {
  3.7510177930387464`*^9, 3.751017793943548*^9}, {3.751017896779928*^9, 
  3.75101790342554*^9}, {3.7510179515048246`*^9, 3.7510179577760353`*^9}, {
  3.751018016541339*^9, 3.751018023342951*^9}, {3.751018072186637*^9, 
  3.751018084276658*^9}, {3.751018154805382*^9, 3.7510182317135167`*^9}, {
  3.7510182664547777`*^9, 3.751018287015614*^9}, {3.751018332130893*^9, 
  3.7510183360933*^9}},ExpressionUUID->"8943b139-0bf3-459f-85f0-3ebe6dc53c90"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"ils", "[", "a", "]"}], "]"}], " ", "q"}], ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"ils", "[", "a", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}], " ", 
     RowBox[{"priorc", "[", 
      RowBox[{"ils", "[", "a", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["ils", "\[Prime]",
       MultilineFunction->None], "[", "a", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", 
    RowBox[{"+", "\[Infinity]"}]}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", 
    SuperscriptBox["10", "4"]}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "60"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.751017674976739*^9, 3.751017706396194*^9, 3.7510177948483496`*^9, 
   3.7510178387322264`*^9, 3.751017905999545*^9, 3.751017958696437*^9, 
   3.7510180256673546`*^9, {3.751018234069121*^9, 3.7510182572975616`*^9}, 
   3.7510182878112154`*^9, 
   3.751018336966902*^9},ExpressionUUID->"ef9535ac-b310-4495-90c1-\
40151fe32172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initprob", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.751017799715558*^9, 
  3.751017827718607*^9}},ExpressionUUID->"4595fed7-30b8-48e3-9340-\
fee347ec0ec7"],

Cell[BoxData["0.\
36185230803506336603313225403102827885992999778393021723624913003300949936495`\
60."], "Output",
 CellChangeTimes->{{3.7510178066887703`*^9, 3.751017830401812*^9}, {
   3.751017939196403*^9, 3.7510179628616447`*^9}, 3.751018029068161*^9, 
   3.7510182553943586`*^9, 3.751018292179223*^9, 
   3.751018342333311*^9},ExpressionUUID->"eefe1a3c-49e3-4cf6-b954-\
7a879b02458a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"initprob", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", 
    RowBox[{"+", "Infinity"}]}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751000454776984*^9, 3.7510004635442*^9}, {
  3.75100051493069*^9, 
  3.751000517348694*^9}},ExpressionUUID->"c6111233-ff1c-40a9-b7e0-\
a83082697320"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.7510005086282787`*^9, 
  3.751000524711907*^9}},ExpressionUUID->"5799368f-cc2d-4642-b373-\
5b0da9a87dea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initprob", "[", "0.1", "]"}]], "Input",
 CellChangeTimes->{{3.7509996517323737`*^9, 3.750999654774379*^9}, {
  3.751000301537915*^9, 3.751000302115116*^9}, {3.7510006596999445`*^9, 
  3.7510006599651446`*^9}, {3.751001492422295*^9, 
  3.7510014925782957`*^9}},ExpressionUUID->"ee4a1033-c901-4d65-91c7-\
d905abf7052b"],

Cell[BoxData["0.06287721691719418`"], "Output",
 CellChangeTimes->{3.7509996602967887`*^9, 3.75099996275212*^9, 
  3.751000216221365*^9, 3.751000253755031*^9, 3.751000303347518*^9, 
  3.7510006606515455`*^9, 
  3.751001493124296*^9},ExpressionUUID->"39a24e0a-e4da-45ab-a2cd-\
274c183d5e27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initprob2", "[", "0.1", "]"}]], "Input",
 CellChangeTimes->{{3.751000218467769*^9, 3.751000222679776*^9}, 
   3.751000306061923*^9},ExpressionUUID->"721d8e30-ada7-49c4-a795-\
61f1251dff1c"],

Cell[BoxData["0.0813916193479858`"], "Output",
 CellChangeTimes->{{3.751000223319378*^9, 3.751000260603443*^9}, 
   3.751000307169525*^9},ExpressionUUID->"02f7f019-fee5-4270-8337-\
deb8c52a4bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initprob3", "[", "0.99", "]"}]], "Input",
 CellChangeTimes->{{3.7510014832650795`*^9, 3.751001487102686*^9}, {
  3.7510017839878073`*^9, 3.7510017845026083`*^9}, {3.7510018627211456`*^9, 
  3.751001874873567*^9}},ExpressionUUID->"2271f45e-a42d-4098-a750-\
dd6ad6682d07"],

Cell[BoxData["0.7338144992441608`"], "Output",
 CellChangeTimes->{
  3.7510014884754887`*^9, {3.751001782646205*^9, 3.7510017853762097`*^9}, {
   3.7510018649675493`*^9, 
   3.7510018773383713`*^9}},ExpressionUUID->"afe3c265-28a3-46a7-9ec8-\
55ee4554c645"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"initprob2", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Auto"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<conditional frequency of symptom \>\"", " ", "S"}], ",", 
      RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
  RowBox[{"(*", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
     ",", 
     RowBox[{"labelposition", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7510067712195683`*^9},ExpressionUUID->"2af7b339-960e-4587-9fe4-\
c15879daf5d2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1:eJw9mHc4lf//x4uoVFYqIy0aCkXKCE9JSAqJhCgRUVIi7bLikGRFHQnnGMde
2XuXlZU9Dsc6x/iUiga/+/vP76/7elzv6/W839f79Xzd7+d177S6dc6GbcWK
FfdWrljxv+dn84fFnG1UjCm4nD19qhpaRo9fuSnF4fDKmwqfNlXCW+9yktGm
eKxn3V6gBlSg5tSJWtm5eNw1lMoT4q0Ap8aeEZ7PCaiaEOIyiSjHSdW1yyxq
Iqh3u+sTJMpRJdt8NN4sCYkBurd4L5VhlVTmOc+jyVCtTl0tv1SKE3tDHa/w
pWBkQCBKXrcUFSJmcSK1qXByanKaZivBys2qFQvRafAr/iF11r4YO3x4Z+1V
0xHLv7SX1VWEy+7fubSFMsAfYz4yXF+IZ8uj4R+9MyC+Xrz+3OlCfHjUuWf3
fAYyI7h05FoLMOiar87WnIlQhapPf2fyYeHw9EGRZzb42h/svG6ehycTTmsO
fMuG1y62i3tW5uG9jVVYhGUOKoKXa+QTc9FveTLTVekjznTsmYljy8XfvqNq
jHiCC5a70rI+YqvpvibDTbnQvvQsws72I8zPr5s6NJeLz44mZZadOXj05e+9
qEt5CH29RLF8nQPy2RkO7s95qFF2Ov/6bA56tb/sZFLzIcljKibWnA1TlTcX
qWaFmOmq6X00lgXZn4bG2q2F8CnTlmRPzsLaNF5DpnYR/t2cDTV2zsKQbaNe
QGkRpiK/FF5SzkLeDpKuzNFipLRG7eRcnYVX3Zqn2pOLYSDy+6dqWyauBbFr
3hMrwYYq6tiLRaIvp8vUhd+WwDmHWnQzPRmbVj1GMW8pZjXknslX08AqUlS+
/KIUfk++fM7ypKHK5acCO9FHu0fuK+ZO0pD/XT6C4lKGUxL+sVcbEyGuH7bl
Z3oZfqu5RboGJyIweT5Ui1UGd6oUH49ZIv6uMRSI2FsOCcP2b5vEE2FnkxE0
ZVWO7TnbLjybSUB7OQ+f8vtyiB9MzDlekAC1bY6vXnaXo7giWu/5lzQkP2jY
MChQAQ87rpQzh1Ox5et+/0P6FXCWNnwcPZ8C98O+XO5+FVjV3vr+DeGbmVfj
Pm01FZDyN1aKEk2HKevk6t1slXBzbp/r+52GGm2Kl6tKJWbUZ/P/FaZBlsq2
qs6tEub/JiaCn6Th/cor7kLZlbgqqeISrJ4GlwLRp0X7q9A6r30xuikV4pJv
3NgEq6Fvv0Wh6UcKAn1+/DQ0rEb3mcEEz4oU/B01dKEGVIM+n7bLKDAFbZG8
d7Q5arByx1f/XQeJ/fKQHAK+1UA07e6dcLdkzDhMTA5K1cI3NlRE80wyTOs0
7WSu1+L9P3l6265kyDxnt2kfrMU7jf3591qSMPTtkYVwYx2KbMghmkeSoKvX
2+ewph78ixbyJrxJyEtSNCs+UY/rTNmtO1g0vLL+eeFyQT2oK8U3llJpUO28
ZRAX/wlefyrHanfQ8C7fSkPWvQGp8GY2yybC9MD726H5DThVbhyhIpQI4cju
9wtzDbhMDR8XXJGI8Gf6iyWWjVAyrfrL05yAEC3V1NMqTTh6zp9cczsBhvn3
e1PvNmGlXEWtnVkC+A/krOFPbsJjkhXL+mQCArklr3YJN2NfyeGWe8IJ8O8Q
ErRZaMaOrDzdwrp4xMXSdo1uaYFkO5fo7px4eJlr54ceboHDB1HD3uh4aDR5
jC3Yt2BRKXTD0UfxqMj4rVba3QJeRbZrHnLxKHGb+HE69wtifq3LvZMZh/cy
3v7/Wr8g4O/Rx2axcXg8JSaWNvMFpWWvjruHxEHZ3FKff08rVim7Gb+8F4cC
dNK6Qlph/+G69C21OLxdcD5OSm+FkaBsmMLhONzP4Os61tAKiSwfdaU9cVAQ
O8MRxd6G5+tqCkfWx+EjZ5WlzZ02zLN0hwr6qAgrvfJzc0AbztMOfZX9QoWL
27J/XWIb0vTxsr+aCrkppYIDw23QTc6qrkujQiC2S7//bxtGK4cWVlOp+G7m
Oh4g2A6SWx3p3lsqMhszBL7ptWOj9HnRUS8qgrz1kmId2hFxR2uM/pCK25g+
bvSiHf8tvzbivkOF/gKpizO2HU+e5J+2taPiUMa+W3kl7YhdS9aYtqCC176G
w76nHfcP3hGk/IjB7C5rssjPdtx0fvo9fToGTb0rDzfydeACafjHCCMGqSFR
9U+kOuDPHVWvMhCDsxo3z1K1O7DK5q82vTMGM9+V2j5f7cDMsu9bWnMMAmLX
mHx70oHgGm7/sLoYSBt29gm+7cDHr1p21HJCn41yBTkd4KsQePC1IAaOmbfH
bFo6sOy0epVkdgy4reDgz+yARZJ4FqMsDKl8G+YyOTuhw9h4VL4wDGfLe+52
7+xEbmyEYFpOGGacEhaXlTux8WORRl1zCAJ2uD7ZY9IJjkNbH6h8DoF0ywn2
M86d0NoV9KW9JgRNT/l8nAMIvd9UVnUXBY4HB9e/TezE/Qr5TRqtFHAPJr8u
q+rEq6dXto1/piAl4MHm8cFO+HeW6qRUU6Crqv1uw59OpE7opoaVUsCa3rRD
bvNXGKlPUWLzKZA8kyHxXPcr+oVbz+9OpSB53YSySP5XXHO2jKkIJ+oLc8qP
t3/FjkTrweJgot7eQ9Nulli/d1CiJ4Co/7RNP2d3F8iH/nC4eFHQcJ/V3qvW
hTMX+OW+PaPghkTBRTbzLtTE2ZJePyL0fYyu6gV1oUHLVWHbXUJfQWzCJaUL
sdU5mQecCP3xuRvkui4kxbgNaN+gwP9NyX8VI12YFOM+93G9HyS1/F0nl7pQ
7yyi2bhAQsPPi394hLtReVVPZjuDhBtxe58dPdINmc1ioclfSEjmqPT1cOiG
Z5ersGsSCbo5gdw0724IuXr3pIeTwLK2CG6J7sZTfQULcW8SJKsWyaJd3Vht
Gx+dcYWEJPdD6bkaPeB0LDxiIkKCjuyS3IBlD+5+8F+nyUXC1PDn/FUPezBr
9cTSdtEX+4/bVhpk9GC56068RpcvPs3Jabs19OCY+/WMpVpfYm7ZGt+P92Cf
/0NzZq4vaMuRnUzRXhRsNL9rHO4LnTQHM37FXlhI/vrU7uOLKQvFIYXzveAu
+djkft8XJO7VNpa3emGzTrJNouYd9pe0T3qRepF3kP9D5D8yPt2McUym9iL9
dQM3Y5YMe1Gn761lvZjvuJh+iU4GV6OK22JvL6pf6d1Y3UEG7dG6f9t/9aKP
R5ifXkuGwh+/yGCBPrTd64m0k6Kg5v561dWyfTidLc23j+DzC/4DD/T6IOz5
fdsagumuG57O3OhDzbfR8P+x04+X261IfeD8JxEsQfCSM3dZR3wfQuI6GPYE
+38LuHyqug8NHVMBDQQL3eZZWUzvg44g6fBZaQriZl9FH1rRj61KMafmCJZz
5FWniPZj2DXIO/MgBRWsQPqWY/24WVgmEHqIAn0HPg8/k36kXV/b+EaGgoHJ
12LLLv2o8zr5LV+W8J8df9Wd4H4Yyaoz/x6m4PdYkPVYej9keKT2Xj5CgY/N
Rg7Tpn4IjAwV0o9SsHk0mNrI7EfDG00ZTwUKKFYCmsfXDqDKnVqpoURBqeWm
F/s0BkBSmx7frkr4dyB0L/nKAH7RlC7JqVHQY765jufpAHaIRrOuqFNg1xtm
50EewLL3XvdYDQp+Xtyy9lf+AF64Z41/16QQvnyTaP91ABNl7QqmNDL4Lwjq
DMwPwDoyNJojjYwPHeFTBvyDSN+7hZ2URYb0eSG/6oOD+MqHPU25ZBS1RhxQ
PDMIi8LV8YWFZOgYCDck2w9izbuNYnKlZHQ1v72xw2cQ7gm53aIVZNicFdkQ
Qh2EYEtZmbB2JL41vEtZXTkIj6zFl2GnIvHs9NazD4cGcStQVlFNJxLcn8gz
M/8GIco/stPuViTOUgK0MjYMIerVnseaxHroSNMWh60EC5dcLiTq+3bxTIgf
GEKLp4iEOaEvZqWXN6A4hPEQ0qCiZiTso1/5hGsPgS20fHMcsb+MoWaTcxeG
oJ984zuKyFjYziux/toQdn03crmaRwYs9Rer7w7h52RN+d5sMrzfB9Y/9RiC
Q8imDUnE+TT2t0QoBg3hPcvmHXsSGQKifPbfPwyhPNixR0uLAlNzA6WUtCGU
BecxfhDnH/3uNZdtyRBWb77Im0n0Z6LnS8+OxiFI7PNVeU70T1qYP6mnd4jI
TWsqbYn+ulw89zBkagjOPk4ldsoUFIUHnT67OAQBBm2nN+EH9q5WkTVrhuEa
sVevnPCLzpaNrPLNw7B2PugqIk/Ba2PDooe7h0G3fHU3hPBbV2iw/xG5YYy3
2BpLyVGwvaPNfFZ9GItP1IwYhF+vCQhIJRoMI0fWM6KE8HOK4fl/VpeHEWSb
cz+X8Pt8UEjj1lvDmGVYmLcQ83CstT2y8zHx/nHVd2sJdufb5BjoP4xGt8ML
VsT81Osbqeq8G4bz3ezsPmLeeANDuVfRhuFgwU5xJThZ4KVORe4wNot9eChH
sHaEp/ez6mGwefpd4SZ4VPRRhWrbMF4wBgpXEfw0xnnp79Awfk9Kim4hWHiv
g1LhzDCaxOoXTxL8McnK9f7fYWwqJt16TfC5Q6aZ8lx0lKT+3uPSSMZMtsHM
jy109Bu92dHdQwZJ8dT+7N10bPvF3XNrgow9JWrX7hymI2lgqlrhJxkV6gox
h47TMf3Mupan9B0u1R4cmDlLhxvng/rC275YOL1XOMWcjqt/kut2P/dFSMs2
Ywd7OpzWKcaXBfqioXtD07gXHXlenZGkdF/YWXBwxQXT8ds0pK6gzBerRv6e
tI6mwzc4dJXoF18cYzGLh4ro0DSi8j7+Rnyfl+pTur/TsejFXvJRngRNj/LJ
NytH8He+4YT/KRLoq/N3G/OMYJ/S2r4IMxKE+BIiW/ePQDJp4xnTZyT4iHm/
/HxlBA+StQsCGkgQT3hc73trBFZ5R7wODpFQJunCof14BJ36x0Q2zJNgnnHj
OKcfUd8Yr753jR9+HbF+XBU+gk3HZw8+3eqHoAKzfPe4EehanTSwuEX4FYY/
1LJH4JLI7nvBmYJPlToyy+UjUB8/lhV4j/CTtvrN4uYRRIkkavc8pICtUTHx
Yf8IBEsYcSeI+/m9gQxDkTmCXl4DUrMnBR2mOy595BwF7bvaUR3ifte4uaSb
pjKKufUUlfYYCob+++Fz8/QoZNYK/dJNoOCR63TVgYujGKlPujiRQkHW0z7l
hLuj2Nl3Y8qHyBdnV7W7XXMfxScOqSsBRP6Y8vmcLR5IsHKkTh6RT7w3VM7R
I0fx4F/1Gc4GCnYFFUhGJ42i6/ntm25EvinZnGlnmT8KpvqwOW83Mc/vEimi
taP4LaQbubE2BD+3Rw/1to9io8hdK38iPwVRwre+pY/C1e6AxL4WIk9JBJqY
zI1C6l7OpMzHMHxKeRGyeWkUpM3rvZqJfHZN9mlL+zoGVGzOKISUh2Flruv6
YCEGrmht27s2J4bIu1qd9/YxsP4SSeZKUQz2vBL8YC7PgJtXM/9IZQx0bQsO
7zFiwHHU1MCmLQYWhn7/uKwZuAgjim1vDJF3zWtn7zAgqvIuJHgkBp4HpF63
P2fglPJqPRYzBmFblkzzAxkoLqAF356PQSJ7s/j7KAaaLl1YPkbk36LZqBn3
VAa46/jSHIh83NTrlGdbzMD9cm+XZiI/D9ced9dtYMBfw4Nl+5iK+Sx+XZle
Bixc9SeP+FDB+WFk0+YpBspPN3MrBVMh6eaVOLh6DPPCpYnjiVTA2ti5avMY
+qVOOQblUHFOf69K4u4xUGpHllzKqbi3r77lzokxmE5vl2V2U1HRtX6B4+kY
5OV+fI3dEAcTxRBNyZ9jEF/LGc3/PA4Ou214+TjGoZKhupwVGIcnfEd7fmwc
h7nJO3fyhzjETn69WSozjr/hb7ecKo/DTIRI6Lmb4yhd9GyX5YzHSm+Whfyj
cegJaP6SFYyHwJ3ifVv9xkEZuNLquT8eijqWRYyEcRRTLwmK6cfD83fMiNvo
ONa9UtrpGhWPN2POKZe+j8Op40qEVHY8aK0a99TZJmAXf/G0an08mmljXOt3
TIDDUkI8aD4ewmb7ZaPMJqCnvGuAoZeAtMKMZ9WtE5i4Jqx+RSQRu2LfllsP
T8DmduvJW0cTEULyYFs1R7BLaMMvg0Q8uGjkqb5hEkeaWa5BpERo/lp4Uao1
Cd1ZE8HtbDTkDwzXWRhPQp7js5D1Thokaz6tXbKeROo6Rw+14zTwh5L9lN0n
UeRlcqLWnQavR14NvYGTaDOZ4bpPoWHhquOGh1GTqNqWSm+qoWFAVu1VftEk
LJhRN103JMFAWKLF5PMkOqT/62iRSULVSn6+he5JuJSN+g0aJ0F+8rfBm4lJ
3OZVnI9/lARay0jQ0V+TCDy/J7exOxOieQ1tHRxTGK68ss/tUxICo3IEXASm
sNX6z5zvtySwvXhvJCA2hRiDa/LXRZLh4vgiLEtmCgdsfziLnEzGelpTZErc
FAw6RshHslLw9HXugG7OFAY4/vk7MVLwze3DdlblFPzWDSlXCKaiS+tO9P7h
KdxkMbUb3VNx+qAZvX52CulCyioR+anEvGuIXV+agpnDUbOo/1JBYWyixosw
Icild93bJg1bGpcYmvuZ+KcX+fNRdBpI2eN7xhSYoDxf4OgeSMO/dy22XlpM
BIZmerdxp8PJIz9B3JgJFbH/Mhal0zFiHzNZac1E2L33ngy9dBif89t/1ZkJ
m8l1j3o3pqJO8a4DmzsTZbe7S/NS03Bs56Xk6EAmrJRT5k9EJSB1jea0WhQT
vyIcG7a0JmDHnLT0UAoTroZsNbKcieAsXZG+7TMT66W5eBzvJOJ+3ORccTcT
9fWMTEdaIlgvW2UuTTAho8sjcGk0Ea3mlKx3HCw8dJosuWFOw0mNl/NKAiw8
d+pUnnpLQ94B1yM9u1jwCU2T3tlLw4GNlq73ZViQp7hyB9Qm4/1vrVxBNRbc
miSitHhTwEc/tJB7loWrSmJ80vRMeNYLKV64xEJ8+kop2qYs/Epne/DTgQWJ
xm7zdJ0s2IczC0IfsDChVdmj/zwL3Gf5rib5sLBkNODhlZuFDHb5deVhLCw/
1yk3m83CgqO7GSuTBeeeA3Q562yQxRPY2cpZoMpdPWIVnQ21nsakLc3E/o13
C3gMZePFSaG/6kwWuGKblpetc7D/jyrFZJGFMWb4g2BaDprSrXUdV09DdOrM
O+9vOdi8NZ0cITaNBh5fP07SR1C+aarMmU0j7+E480VvLrQTbjA47KcRNC6Q
u1EhD8xLQS9F3KYx6RbYoh2eB9n6/n7NkGlYGI9fD7POR+cTdm/zmGmw9p/h
l/2SjwdyEtJ30qch0C/NfkK9AOVRd59ENkxj+7oT56zkCmFt9HZPVs80LpRM
SOTkFGLNurKmuolpFNBv9+9VKYK+67rt86tm8DlpMeLk5WLMH5CpXbtxBlZ/
ruWx/yvGm2HjW9t3zsCXXCjDFlOCAd2YUh2VGUhVid+rZy+DO1ud7eXTM3ga
POhBty7D7rxpHteLMyg6Vxla/LkMdTc35vnZzsCGlLBqXKEcN8QUL0e7zKAz
KGzhT3I5eLst1uR6zCDsjKhd2r4KZAd4pje8nsFH1SNTzckVMNGgmdCjZrBz
ab3zCaVK9Pz70vQ3bub//6//H7Mqp1k=
       "]], 
      LineBox[{{0.035415640878869836`, 0.16629926043464777`}, {
       0.03673565759591974, 0.13407240838040446`}, {0.0376033074864284, 
       0.16629926043464777`}}]},
     Annotation[#, "Charting`Private`Tag$203755#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.012423960767822026`},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameLabel->{{
     FormBox[
      RowBox[{"\"p\"", "(", "\"frequency | data\"", ")"}], TraditionalForm], 
     None}, {
     FormBox[
      RowBox[{"\"conditional frequency of symptom \"", " ", "S"}], 
      TraditionalForm], None}},
  FrameStyle->Directive[Large, 
    GrayLevel[0]],
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.075, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.125, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.065, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.07, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.085, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.095, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.105, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.11, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.115, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.13, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.135, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.145, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.165, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.17, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.175, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.25, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.35, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.45, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.55, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.65, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.75, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.85, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.95, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->NCache[{
     Rational[75600, 127], 
     Rational[53460, 127]}, {595.2755905511812, 420.9448818897638}],
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.9999998888888889}, {0.012423960767822026`, 
   0.16629926043464777`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7510070615720778`*^9, 
  3.751008401120741*^9},ExpressionUUID->"bd86a1a9-143b-4f4a-86e6-\
a3111ffd9210"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"initprob", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Auto"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<conditional frequency of symptom \>\"", " ", "S"}], ",", 
      RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
  RowBox[{"(*", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
     ",", 
     RowBox[{"labelposition", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.751005629480562*^9},ExpressionUUID->"ed2b3414-7f09-4b94-960c-\
1ef7dab56219"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1: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
FiKk14CrflWEM4/2lZqNF+J/nlIGnQ==
       "]], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAcP+xj2bV2T/OPSM9Od2wPyzE+Zwd
2Nk/7w9/sZfcsD+rgjCwt0TaP+7KxMJUwbA/SjL+NN5f2j/yan96LLuwP+rh
y7kEe9o/QELyoYS1sD+KkZk+K5baP5L0DIl6rrA/KkFnw1Gx2j99P85jdaiw
P6r/ndbrHds/QZ+1t8iSsD+qfAv9H/fbP9M13tDsabA/OPuLnZMU3D+asnaC
wGSwP8Z5DD4HMtw/IoRwPcRfsD/idg1/7mzcP5kROHdpVrA/GXEPAb3i3D93
kJCzxESwP6bvj6EwAN0/zSnih5RAsD80bhBCpB3dP9hmj3ltPLA/dq1QEl4s
3T8muX6fojqwP3jqxEk3at0/3OFNBqEysD/e6ZEj/3XdP5q/wPYCMbA/bGgS
xHKT3T/2Wh9qTC2wP/rmkmTmsN0/sYpmwBoqsD+IZRMFWs7dP8d6abdxJrA/
FuSTpc3r3T+5Y+yRpiOwP6RiFEZBCd4/dkiEM10gsD8y4ZTmtCbeP+IP5Wx5
HbA/v18VhyhE3j9oCcVtpxqwP0zelSecYd4/G2sQs5sXsD/aXBbID3/eP274
oyOPFbA/wrt2gCaV3j+1dgf82ROwP8T46rf/0t4/HTByN34OsD+E2Jepatfe
P1JMdwQpDrA/ElcYSt703j9t9nGlkAuwP6DVmOpREt8/fhlweaIJsD8uVBmL
xS/fPzfis0VDB7A/KBNASGNE3z9GQQsO6gWwP1XZDHQ=
       "]], LineBox[CompressedData["
1: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

       "]], 
      LineBox[{{0.4952001337962571, 0.08100890096217432}, {0.4962786860844083,
        0.08098417003825645}, {0.4963685654417537, 0.08098769795742082}}]},
     Annotation[#, "Charting`Private`Tag$115040#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.01265132418727498},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameLabel->{{
     FormBox[
      RowBox[{"\"p\"", "(", "\"frequency | data\"", ")"}], TraditionalForm], 
     None}, {
     FormBox[
      RowBox[{"\"conditional frequency of symptom \"", " ", "S"}], 
      TraditionalForm], None}},
  FrameStyle->Directive[Large, 
    GrayLevel[0]],
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{0.025, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.075, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.125, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.005, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.01, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.015, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.03, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.035, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.045, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.065, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.07, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.085, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.095, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.105, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.11, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.115, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.13, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.135, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.145, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.25, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.35, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.45, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.55, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.65, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.75, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.85, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.95, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->NCache[{
     Rational[75600, 127], 
     Rational[53460, 127]}, {595.2755905511812, 420.9448818897638}],
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.9999998888888889}, {0.01265132418727498, 
   0.14547742779138007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7510061500232763`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWmMZ0dxf8z/mtnZ9dprjK81rI9wLZchYHMYvOv1bXNPIAEMjoGYRATC
kYACZlEiESmBKF+SD/mQIIsgNlxBKBBiQb5EkZIoKMoqCOW+RBSRmPs0TP5V
XdWvqru6X/d77z8zRrvaufr/XnfVr6qrqquv2+98y92vef2db3ndXXceufFN
d77x7tfd9eYjN7zhTcuiyUOaZu1FTfOQDxxp4PftpuFv28v/7tsWfIPiMwW7
VPB4/H3SnNpq8N/Wqe3mKiybNqdPHm38v61TieLDVLzNVRw92Zze3n5fUSMz
X8b/jp483Twt89nF/Zp7Or+2fapxxVvNqe3tq+zii/o18gwqY4SA3quNskHV
L187fbI52r52lV18YbaR91H9/qXlvzX8PsG2SFUQGnzOA9Q+RzX6JxQRDshp
hO/R5uTp7RkWb0QCXjaNn0iu1wIA4ZkJvb+9fbqR2sjvy2dXw8GE3xEsuFo3
W/w08oSpqqbZF8gZ1GNiS27uyWyZnhgiY3BVPxVkSHDT4MyoTm7LkTstpGGt
Ckxfa4cyzqLXkYuzCiU8NbDen2GItSnT9MxQzphJwbtufY3rDjQF/mQq4Dnd
G2em3k8KUZgMI/mcoCwF2AlnZ94btrb8NzUe514u+9MMv68rFcCvuh4q8Jjy
9yUeJ9tukDMxlg8KTYxlDIYRH1EUEH+qbX3NrqHCsMyS5CdkZCG6LNlqEbUQ
4UePnjwlbUoOPNl6veS7dG4awuGIP5CBI7ZxGuFNw5J5KB3RuaZHMSdSvkeB
ipYAZ8RbK2CHWOm+uIjUuSelBw0RLYhMafCOOyvyG5E7wWpiLyO680wVswXk
V1rWRH8r9Ve+AWWGnXQjk97SZYYybfdt6xIdKH50PL42Qr4aHaE0wrjNonBC
KVxv2zMt4ElC6aXeF/38e5pJB0oJ7CaJdepUqt2uknkcA7g2NuuVZGKIa58F
Vsi0/GzrVAdhbAbGCpUa47NCYn3/6tGXejNwlsUAtTiNWkQir5PWT4RcYlRj
mRL/nKt9Yourp462RKinBeWJgKra0I3CSJeNc91/GlWhe+BA8xZx4mmzRoga
YTNU8BBLksVQSiZplPhq6NBwGqquekWXcnrrIKoVAeNmlcjTFiutz7p4kidn
FGMVuYWpwY1SM6Nn1PWC3hQfsElbhOrkaKCw7NdtwtftYs5LjKhsQPnMbq3a
BK2rR52VGEh/yvioaptOrehrfCxNWTZo1ZAFsdK0au6y3bKsik3qq0o+bRZr
n037zAbFUqFDkdFUNiLR7ug2Ah/NalkATEKfZ6TPVhWC2F7WQUlrYRdH1kF9
um4Xe76DnjS0d80DdnqNwyzbMJD6pG2LM8pzUd3KTISqYcMGI41lz+hL5sBH
qGI9kn6g2xs2uzObAMtUHExKaX+crcoTMzARGyd7RDIvoYlJ+2HAsW5WMdB+
6BoXdnGt/dB2Mwjt+9sPV7Zy+9GT+ggXK486x+8LlVIbMANlpdTXfUOhicLq
q03GItvfN4ih/tJN2A1D1QUgsd0QUouKLbvh55nECNPnpIV/XisjaC/aDgHJ
uqnI/WzH+ZG2YA3XVRqJM0FGG7Hp6U7nvnbJSPSLK3bDSOgUR6IHZfWuKMDw
M0jCjKengouIGpgaeDAFGudh2Vwbi/aVyGiMl7eQ6yMq8xZqRcFu5S2y9Fvj
gYHjDxkDy4ptxRAki1qzEPZMObiySLk7MStzFIkBSCzgwIv1zWyY0zjUyxK2
KkELFweZwMQAsizhob3a0ISHXUVAb1NB8LmhiW3aFTXSFAfTNPHKkGRezUzH
J2y6npqYRsX2NI2ehtiRaZqxuNDCmBp0DTVBSvKSM2sdRtQBpFXRq2K7bFDS
P5TSUAdjhUImYjm5eHWjXOrZaRpr9DqErlg+umINWWl7rrxT+UombnL9YhDR
vCQvzknpBUvXSzsVVZ7Q796LTmZREJacqm+CxRtyBYpqKl6FspvLavpyGNnh
SQS9VsZS22YvLog9HlYfNxqsbRJPBwJKC6HO4FXT1BfuCk1PeB0dB67Xq4xl
CzeDMmmgi4mbm0Hq8nVex20NzNyIUi/nC0BPrrhRfSaH+kgrbtYDfYu4KWHm
bJMZV9XNzi7mlirLcM+aqOlc7Xt0q9k6SvnYRHVRZjBaVRv1P7HdYUZ0MAWD
1yd3Uyyh9Ct2VfQe5VLWDUqc+ERyiD47uuT8KHuyqRb8qS1eLWqtyDWhtJZ8
l5qrFQEYa1o+C2eFIcvmN5LUTTV1p7astcgLA7VZMTUbITWB9p3Ez+T6aaZy
mlIZEestJTY3OFlWn2BwkZBKQFCaHp2OP8tAfInJrc5i1G+iCrOuWhKRiSRK
Tnsjpxdxz0kCoYFmuxDnU+ttx6ponxnYWXnORBBUZUigulNbk4DL2B9qjmZJ
zmcZhEtNyk7i6urNdAq9D0SKf18hmZZTtEBdz9bXspFIN0V724wNfywX13xk
IazNSlGoY4EczdJpA87aF/kDGaTYsh1I/cFIw7CJua14x5ztui9w4tBOu55H
WfQn2RVZ45B3GGXX27VeGdUq5oKiXjQ61RLzdxhlCaqfTMU6P2BmgZblx9NU
Dxy0PjbPnZUKkCrzS4XPXZtDQfdiDshkP8lILZ2cam0XPFfBfLROkP85it6e
//i40fiPZ5yUtFaUAcY/8Nse2Nm/Bwqea6iJ5TyszFja++p3rx/QhuW01g01
Pj6gDT/jo/33DXscmraN1jpbG71vDCFcvhtO59fQ7Lp7c7vR8Ur2YKqItePd
sMPXtLFmwGNpzrEBbSQ05/oxoIlGiuNBE82niHclNDeEtCQ0p1ScD3Gacxv+
2GyszJR7NC7f6PHO8d7tRLm9m3tU5WM+rRwnBlCVmmzQ02VD+A5mVeIWsNgy
Kft7tLomFaJg5UGjVvoVPX28R932NsWbqmrKSr+OHNtMy2irjklrzULDO9sj
bbKMwP6q9pSULWaiMeR6+aPHyh81hUuaeGN5NYtQAE3esRRXGQ20ojVp1Swn
tn8k9hKlRV3UGJn3W+3KEwvsEkPDxNOJwU7iaXtpjRsTJAaPWSq7ZV5HX2Jx
/Si8d0peaZol+c2q9gqFn9qdVPJ0FwD6abZRwYTViX4EWltTo455Xb+6rcVW
1dLvBtY08Vh3H+nr9iLpdyhdbm9ap/RLnubtLMF8/XVVlbAbMlfnpERfxbkI
q/xiSd3esR4U60AxEcYt27PCuM2q9vac3M+KOBUhcWklYdillkYOl7s9X2/J
aKmxdfL384wdI7F8j39QSp4D7mDk1ge/xELhYHpnYJeXU6d6Pq2O72jrQ2NP
66yws5d5opKnY9ZzT7ezKmq8EYs8V4nfXxauTO7q6N1cG+t+3N/WdFpsonIN
REs8G7EGKSouk32Vg9/t2P7sJucrS2pwACyUlU/38X4xt0gelVYSu/Dk6tsl
xdcRE06ywlgNDeR3fbTeoTz9K2a5Kw0/peV+YjCdt9TiNw0t0NTQcC3utuZh
I/a9ln+zssvRWKau4gOhQeZ//dNyEZrTgHgwKH3YTw839dOspNKCWzPE+6po
UNm6IJ2b2Pejk8h175jJ6qJ2kqOcYMTfpwU+CU5NRCvb0JNiISqRwA+WwvbH
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\
\>"],ExpressionUUID->"65a9b8f5-7129-4d21-833b-2f7a7b770399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"initprob3", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Auto"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", 
   RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "a5rsize"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<conditional frequency of symptom \>\"", " ", "S"}], ",", 
      RowBox[{"\"\<p\>\"", "[", "\"\<frequency | data\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
  RowBox[{"(*", 
   RowBox[{"Placed", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<first allele\>\"", ",", "\"\<second allele\>\""}], "}"}], 
     ",", 
     RowBox[{"labelposition", "[", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.9"}], "}"}], "]"}]}], "]"}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7509996203295183`*^9, 3.7509996363819466`*^9}, {
   3.7509999702401333`*^9, 3.750999992984973*^9}, 3.751000526833511*^9, {
   3.7510016214511223`*^9, 3.751001622090723*^9}, {3.751002005664197*^9, 
   3.7510020062101974`*^9}},ExpressionUUID->"fb78f13a-644e-4c31-a894-\
5ff8136c296c"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.75099964976677*^9, 3.750999943813687*^9, 
  3.751000073200314*^9, 3.751000558298766*^9, 3.751001769573382*^9, 
  3.7510030262833896`*^9, 3.7510110621554236`*^9, 3.7510128894462914`*^9, 
  3.7510166390777187`*^9},ExpressionUUID->"379579dd-d4bd-49e9-bfb8-\
543aeef16506"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"initprob3", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.001", ",", "0.999", ",", 
       RowBox[{"0.998", "/", "10"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7510005595779686`*^9, 3.751000581870407*^9}, {
   3.7510006649883537`*^9, 3.7510007190268483`*^9}, 3.7510015000195084`*^9, {
   3.751001883016781*^9, 3.751001912001632*^9}, {3.7510019457756915`*^9, 
   3.751001951235701*^9}},ExpressionUUID->"7ca9efc8-7b00-46fd-8ccc-\
bad2b174e471"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 5], 0.4], 
      NCache[
       Rational[4, 5], 0.8], 
      NCache[
       Rational[14, 15], 0.9333333333333333]], PointSize[
     0.019444444444444445`], Thickness[Large], 
     LineBox[{{0.001, 8.678980166251696}, {0.1008, 0.06255498859276704}, {
      0.2006, 0.04100170994394063}, {0.3004, 0.089146035012994}, {0.4002, 
      0.07779069518875009}, {0.5, 0.07425373727967154}, {0.5998, 
      0.07779069518875009}, {0.6996, 0.089146035012994}, {0.7994, 
      0.04100170994394061}, {0.8992, 0.06255498859276702}, {0.999, 
      8.678980166251916}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.999}, {0, 8.678980166251916}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.75100065746914*^9, 3.751000705189624*^9}, 
   3.751000918051998*^9, 3.751001515697536*^9, 3.751001834344696*^9, {
   3.7510019445588894`*^9, 
   3.7510019730913396`*^9}},ExpressionUUID->"701cd265-30cf-4057-a34a-\
5aca60dd6530"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7500565300508423`*^9, 
  3.750056530768444*^9}},ExpressionUUID->"404469b8-a7bd-4527-a26a-\
4bb4679415d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkdata", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"theta", "=", 
          RowBox[{"newtheta", "[", 
           RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
         RowBox[{"tot", "=", 
          RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"tot", "^", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], "}"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7493986917175813`*^9, 3.749398723994038*^9}, {
  3.749398769609518*^9, 3.749399041642796*^9}, {3.7493990840592704`*^9, 
  3.749399161124406*^9}, {3.7493994975233965`*^9, 3.7493994991769996`*^9}, {
  3.7493999618164124`*^9, 
  3.7493999650144176`*^9}},ExpressionUUID->"949fcebf-6630-4974-89d7-\
7ec056b1c7de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkgenes", "=", "94"}], ";", 
  RowBox[{"geneseq", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<allcondfreqs_1gene_thetamax_sA.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"2", ";;", 
       RowBox[{
        RowBox[{"checkgenes", "*", "2"}], "+", "1"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"geneseq", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"i", "/", "2"}], "]"}], "]"}], "<>", "\"\< \>\"", "<>", 
       RowBox[{"geneseq", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "geneseq"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symptomnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], ";", 
  RowBox[{"allelenames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74939417698925*^9, 3.7493942437105675`*^9}, {
   3.7493992167229033`*^9, 3.7493992549741707`*^9}, {3.7493994616901336`*^9, 
   3.749399463733737*^9}, 3.749403397704248*^9, {3.7494035688053484`*^9, 
   3.7494035688989487`*^9}, {3.749403637289469*^9, 3.7494036377262697`*^9}, {
   3.7498943252257895`*^9, 3.749894328220995*^9}, {3.7498945372753625`*^9, 
   3.749894591703858*^9}, {3.74989462688192*^9, 
   3.749894629908325*^9}},ExpressionUUID->"ddd9523c-2fb0-4d5e-882d-\
ec346a13bc1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"save", " ", "seq", " ", "of", " ", "results"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "checkdata2", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ii", "=", "0"}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", "sym", "]"}], ";", 
       RowBox[{"ii", "=", 
        RowBox[{"ii", "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"datacf", "=", 
        RowBox[{"T", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
           "\"\<condcounts_s\>\"", "<>", "sym", "<>", "\"\<.csv\>\""}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", ";;"}], ",", 
            RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ClearAll", "[", 
        RowBox[{"logprob", ",", "newtheta"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"logprob", "[", 
         RowBox[{"t_", ",", "g_"}], "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r2", "=", 
            RowBox[{"g", "+", "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
           "\[IndentingNewLine]", 
           RowBox[{"Total", "@", 
            RowBox[{"LogGamma", "[", 
             RowBox[{"Total", "@", "r2"}], "]"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Length", "@", 
              RowBox[{"T", "@", "r2"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LogGamma", "[", 
               RowBox[{"Total", "@", "t"}], "]"}], "-", 
              RowBox[{"Total", "@", 
               RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newtheta", "[", "g_", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fm", ",", 
            RowBox[{"dat", "=", 
             RowBox[{"datacf", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", "*", "g"}], "-", "1"}], ",", 
                  RowBox[{"2", "*", "g"}]}], "}"}]}], "]"}], "]"}]}]}], "}"}],
           ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fm", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "/.", 
              RowBox[{
               RowBox[{"FindMaximum", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"logprob", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "dat"}], "]"}], ",", 
                   RowBox[{"x", ">", "0"}], ",", 
                   RowBox[{"y", ">", "0"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "ax"}], "]"}], "]"}], "+", "fm"}], ",", 
             RowBox[{"{", 
              RowBox[{"ax", ",", "2"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"checkdata2", "[", "ii", "]"}], "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"theta", "=", 
            RowBox[{
             RowBox[{"newtheta", "[", "gx", "]"}], "[", 
             RowBox[{"[", "ax", "]"}], "]"}]}], ";", 
           RowBox[{"tot", "=", 
            RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"theta", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tot", "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], 
            "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ax", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.749967862242958*^9, 3.749967915704252*^9}, {
  3.7499683919730883`*^9, 3.749968514808704*^9}, {3.749968563262389*^9, 
  3.749968594743244*^9}, {3.749969163084443*^9, 3.7499691640204444`*^9}, {
  3.7499691962657013`*^9, 3.7499692148609333`*^9}, {3.7499693673200016`*^9, 
  3.749969386320835*^9}, {3.7499700250649567`*^9, 
  3.7499700291677637`*^9}},ExpressionUUID->"536cdbe8-3a51-4257-970f-\
90083eced56f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"checkdata2", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.749969402435663*^9, 
  3.749969409752076*^9}},ExpressionUUID->"ece1d4ae-2f33-4853-8eda-\
924a8d4b49bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"94", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.749969414853285*^9},ExpressionUUID->"38400018-34af-495a-88ad-\
028ec3235e52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"checkdata2", "[", "1", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7499687808983717`*^9, 3.749968789868387*^9}, 
   3.7499694260073047`*^9, {3.7499848375346375`*^9, 
   3.74998483896984*^9}},ExpressionUUID->"58da92a6-178b-4547-aa5f-\
5905b87b674c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2756319526680829`", ",", "0.0012737518041848663`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2752730740625184`", ",", "0.0012811059664809077`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7499687903987885`*^9, 3.7499693327659407`*^9, {3.7499694211868963`*^9, 
   3.749969426444105*^9}, {3.749984833915431*^9, 
   3.749984839281841*^9}},ExpressionUUID->"99278845-4f5f-457e-ae9f-\
a35f5052c9af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"checkdata", "[", "1", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7499694349929204`*^9, 
  3.7499694447897377`*^9}},ExpressionUUID->"36fa06da-69b3-4e95-aeda-\
961bed771935"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2704645174256137`", ",", "0.005820250052258079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.290820976025382`", ",", "0.008613744369602194`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2754524003763278`", ",", "0.0017166152309875794`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2755495133228772`", ",", "0.001708835734207135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2756319526680829`", ",", "0.0012737518041848663`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2752730740625184`", ",", "0.0012811059664809077`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.27564479716789453`", ",", "0.0017530163921328753`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2753730936046129`", ",", "0.0017514701862331341`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.27547795737876446`", ",", "0.0009436112562456003`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2756522116694023`", ",", "0.0009515903973003147`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.749969445101738*^9},ExpressionUUID->"bc613a15-862c-49b8-b8ca-\
fd88edd538a2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7499696542835054`*^9, 
  3.7499696558435087`*^9}},ExpressionUUID->"c4557707-46ba-4e85-807c-\
827ea08dbe3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7487700291959352`*^9},ExpressionUUID->"6d8ddea8-8e13-4f80-a9cf-\
f5e6221f3640"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ii", "=", "0"}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", "sym", "]"}], ";", 
    RowBox[{"ii", "=", 
     RowBox[{"ii", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"min", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"max", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"sortdata", "=", 
     RowBox[{
     "SortBy", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"checkdata", "[", "ii", "]"}], "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "=", 
             RowBox[{"newtheta", "[", 
              RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
            RowBox[{"tot", "=", 
             RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"theta", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"tot", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"rows", ":", " ", "genes"}], ",", " ", 
          RowBox[{"cols", ":", " ", "alleles"}], ",", " ", 
          RowBox[{"3", 
           RowBox[{"rd", ":", " ", 
            RowBox[{"mean", "+", "std"}]}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"min", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"max", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"plot", "=", 
         RowBox[{"ErrorListPlot", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"min", ",", "max"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", "False"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", 
            RowBox[{"1", "/", "7"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
           RowBox[{"Axes", "\[Rule]", "None"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"gene", ",", "41"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"freq", "[", 
                 RowBox[{"symptom", "|", "\"\<gene allele\>\""}], "]"}], ",", 
                "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Large", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Auto", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"T", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"checkgenes", "*", "2"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"(", "geneseq", ")"}]}], ")"}]}]}], "}"}]}], ",", 
                "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"PointSize", "[", 
             RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{
                 RowBox[{"checkgenes", "*", "2"}], "+", 
                 RowBox[{"1", "/", "2"}]}], ",", "2"}], "]"}], ",", "Auto"}], 
             "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"a4longside", "*", 
             RowBox[{"{", 
              RowBox[{"6", ",", "1"}], "}"}]}]}], ",", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<symptom \>\"", "<>", "sym"}], ",", "42"}], "]"}],
               ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"labelposition", "[", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.9"}], "}"}], "]"}]}]}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<1gene_std_s\>\"", "<>", "sym", "<>", "\"\<.pdf\>\""}], 
          ",", "plot"}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7487698432280083`*^9, 3.748769875863266*^9}, {
   3.748769955314205*^9, 3.748769965563423*^9}, {3.7487700321755404`*^9, 
   3.7487701834178057`*^9}, {3.7487702156318626`*^9, 3.748770249842723*^9}, {
   3.748770289968993*^9, 3.748770378640549*^9}, {3.748770562736472*^9, 
   3.7487706457910185`*^9}, {3.748770681764682*^9, 3.748770747737198*^9}, {
   3.7487708531163826`*^9, 3.74877085743759*^9}, {3.748770895345657*^9, 
   3.748771202244996*^9}, {3.748771589250476*^9, 3.7487715914188795`*^9}, {
   3.7488059019148307`*^9, 3.7488059044888353`*^9}, {3.7488059412113*^9, 
   3.7488059609609346`*^9}, {3.7488065107839003`*^9, 
   3.7488065551815786`*^9}, {3.7488067494059196`*^9, 
   3.7488067639919453`*^9}, {3.7488068521165*^9, 3.748806885188558*^9}, {
   3.748807121528973*^9, 3.7488071281745853`*^9}, {3.7488072092323275`*^9, 
   3.7488072128983335`*^9}, {3.748807258684414*^9, 3.74880733593575*^9}, {
   3.748807380536228*^9, 3.748807380910629*^9}, {3.7488074194270964`*^9, 
   3.748807547253721*^9}, {3.7488077257648344`*^9, 3.748807727714838*^9}, {
   3.748807883122311*^9, 3.748807953823635*^9}, {3.74880801341674*^9, 
   3.748808016193545*^9}, {3.749393283712081*^9, 3.749393304974919*^9}, 
   3.749393347126193*^9, {3.749393432178542*^9, 3.7493934664674025`*^9}, {
   3.749393542285536*^9, 3.749393546825144*^9}, {3.7493937756941457`*^9, 
   3.7493939765756984`*^9}, {3.749394267032609*^9, 3.7493942688266115`*^9}, {
   3.7493992758158073`*^9, 3.7493992929758377`*^9}, {3.7493993414763227`*^9, 
   3.7493994280096745`*^9}, 3.749399760820659*^9, {3.7494013690988846`*^9, 
   3.7494015420885887`*^9}, {3.7494033796238165`*^9, 
   3.7494033956606445`*^9}, {3.74940346692157*^9, 3.749403556746527*^9}, {
   3.7494036507054925`*^9, 3.7494036548394995`*^9}, {3.7498943526506376`*^9, 
   3.749894362447455*^9}, {3.749894427281169*^9, 3.74989442785837*^9}, {
   3.7499674226809855`*^9, 3.749967424630989*^9}, {3.749967775678406*^9, 
   3.7499678306529026`*^9}, {3.7499695579533367`*^9, 
   3.7499695871409874`*^9}, {3.749969675998744*^9, 3.74996977607292*^9}, {
   3.749969812530184*^9, 
   3.749969820142997*^9}},ExpressionUUID->"250e614b-77b1-4776-b389-\
fc92796b5932"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"with", " ", "quantiles", " ", "instead", " ", "of", " ", "std"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Print", "[", "sym", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"datacf", "=", 
       RowBox[{"T", "[", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{"\"\<condcounts_s\>\"", "<>", "sym", "<>", "\"\<.csv\>\""}],
           "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;"}], ",", 
           RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ClearAll", "[", 
       RowBox[{"logprob", ",", "newtheta"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"logprob", "[", 
        RowBox[{"t_", ",", "g_"}], "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r2", "=", 
           RowBox[{
            RowBox[{"datacf", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", "*", "g"}], "-", "1"}], ",", 
                 RowBox[{"2", "*", "g"}]}], "}"}]}], "]"}], "]"}], "+", 
            "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
          "\[IndentingNewLine]", 
          RowBox[{"Total", "@", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"Total", "@", "r2"}], "]"}]}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Length", "@", 
             RowBox[{"T", "@", "r2"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"LogGamma", "[", 
              RowBox[{"Total", "@", "t"}], "]"}], "-", 
             RowBox[{"Total", "@", 
              RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newtheta", "[", 
        RowBox[{"g_", ",", "i_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"datacf", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", 
           RowBox[{
            RowBox[{"2", "*", "g"}], "-", "1", "+", "i"}]}], "]"}], "]"}], 
        "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "/.", 
          RowBox[{
           RowBox[{"FindMaximum", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"logprob", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], ",", "g"}], "]"}], ",", 
               RowBox[{"x", ">", "0"}], ",", 
               RowBox[{"y", ">", "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"checkdata", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "=", 
             RowBox[{"newtheta", "[", 
              RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
            RowBox[{"tot", "=", 
             RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"gx", "*", "2"}], "-", "1", "+", "ax"}], ",", 
                RowBox[{
                 RowBox[{"theta", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ErrorBar", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"theta", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "/", "tot"}], "+", 
                RowBox[{"Quantile", "[", 
                 RowBox[{
                  RowBox[{"BetaDistribution", "[", 
                   RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0.05", ",", "0.95"}], "}"}]}], "]"}]}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"min", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"max", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2", ",", "1", ",", "2"}], "]"}], "]"}]}], 
        "]"}]}], ";", 
      RowBox[{"plot", "=", 
       RowBox[{"ErrorListPlot", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"min", ",", "max"}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "6"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
         RowBox[{"Axes", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"gene", ",", "41"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"freq", "[", 
               RowBox[{"symptom", "|", "\"\<gene allele\>\""}], "]"}], ",", 
              "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Large", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Auto", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"T", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"checkgenes", "*", "2"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"(", "geneseq", ")"}]}], ")"}]}]}], "}"}]}], ",", 
              "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"PointSize", "[", 
           RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{
               RowBox[{"checkgenes", "*", "2"}], "+", 
               RowBox[{"1", "/", "2"}]}], ",", "2"}], "]"}], ",", "Auto"}], 
           "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"a4longside", "*", 
           RowBox[{"{", 
            RowBox[{"6", ",", "1"}], "}"}]}]}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<symptom \>\"", "<>", "sym"}], ",", "42"}], "]"}], 
            ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"labelposition", "[", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.9"}], "}"}], "]"}]}]}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\<mathematica_05quantile_s\>\"", "<>", "sym", "<>", 
         "\"\<.pdf\>\""}], ",", "plot"}], "]"}], ";"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7487698432280083`*^9, 3.748769875863266*^9}, {
   3.748769955314205*^9, 3.748769965563423*^9}, {3.7487700321755404`*^9, 
   3.7487701834178057`*^9}, {3.7487702156318626`*^9, 3.748770249842723*^9}, {
   3.748770289968993*^9, 3.748770378640549*^9}, {3.748770562736472*^9, 
   3.7487706457910185`*^9}, {3.748770681764682*^9, 3.748770747737198*^9}, {
   3.7487708531163826`*^9, 3.74877085743759*^9}, {3.748770895345657*^9, 
   3.748771202244996*^9}, {3.748771589250476*^9, 3.7487715914188795`*^9}, {
   3.7488059019148307`*^9, 3.7488059044888353`*^9}, {3.7488059412113*^9, 
   3.7488059609609346`*^9}, {3.7488065107839003`*^9, 
   3.7488065551815786`*^9}, {3.7488067494059196`*^9, 
   3.7488067639919453`*^9}, {3.7488068521165*^9, 3.748806885188558*^9}, {
   3.748807121528973*^9, 3.7488071281745853`*^9}, {3.7488072092323275`*^9, 
   3.7488072128983335`*^9}, {3.748807258684414*^9, 3.74880733593575*^9}, {
   3.748807380536228*^9, 3.748807380910629*^9}, {3.7488074194270964`*^9, 
   3.748807547253721*^9}, {3.7488077257648344`*^9, 3.748807727714838*^9}, {
   3.748807883122311*^9, 3.748807953823635*^9}, {3.74880801341674*^9, 
   3.748808016193545*^9}, {3.749393283712081*^9, 3.749393304974919*^9}, 
   3.749393347126193*^9, {3.749393432178542*^9, 3.7493934664674025`*^9}, {
   3.749393542285536*^9, 3.749393546825144*^9}, {3.7493937756941457`*^9, 
   3.7493939765756984`*^9}, {3.749394267032609*^9, 3.7493942688266115`*^9}, {
   3.7493992758158073`*^9, 3.7493992929758377`*^9}, {3.7493993414763227`*^9, 
   3.7493994280096745`*^9}, 3.749399760820659*^9, {3.7494013690988846`*^9, 
   3.7494015420885887`*^9}, {3.7494018369925065`*^9, 3.749401846368123*^9}, {
   3.749401959343521*^9, 3.7494020263456388`*^9}, 3.749402066422109*^9, {
   3.7494022584428463`*^9, 3.749402316771349*^9}, {3.749402444831974*^9, 
   3.7494024605890017`*^9}, {3.7494025395407405`*^9, 3.749402540991543*^9}, {
   3.7494026637959585`*^9, 3.749402682796792*^9}, {3.7494027561013207`*^9, 
   3.7494027648997364`*^9}, {3.749403674869935*^9, 
   3.7494036834811497`*^9}},ExpressionUUID->"d2d3b139-bfa9-4eb7-8d95-\
fd52c3658f6c"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7493998077299414`*^9},ExpressionUUID->"1f3238b7-6506-42fd-9935-\
e116df721746"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{
  3.749399808665943*^9},ExpressionUUID->"e35dba00-33b6-4d4f-ad8d-\
f69b29f4374e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldtheta", "[", 
  RowBox[{"3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7493957562162247`*^9, 
  3.749395773048654*^9}},ExpressionUUID->"39a58b44-cc59-4885-80a9-\
dc86c2d73ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1660", ",", "601"}], "}"}]], "Output",
 CellChangeTimes->{{3.749395760553032*^9, 3.7493957734074545`*^9}, 
   3.7493968915474195`*^9},ExpressionUUID->"1692c5db-e65c-4826-84dc-\
c7df12d13b99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newtheta", "[", 
  RowBox[{"3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.749395505523784*^9, 3.7493955107341933`*^9}, {
  3.749395724470169*^9, 3.7493957248289695`*^9}, {3.7493957749518576`*^9, 
  3.7493957754666586`*^9}},ExpressionUUID->"035048e8-4773-4b03-a721-\
befb2bf13c09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"88092.48199797937`", ",", "33460.17300242095`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.749395512138196*^9, 3.7493956023999543`*^9, {3.7493956912733107`*^9, 
   3.7493957253905706`*^9}, {3.749395763735438*^9, 3.749395775950259*^9}, 
   3.749396893856223*^9},ExpressionUUID->"a54d2d59-0a0b-4d65-8f93-\
ebb1cffee5ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bd", "[", 
  RowBox[{"0.5", ",", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"(", 
     RowBox[{"newtheta", "[", 
      RowBox[{"3", ",", "0"}], "]"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7493950899546547`*^9, 3.7493951025126762`*^9}, {
  3.749395139281941*^9, 3.7493951867216244`*^9}, {3.74939691471346*^9, 
  3.749396915665062*^9}},ExpressionUUID->"2314762f-b3a5-4626-91e6-\
927c716cfa27"],

Cell[BoxData["4.036684122427634115432`10.756603019377652*^-5576"], "Output",
 CellChangeTimes->{{3.7493950934490604`*^9, 3.7493951031210775`*^9}, {
  3.7493951442427497`*^9, 3.7493951872364254`*^9}, {3.74939690903505*^9, 
  3.7493969172562647`*^9}},ExpressionUUID->"e507613e-9fcb-453a-95e7-\
0a67c69e0bbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"1", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7493221480808372`*^9, 3.749322217703759*^9}, {
  3.7493949932646847`*^9, 3.749395012546318*^9}, {3.749395107551485*^9, 
  3.7493951317159276`*^9}, {3.749395191448433*^9, 3.74939522419289*^9}, {
  3.7493953812539663`*^9, 3.749395408179613*^9}, {3.74939693176429*^9, 
  3.7493969563499327`*^9}},ExpressionUUID->"0d10eb8b-5dd5-41bf-a9d4-\
08f603c91cd2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1:eJw9l3k4VV/Ux0kyJrMMJUISESpyz1mnECJTZEjKVBQyNagkQkgIyZg5Gco8
JvOU7nyuUDKTSpJChuq97/O87+/8cc/zefZZe6/1Xd+9n7tlnK9Yum1iYWF5
yvz53/cJt1la62d9lOX/ns26Ej6j4nLw/6yRlZJRJa75HxuTBiozxfX+YxvX
ldcJ4lb/8UfV+7oPxV3/42wRs4ho8YD/OISzak+UeNh/bGuXU7bwI+k/5vkX
4mCwM+s/lreYn+14kP8fXydrQ8qvov9YrFpghJW17D+undAlUgiV/3H7pUxJ
u7nq/3hJAdn2wqvuP960WsIvKd8I09bDVwTbUtkP/Ttfe+plE7yZohpQKu7w
EcM0yd1KLTCzWZstf4+wqHT819Wi+VZoW50XjEWRHV9XRkf61drhdbjbHTcS
7+78L6/6+GI7QISfqzuUJ0KRb0fh96mpTkibv3H78TsllRiPmgvZct1ASBMI
ZzvyRW0ZK5lyD+6B+5sGXmeT3DUD1DurRTt6YXxgltv0hdrh0ZedD2gyfXCf
zX/poXet9volRvrem28hMyH1oeL+Vh2rQ2cf7Q9+C41TMRyn67p0SllnIjTC
3sLjnfcfau4k6TimrPgisW/Bes4hOVr8vU5bl4ShRe5bECpqs6U1/tK5v8vp
142+t7BmGXBoy4YiQejdN5NeCSIkaAi1NBjEEjxzrh0jSRPBqEmv8GNtIqHT
899huhwReiyNHeIKUgnX2AR2D+8nAm+FefDJ/AIChZy6fVyDCFxvZtxuCJUS
FNNk+Wa0iHCcyNb98UAl4a5bCdtXhAhHt5cohsfVEYbUNFe/HyPCmLMFCN1q
JqhvNM3/MiCC53eLOUZlByG6R39q1YQIytZXn61feUOYTCAP/bUgApQH+ta4
UwkERxsKmw0RfDVEjWMV+gmP9451cjoQIf7tbFIb4QNh/pd741YnIgxmPi5P
CB8nHG/9USZ4gQjRWbNB78NnCFkPbhaIXSZCqd3pZ91zc4Tfp9nSpXyIwDm9
+8CV2EWCuWxMvMxVIpy02Zf45M0KoeibcITCTSJY0VZ3yl//S9jUkHlrXzBz
fiGpuY4gNuRMmIKvWhgRtLREn81/4USqzcouHIwiwtk7CZ+u4NsQXkkthyOx
RPhq3655wVQYcZtptYBEIgh/bo5/NCmONFcYGeilECFI0rfp3+1diGgQnWCU
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
sZ5/Ig0Cqljsyqmzlss0cI7ZtF37sQrmcnVjaesq08+vb1Tqyysz98fJPeF/
aWC2drmFdmkvNjW/1IKx0oHtwOZWhV2KWKPnU9sNNjo8fZJkUD2ugLm5f4/y
56JDYM5zbCJSDjsy80RWlZcOu1xvRSh578b4XbFXX/jocPjQL/K6oyzWdO7R
nJMwHb6kc12xc96FJXzUDt8hRodDt97/G5rdiV08M7FjSJwON4dTkw/I7sAE
bTTMzKXpEFvgI2pJF8dmGR8+8cjS4TTndB+L4XbstWXY3R45OuAj+6ZLqaKY
u2l/BapEhwChTsfi7cIYSgw6saZMh/jpnADyO0FM6ITCZI0qHbht4m4mFwhg
zfrXhVUO0iHL/eAht2k+LKlD+sXsYToUPsYMykd5MY+jvfr5R+jQPenzLHqZ
G0NbfEbOIXQo/xstSlTkwoQR8euSzP81Z9LeaZhf5cC+NLZtGzhGhxjPG6Ir
79mxVq1LzxP06fDbWHu6wHYzdlnz1RCXMR0cFs+qE5+wYq3U/tL6k3TQyOPp
HHBgwUS8FoIvmtNhwfcvt8Clv3CJi+eU6CmmXlCcNo5uQEuBvEKXNR0uSa7d
PHVoDYSPYav+tnTY6lky/cz0N3iM2BNlz9Ch59c1a6WIZRASi/e7e54O+zQv
V+ma/AT3qmJ9VRc6UJ62B7UM/IDXZl3bR9zo4NZRJnP49gIIzo1+jXGnQ7Vc
ycswn3m4GLnWrHOZDvZPpr/wicxBk5xIwhcv5no2t7OvTX4GgTZVt1QfOmzm
zJM4NvQJXq268qxcpYPO0JadxQemgD85eKTgBh0q92UajcRNgJt6WoXVLTrM
pI1Z5/OOQyO5OoztDh2CBt8bCJuMwrbLFJvKu3Qog+upXtXD4MrxRcnpHh2w
Y+9IuOl7aMjb/HdbBB0cPw9HL4kNgsuwdr7XAzrYTg5pcisxoP6G1XWpWGY/
IttytP83T5ErJ97G02GNp8wuDaeCc0XUjpuJdDgprcHuxLw3153MX1BMZs53
8rOiCQsReL80dwyk0EHO3skv4d4bcIoYSo5IZ+opPXheRKcHeFr4kKlsOtzp
d1/NPNwB58/s5U/Mo8Pr6LtS+VfboGZFd/LoMzrUBztEdFS1AHeSY+3Cc6b+
18Odetqb4JxaYFRWCdPvO30scMFGqCYmOpi+ZOpx7rdVz9M64PJ4qfqnnA50
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
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#1"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[14, 15], 0.9333333333333333], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 15], 0.4666666666666667]], Thickness[Large], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
74ewHr/y5CO5yv8D5w0CTQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#2"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 15], 0.13333333333333333`], 
       NCache[
        Rational[8, 15], 0.5333333333333333], 
       NCache[
        Rational[1, 5], 0.2]], Thickness[Large], Opacity[1.], 
      Dashing[{0, Small}], LineBox[CompressedData["
1:eJxF13k0VV/0AHAyU6ZIkmROkakMee/ua5aQUMk8k6FMzQllJolShlBJhiIy
Z5bMuvdKhkxJ+JapIlH4vd9av99795+7Pmuvu9c5e5991rqiTufNXLfQ0dEd
oKej+9+3oesM3vCfLkL3fw+j9i7fMUEJ+H8rZz5Mfy14iOpj3f0ljwR1qD7t
slKbKGhB9Yh8pPZtQReqs/iPR8QIBlIdyvpaOlowjGrLM4+LFn/co5pjM9RG
f08m1ZIn5meaY7OpvtSjDg+X8qgWKOUZpacvorp8QrvrPamE6ibPR0JnZkup
XpYic730qaB6y2oBt5BkNdUqmw7l5oU1VHeFHep5t7+eapGE76t58w1Uf18Z
G+1TaKI6+9ubDs74Zqo5hZ8vTE6+pTrubJlblsQ7qn+jBZMewa1UByq9Ld3R
3Eb1WOHbWFy0g+q/nh/SZK52wpecBx/eXg+iP6DJsuH2pgvUJe5fEPFh4td/
IupeLNADBQ//SHXUtkpeErYX+2zzHtoHP2dVv4pVlJ09ydFvjIEM295HX3Y/
V6+0MKqPMcWguT6xR967WV27VisAMceg5XOL4qj0uLpVvPynZ5YYtH3I5S4q
5D8SrcBWEOiMAfPeMkYZg9AjU4E1hrxXMJiIDlni2jTU8B8p2Wi5hkH09OnP
N486a6zr5pVcuYFB3LqPgLPBNQ0+geRdn29h8GuXe9T26/ka2lXnvxXFYwDp
sln79zKTekTdMpzvYvC3ozygXVaYZBVjYyZwD4N5jVv68hzKJH/ro9U3UjBQ
yeH94xFsT9pohnNK6Ricd1PpZ1oKIEXLqohNZWAQHGhxIIQlmsR3X/ZjymMM
ItV+K8zxZ5Ky1sVijLMxCMmyXP+w+zVJ1k0QoX+OQXdyYiyfbiupoofrZ2ke
BuOXHY3Ftg2TtFSZczxeYHDbdp9Beu0iqSfz35ndRRh8vV2lVt3GQLZi/bUN
K8Zgy0Lq0FUpAfKU73+Nt0ox6PSwS44j9pP9B8cuqFZgsHba4eL5FoS8rvlR
5nsVBovndU6KXz1BjsrvGsmowWAs7Rm7R64zmW97812zegwWTPIWmicvkLOu
VekyN2Ewq4QOrEtEkWUni1ar3mLgl60r+Nw2lVxplPPSpxUDU+UWzsCbL8ja
ZemOoh0YsN36oJUbUUfuEU7i7+vCIO+51au2gxjZKiK6Peo9BtKZa6fC18fJ
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
fbsJ6fXjL31W5QRcqpO3M3aWILEiG7lsVQSQWuq94x25SbZDO69XviFA/db9
7gXBNQ2W7SZiOxoJ8GiWX22WwjSswyrP4Z0EGGTm2W6cuajxam+vZkgPAQFb
g5Ub2xw0mGrn+ORxAi7v3Ewd3DDQKFoWexP3kQArPYkfKcxCGgzut1kMPhMg
eSyAKeZOzZGCo05Zdb8JGGH9br/HfFn9kKwoAqsEDPo21p5WGFWv4xz/VP+X
Eh8YVSJUWtSxXluBRrpeqEj52c0ack99yfZMfDN7LxipMp73ilNUR/xNr7ft
6YWZnJ9bQc5JDUtFLAm9Xkj33m1xO/WpyvL3XdxTyb1wpdWhvCItV6nMXJ/h
ns4H4AwaaHtJh0sHG4Rnlk59gFPdsUyt7MxCoiOGA0/D+yBbOnKk/xj31iOq
YfcElT5S/19t9rxfpe+lebnj9oRvaD/VDxntAs0kBqjePlr2ZMtbmpmCQi3U
/QappsuzK5rgHaLaP7XoNm8TzbUHolh5zn2imsfQX/Ym5zDVw3JY75Uaml9l
gMSk3QjVtkUqPMIbNIeEPw4dzh+l+uWMcBqn0RjVUY/CHUZNaHYxm5MsPEHz
7pqaV8anaY65Y/0uzolmD5WUH+xXaBYL4zNgyaF5Q+36tv5cmgfnvhA5BTQn
nH5tq1dM8+Z+s4DwGpqH8TsZDL00V0asOPf20XxPw17m6QDNx54dLNUapbn6
cnd76H80J8sdvnNilma/iXQL0QWa9xl5jzUs0cxI/yE7YYXm8TINT4c1mms8
n8orrNP8QIRjeXOT5v8BgiMfwg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#3"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[11, 15], 0.7333333333333333], 
       NCache[
        Rational[4, 15], 0.26666666666666666`]], Thickness[Large], Opacity[
      1.], Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749322171184478*^9, 3.7493222467510104`*^9}, {
   3.749395021454934*^9, 3.749395045884577*^9}, {3.7493951158819*^9, 
   3.7493951325739293`*^9}, 3.7493952221648865`*^9, 3.749395290867407*^9, 
   3.749395498581772*^9, 
   3.7493972490074472`*^9},ExpressionUUID->"789f7f02-c953-44d1-b667-\
8883b0fd46c0"]
}, Open  ]]
},
WindowSize->{640, 755},
WindowMargins->{{Automatic, 93}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (32-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 371, 7, 53, "Input",ExpressionUUID->"0de31abf-1d59-4b57-b3bf-379f992303cc"],
Cell[954, 31, 299, 6, 32, "Output",ExpressionUUID->"dd70fe88-ad8f-479c-a602-f466c684e4c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290, 42, 419, 11, 31, "Input",ExpressionUUID->"3c0df4f5-357a-4856-a3d4-b9fbe96aeb33"],
Cell[1712, 55, 2167, 61, 70, "Output",ExpressionUUID->"c3153706-c8da-46e1-acf7-fbdab1103d7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3916, 121, 941, 22, 72, "Input",ExpressionUUID->"968c91aa-8f11-40f3-9536-75a3b8d22a09"],
Cell[4860, 145, 878, 21, 38, "Output",ExpressionUUID->"40c8a50e-7aaa-4ce4-95c9-94f10c62f8b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5775, 171, 578, 16, 31, "Input",ExpressionUUID->"c28e7804-ce1b-4027-ad07-683cfd1bf95a"],
Cell[6356, 189, 6698, 136, 345, "Output",ExpressionUUID->"d973ca1f-120e-4498-9001-24b8c35b85d9"]
}, Open  ]],
Cell[13069, 328, 1585, 39, 145, "Input",ExpressionUUID->"fb1bb9ee-4ca6-4283-b55e-8db71a85a372"],
Cell[14657, 369, 1017, 26, 112, "Input",ExpressionUUID->"f30d45b8-5f12-4baa-9629-0cb6d966ea17"],
Cell[15677, 397, 777, 19, 105, "Input",ExpressionUUID->"9ce342a5-1044-4b5c-8e8f-bbaba906f475"],
Cell[16457, 418, 500, 15, 31, "Input",ExpressionUUID->"89e8e3ab-6e59-4a4b-9459-f7291162bf38"],
Cell[CellGroupData[{
Cell[16982, 437, 1086, 30, 94, "Input",ExpressionUUID->"d64b2ef9-8038-4a4c-be6a-c3527a84c355"],
Cell[18071, 469, 385, 11, 32, "Output",ExpressionUUID->"716b941b-a3e8-422a-b30d-b3fa038d1600"]
}, Open  ]],
Cell[18471, 483, 2289, 60, 255, "Input",ExpressionUUID->"d3819453-f026-4b7a-9d5a-2a497ec5127a"],
Cell[CellGroupData[{
Cell[20785, 547, 245, 6, 28, "Input",ExpressionUUID->"1a3630cb-46b0-4147-8f61-832c52e50d03"],
Cell[21033, 555, 190, 4, 32, "Output",ExpressionUUID->"f6de44c8-9a6f-4738-8099-e3a09d6ee035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21260, 564, 283, 7, 28, "Input",ExpressionUUID->"c0cd252a-203c-42a6-8f1d-5fbf46354b2c"],
Cell[21546, 573, 205, 5, 32, "Output",ExpressionUUID->"c67ed780-297a-4a84-bbd8-2fa283917db9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21788, 583, 667, 20, 53, "Input",ExpressionUUID->"226863fa-ffb2-4fa0-944e-3decc26851ea"],
Cell[22458, 605, 440, 12, 32, "Output",ExpressionUUID->"97b054af-9c2e-4ac8-bfc3-55bda0097207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22935, 622, 1429, 39, 97, "Input",ExpressionUUID->"b52c17b8-6d92-4e95-b649-cdbdadfe657d"],
Cell[24367, 663, 4864, 121, 271, "Output",ExpressionUUID->"2ea6172d-987b-47ce-85ae-1231fd48689a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29268, 789, 260, 7, 28, "Input",ExpressionUUID->"55d89105-ca7e-4024-9f47-7427d642738f"],
Cell[29531, 798, 191, 4, 32, "Output",ExpressionUUID->"1c97a3d2-b63c-4ac0-af67-933116cc3ee6"]
}, Open  ]],
Cell[29737, 805, 11425, 253, 1070, "Input",ExpressionUUID->"656204ee-2c7c-4b90-a8d3-39c18dc5ba1a"],
Cell[41165, 1060, 257, 5, 105, "Input",ExpressionUUID->"428545ba-f714-46b7-9cfd-c22153e4abb6"],
Cell[41425, 1067, 6541, 136, 442, "Input",ExpressionUUID->"7c930844-9799-4a15-a7ec-570beb879ec8"],
Cell[47969, 1205, 280, 5, 124, "Input",ExpressionUUID->"7e179b1e-b662-45c8-9318-108341b63165"],
Cell[48252, 1212, 344, 8, 48, "Input",ExpressionUUID->"2be90315-1c75-4265-8b8f-0586656cd3c0"],
Cell[48599, 1222, 1068, 23, 113, "Input",ExpressionUUID->"5c2376dd-2189-4a26-a4ff-108a33f9d2e3"],
Cell[49670, 1247, 1922, 50, 230, "Input",ExpressionUUID->"f1afbafb-c78c-440e-924c-7f83bbaccda0"],
Cell[51595, 1299, 154, 3, 31, "Input",ExpressionUUID->"7e657153-6fa0-47f5-ae9d-b04af68f7a5d"],
Cell[51752, 1304, 746, 22, 75, "Input",ExpressionUUID->"79588f39-401f-4bd1-91a7-6ceb89887c62"],
Cell[52501, 1328, 9053, 219, 824, "Input",ExpressionUUID->"1c4ad68d-0b1c-4957-8a99-7fe5c5a842a7"],
Cell[61557, 1549, 573, 15, 72, "Input",ExpressionUUID->"74a319f0-c483-4f5a-a600-9cbb3fb2ba4a"],
Cell[CellGroupData[{
Cell[62155, 1568, 995, 25, 185, "Input",ExpressionUUID->"e0803910-0ce8-44c3-8d7a-ef14ff009cbf"],
Cell[63153, 1595, 918, 23, 71, "Output",ExpressionUUID->"885c8cd5-2ca7-4cda-baaa-7d5905373c48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64108, 1623, 179, 4, 28, "Input",ExpressionUUID->"16ce116d-cb84-4ea5-b0f4-64b12cad5e98"],
Cell[64290, 1629, 1144, 27, 166, "Output",ExpressionUUID->"77b85d2d-efc5-4461-ac0f-d642ecc994a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65471, 1661, 1973, 51, 181, "Input",ExpressionUUID->"92111910-fe2c-416a-8f47-a6d8951ab636"],
Cell[67447, 1714, 135242, 2378, 438, "Output",ExpressionUUID->"7dc9ad2e-f50b-418a-880a-b3db1a6626a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202726, 4097, 297, 6, 31, "Input",ExpressionUUID->"f9211cab-ce51-4082-8420-858be598f83a"],
Cell[203026, 4105, 188, 3, 32, "Output",ExpressionUUID->"d3d489b0-462d-48fe-8a50-f54ed3fe4abc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203251, 4113, 849, 23, 50, "Input",ExpressionUUID->"7553c6a7-ac45-475a-b577-09853bd1543a"],
Cell[204103, 4138, 284, 6, 32, "Output",ExpressionUUID->"bcb8068a-c36a-4090-90ab-b82682758f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204424, 4149, 762, 23, 75, "Input",ExpressionUUID->"54e88105-cc88-4068-b882-a930550a795a"],
Cell[205189, 4174, 293, 7, 32, "Output",ExpressionUUID->"ba9b988d-c073-43fc-adac-1afcc8932429"]
}, Open  ]],
Cell[205497, 4184, 663, 20, 50, "Input",ExpressionUUID->"14368894-2e59-4fdb-94dc-166a82a5dbd3"],
Cell[CellGroupData[{
Cell[206185, 4208, 1374, 39, 113, "Input",ExpressionUUID->"1d85bc22-9240-4b43-acfa-b0784deb4148"],
Cell[207562, 4249, 271, 4, 32, "Output",ExpressionUUID->"03da0f68-51fe-418a-b2a4-68a2355b2ed4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207870, 4258, 1174, 36, 90, "Input",ExpressionUUID->"92aa8bb4-1a8a-4a04-8520-ea8b354fd93f"],
Cell[209047, 4296, 204, 4, 32, "Output",ExpressionUUID->"a3987965-625b-4ca4-9b52-f319469a8718"]
}, Open  ]],
Cell[209266, 4303, 152, 3, 28, "Input",ExpressionUUID->"a4cf0954-a91e-4c11-8dd1-e7016746ba69"],
Cell[209421, 4308, 352, 11, 49, "Input",ExpressionUUID->"8f2de507-64ce-4666-b64b-66f1542cbdb3"],
Cell[CellGroupData[{
Cell[209798, 4323, 229, 6, 31, "Input",ExpressionUUID->"2e834708-5a14-4140-a316-07e13629e1ca"],
Cell[210030, 4331, 222, 6, 53, "Output",ExpressionUUID->"348999a3-3c86-4eaf-b3a3-b376ab3b4884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210289, 4342, 461, 15, 31, "Input",ExpressionUUID->"b51209e2-3e48-4261-b4b0-e76075728b8f"],
Cell[210753, 4359, 288, 8, 35, "Output",ExpressionUUID->"3cf0cd56-ed0c-4b35-bc1f-2088b9014c9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211078, 4372, 1050, 23, 53, "Input",ExpressionUUID->"8e65796a-690f-4fe1-aad8-5d12af0a56bf"],
Cell[212131, 4397, 710, 18, 58, "Output",ExpressionUUID->"08a92458-3fa0-4eb1-aef4-2d98453e6f22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212878, 4420, 676, 17, 31, "Input",ExpressionUUID->"af3b2ccd-a23b-4969-b43d-d824694998ca"],
Cell[213557, 4439, 391, 9, 56, "Output",ExpressionUUID->"23d724e3-b39d-4875-ac8c-56ad28630fb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213985, 4453, 526, 13, 31, "Input",ExpressionUUID->"7100cf0d-a2fe-4fa0-b940-b2eceb1afd8b"],
Cell[214514, 4468, 9511, 182, 345, "Output",ExpressionUUID->"e4626697-27c5-4063-8635-8a545abb5076"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224062, 4655, 671, 18, 31, "Input",ExpressionUUID->"8bd1f12e-3e92-4d60-a8d9-d7cb459a8d2f"],
Cell[224736, 4675, 20143, 356, 345, "Output",ExpressionUUID->"18c03e05-fa6b-4f3e-8de9-01b00da61511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244916, 5036, 206, 5, 28, "Input",ExpressionUUID->"0b6b63fb-c45e-4e5a-a606-02fa95323d11"],
Cell[245125, 5043, 172, 3, 32, "Output",ExpressionUUID->"ceacd0ad-88b8-41f4-a5b2-9e9759c0b6ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245334, 5051, 375, 10, 28, "Input",ExpressionUUID->"5bb7dbd0-fe7c-4f4a-a30d-5a0cc4aabedf"],
Cell[245712, 5063, 139, 3, 32, "Output",ExpressionUUID->"a4b24159-b645-470d-a178-370c967eb1aa"]
}, Open  ]],
Cell[245866, 5069, 1777, 46, 151, "Input",ExpressionUUID->"4130ef19-7cd6-409a-afec-3f56bc7d90b6"],
Cell[CellGroupData[{
Cell[247668, 5119, 214, 4, 28, "Input",ExpressionUUID->"6b226763-0b13-40a8-8716-49e76f70bdb7"],
Cell[247885, 5125, 885, 13, 32, "Output",ExpressionUUID->"45f0a8f6-2659-433d-bb6e-b5dce324ed70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248807, 5143, 1774, 47, 181, "Input",ExpressionUUID->"bff23df7-a040-4301-905c-ba58d891f486"],
Cell[250584, 5192, 2954, 71, 438, "Output",ExpressionUUID->"a28963de-3af6-471f-a00a-5d31214d28b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253575, 5268, 597, 17, 53, "Input",ExpressionUUID->"78c7da4f-c4a6-4cb7-8d7b-dea41aae4aea"],
Cell[254175, 5287, 458, 14, 58, "Output",ExpressionUUID->"08ccb2df-0c81-49f6-9806-35241532b90e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254670, 5306, 941, 24, 116, "Input",ExpressionUUID->"b0b5c9ef-208b-400e-9156-28dc4cf63c30"],
Cell[255614, 5332, 819, 25, 64, "Output",ExpressionUUID->"4879d919-d70f-4e41-9020-ba2c4b657409"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256470, 5362, 1115, 26, 97, "Input",ExpressionUUID->"60e74f47-ffbd-4677-a1aa-70da9aae1c7b"],
Cell[257588, 5390, 2013, 67, 190, "Output",ExpressionUUID->"23ea33f8-160a-4274-a667-dfae6114fceb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259638, 5462, 290, 6, 28, "Input",ExpressionUUID->"7534d763-4e13-4814-828c-5092c977a0a2"],
Cell[259931, 5470, 255, 4, 32, "Output",ExpressionUUID->"8b1e8863-44d3-490f-8a11-943a52bf9c94"]
}, Open  ]],
Cell[260201, 5477, 265, 6, 31, "Input",ExpressionUUID->"35bf2fc0-fdd4-4333-a7a1-f8b95820b864"],
Cell[CellGroupData[{
Cell[260491, 5487, 1708, 42, 159, "Input",ExpressionUUID->"c0f490e3-a6aa-4ffc-8af5-15bfd2925c0d"],
Cell[262202, 5531, 133619, 2197, 438, "Output",ExpressionUUID->"a87474a2-3622-478a-a0fd-801625cb5615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395858, 7733, 1009, 22, 75, "Input",ExpressionUUID->"7d52a215-833a-4d2e-a741-f59cc7b8586e"],
Cell[396870, 7757, 629, 16, 79, "Output",ExpressionUUID->"eb44d9d6-f326-4e9e-a593-df6e256807b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397536, 7778, 333, 9, 31, "Input",ExpressionUUID->"994f1c73-375a-4821-bcad-687fb9fc989f"],
Cell[397872, 7789, 149, 3, 32, "Output",ExpressionUUID->"7ef3ee88-a24f-4960-a2b4-1a3a1e0869e3"]
}, Open  ]],
Cell[398036, 7795, 1005, 26, 94, "Input",ExpressionUUID->"f8eebcbe-71fe-40e6-932c-5653a0b356f3"],
Cell[CellGroupData[{
Cell[399066, 7825, 1901, 41, 116, "Input",ExpressionUUID->"8943b139-0bf3-459f-85f0-3ebe6dc53c90"],
Cell[400970, 7868, 1397, 36, 100, "Output",ExpressionUUID->"ef9535ac-b310-4495-90c1-40151fe32172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402404, 7909, 189, 4, 28, "Input",ExpressionUUID->"4595fed7-30b8-48e3-9340-fee347ec0ec7"],
Cell[402596, 7915, 389, 7, 32, "Output",ExpressionUUID->"eefe1a3c-49e3-4cf6-b954-7a879b02458a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403022, 7927, 483, 12, 53, "Input",ExpressionUUID->"c6111233-ff1c-40a9-b7e0-a83082697320"],
Cell[403508, 7941, 163, 3, 32, "Output",ExpressionUUID->"5799368f-cc2d-4642-b373-5b0da9a87dea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403708, 7949, 341, 6, 28, "Input",ExpressionUUID->"ee4a1033-c901-4d65-91c7-d905abf7052b"],
Cell[404052, 7957, 290, 5, 32, "Output",ExpressionUUID->"39a24e0a-e4da-45ab-a2cd-274c183d5e27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404379, 7967, 213, 4, 28, "Input",ExpressionUUID->"721d8e30-ada7-49c4-a795-61f1251dff1c"],
Cell[404595, 7973, 195, 3, 32, "Output",ExpressionUUID->"02f7f019-fee5-4270-8337-deb8c52a4bcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404827, 7981, 294, 5, 28, "Input",ExpressionUUID->"2271f45e-a42d-4098-a750-dd6ad6682d07"],
Cell[405124, 7988, 256, 5, 32, "Output",ExpressionUUID->"afe3c265-28a3-46a7-9ec8-55ee4554c645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405417, 7998, 1229, 33, 159, "Input",ExpressionUUID->"2af7b339-960e-4587-9fe4-c15879daf5d2"],
Cell[406649, 8033, 18845, 388, 438, "Output",ExpressionUUID->"bd86a1a9-143b-4f4a-86e6-a3111ffd9210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425531, 8426, 1226, 33, 159, "Input",ExpressionUUID->"ed2b3414-7f09-4b94-960c-1ef7dab56219"],
Cell[426760, 8461, 35063, 651, 438, 18447, 378, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"65a9b8f5-7129-4d21-833b-2f7a7b770399"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461860, 9117, 1430, 35, 159, "Input",ExpressionUUID->"fb78f13a-644e-4c31-a894-5ff8136c296c"],
Cell[463293, 9154, 326, 5, 32, "Output",ExpressionUUID->"379579dd-d4bd-49e9-bfb8-543aeef16506"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463656, 9164, 743, 17, 53, "Input",ExpressionUUID->"7ca9efc8-7b00-46fd-8ccc-bad2b174e471"],
Cell[464402, 9183, 2040, 56, 345, "Output",ExpressionUUID->"701cd265-30cf-4057-a34a-5aca60dd6530"]
}, Open  ]],
Cell[466457, 9242, 306, 6, 143, "Input",ExpressionUUID->"404469b8-a7bd-4527-a26a-4bb4679415d9"],
Cell[466766, 9250, 1514, 39, 112, "Input",ExpressionUUID->"949fcebf-6630-4974-89d7-7ec056b1c7de"],
Cell[468283, 9291, 1647, 42, 173, "Input",ExpressionUUID->"ddd9523c-2fb0-4d5e-882d-ec346a13bc1f"],
Cell[469933, 9335, 5789, 149, 466, "Input",ExpressionUUID->"536cdbe8-3a51-4257-970f-90083eced56f"],
Cell[CellGroupData[{
Cell[475747, 9488, 226, 5, 31, "Input",ExpressionUUID->"ece1d4ae-2f33-4853-8eda-924a8d4b49bc"],
Cell[475976, 9495, 186, 5, 32, "Output",ExpressionUUID->"38400018-34af-495a-88ad-028ec3235e52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476199, 9505, 318, 7, 28, "Input",ExpressionUUID->"58da92a6-178b-4547-aa5f-5905b87b674c"],
Cell[476520, 9514, 486, 13, 32, "Output",ExpressionUUID->"99278845-4f5f-457e-ae9f-a35f5052c9af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477043, 9532, 264, 7, 28, "Input",ExpressionUUID->"36fa06da-69b3-4e95-aeda-961bed771935"],
Cell[477310, 9541, 1160, 32, 109, "Output",ExpressionUUID->"bc613a15-862c-49b8-b8ca-fd88edd538a2"]
}, Open  ]],
Cell[478485, 9576, 766, 24, 53, "Input",ExpressionUUID->"c4557707-46ba-4e85-807c-827ea08dbe3a"],
Cell[479254, 9602, 201, 5, 31, "Input",ExpressionUUID->"6d8ddea8-8e13-4f80-a9cf-f5e6221f3640"],
Cell[479458, 9609, 9632, 221, 779, "Input",ExpressionUUID->"250e614b-77b1-4776-b389-fc92796b5932"],
Cell[489093, 9832, 11543, 274, 848, "Input",ExpressionUUID->"d2d3b139-bfa9-4eb7-8d95-fd52c3658f6c"],
Cell[CellGroupData[{
Cell[500661, 10110, 131, 3, 28, "Input",ExpressionUUID->"1f3238b7-6506-42fd-9935-e116df721746"],
Cell[500795, 10115, 130, 3, 32, "Output",ExpressionUUID->"e35dba00-33b6-4d4f-ad8d-f69b29f4374e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500962, 10123, 212, 5, 28, "Input",ExpressionUUID->"39a58b44-cc59-4885-80a9-dc86c2d73ec8"],
Cell[501177, 10130, 231, 5, 32, "Output",ExpressionUUID->"1692c5db-e65c-4826-84dc-c7df12d13b99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501445, 10140, 313, 6, 28, "Input",ExpressionUUID->"035048e8-4773-4b03-a721-befb2bf13c09"],
Cell[501761, 10148, 359, 7, 32, "Output",ExpressionUUID->"a54d2d59-0a0b-4d65-8f93-ebb1cffee5ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502157, 10160, 428, 10, 31, "Input",ExpressionUUID->"2314762f-b3a5-4626-91e6-927c716cfa27"],
Cell[502588, 10172, 306, 4, 35, "Output",ExpressionUUID->"e507613e-9fcb-453a-95e7-0a67c69e0bbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502931, 10181, 1297, 33, 97, "Input",ExpressionUUID->"0d10eb8b-5dd5-41bf-a9d4-08f603c91cd2"],
Cell[504231, 10216, 46033, 798, 345, "Output",ExpressionUUID->"789f7f02-c953-44d1-b667-8883b0fd46c0"]
}, Open  ]]
}
]
*)

