(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    120490,       2679]
NotebookOptionsPosition[    115893,       2603]
NotebookOutlinePosition[    116240,       2618]
CellTagsIndexPosition[    116197,       2615]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\pglpm\\\\repositories\\\\genobayes\\\\scripts\\\\\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7480581918151317`*^9, 3.748058214344571*^9}, 
   3.7485400693033943`*^9, {3.74998579523592*^9, 
   3.7499857954387197`*^9}},ExpressionUUID->"0de31abf-1d59-4b57-b3bf-\
379f992303cc"],

Cell[BoxData["\<\"C:\\\\Users\\\\pglpm\\\\repositories\\\\genobayes\\\\\
scripts\"\>"], "Output",
 CellChangeTimes->{3.748058215374173*^9, 3.7480582915833073`*^9, 
  3.7480591834198747`*^9, 3.748065321608406*^9, 3.748080473957667*^9, 
  3.748152159663872*^9, 3.7482460372043395`*^9, 3.7482856372294493`*^9, 
  3.74829048292566*^9, 3.7483129845131865`*^9, 3.7483397986661525`*^9, 
  3.7483727582230344`*^9, 3.7484292767221603`*^9, 3.7484940735069194`*^9, 
  3.7485174267982025`*^9, 3.7485400882814293`*^9, 3.748579163201681*^9, 
  3.748581206114107*^9, 3.7493205097151594`*^9, 3.7493968531713514`*^9, 
  3.74939984668721*^9, 3.749403360576183*^9, 3.7498943138533697`*^9, 
  3.749894751419939*^9, 3.749967230253648*^9, 3.7499857962343216`*^9, 
  3.7500102401557627`*^9, 3.750056496323583*^9, 
  3.7500607001001673`*^9},ExpressionUUID->"d2b67f37-677e-4636-bf9c-\
c47c49ca3a1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bd", "[", 
   RowBox[{"x_", ",", "a_", ",", "b_"}], "]"}], "=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BetaDistribution", "[", 
     RowBox[{"b", ",", "a"}], "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.749321980708143*^9, 3.7493220086945925`*^9}, {
  3.7493953735631523`*^9, 
  3.749395375123155*^9}},ExpressionUUID->"3c0df4f5-357a-4856-a3d4-\
b9fbe96aeb33"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}]], " ", 
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b"}]]}], 
         RowBox[{"Beta", "[", 
          RowBox[{"b", ",", "a"}], "]"}]], 
        RowBox[{"0", "<", "x", "<", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.749322010145395*^9, 3.7493949608312273`*^9, 
  3.749395376137157*^9, 3.749395682958496*^9, 3.749396885603809*^9, 
  3.7493998524436207`*^9},ExpressionUUID->"4db9af3c-568a-48ff-89ce-\
44e7d22723a3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savedir", "=", "\"\<1gene-results_math\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<gene\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allgenes", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "94"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allsymptoms", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"symptomnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quantiles", "=", 
   RowBox[{"{", 
    RowBox[{"0.05", ",", "0.95"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7499857018697557`*^9, 3.7499859097245207`*^9}, {
  3.750009828342239*^9, 3.7500098319926453`*^9}, {3.750010290980652*^9, 
  3.750010303195473*^9}},ExpressionUUID->"fb1bb9ee-4ca6-4283-b55e-\
8db71a85a372"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gnames", "=", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", 
       RowBox[{"4", "+", "allgenes"}]}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"qnames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<EV\>\"", ",", "\"\<STD\>\"", ",", "\"\<Q.05\>\"", ",", 
     "\"\<Q.95\>\"", ",", "\"\<theta0\>\"", ",", "\"\<theta1\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.749985916120532*^9, 3.749985962749014*^9}, {
  3.749986005305889*^9, 3.7499860159295073`*^9}, {3.7499861169562845`*^9, 
  3.7499861811503973`*^9}},ExpressionUUID->"f30d45b8-5f12-4baa-9629-\
0cb6d966ea17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"binoutcomes", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noutcomes", "=", 
   RowBox[{"Length", "@", "binoutcomes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alcombnames", "=", "alnames"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nalleles", "=", 
   RowBox[{"Length", "@", "alnames"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ncombinations", "=", 
   RowBox[{"Length", "@", "allgenes"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.749986231883687*^9, 3.74998626774815*^9}, {
  3.7499863205230427`*^9, 3.749986348696692*^9}, {3.750060467781559*^9, 
  3.7500604806983814`*^9}},ExpressionUUID->"9ce342a5-1044-4b5c-8e8f-\
bbaba906f475"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "logprob", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sdata", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "i", "}"}], ",", 
          RowBox[{"3", "+", "allgenes"}]}], "]"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"sdata", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", "+", "g1"}], "]"}], "]"}], "\[Equal]", "x"}],
                  ")"}], "&"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "al"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"al", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "binoutcomes"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"logprob", "[", "t_", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r2", "=", 
            RowBox[{"f", "+", "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
           "\[IndentingNewLine]", 
           RowBox[{"Total", "@", 
            RowBox[{"LogGamma", "[", 
             RowBox[{"Total", "@", "r2"}], "]"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"noutcomes", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LogGamma", "[", 
               RowBox[{"Total", "@", "t"}], "]"}], "-", 
              RowBox[{"Total", "@", 
               RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"theta", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "/.", 
         RowBox[{
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"logprob", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
              RowBox[{"x", ">", "0"}], ",", 
              RowBox[{"y", ">", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"fnew", "=", 
        RowBox[{"f", "+", "theta"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nnew", "=", 
        RowBox[{"Total", "@", "fnew"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"quantities", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{
              RowBox[{"T", "[", 
               RowBox[{"fnew", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], "/", "nnew"}], 
             "]"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Times", "@@", "fnew"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nnew", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "+", "nnew"}], ")"}]}], ")"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"(", 
            RowBox[{"T", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Quantile", "[", 
                RowBox[{
                 RowBox[{"BetaDistribution", "[", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"(", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"fnew", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "al"}], "]"}], "]"}], "]"}], ")"}]}], 
                  "]"}], ",", "quantiles"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"al", ",", 
                 RowBox[{"binoutcomes", "+", "1"}]}], "}"}]}], "]"}]}], 
            ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"(", 
            RowBox[{"T", "@", 
             RowBox[{"Table", "[", 
              RowBox[{"theta", ",", "noutcomes"}], "]"}]}], ")"}]}]}], 
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"csvquantities", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Prepend", "[", 
            RowBox[{"alnames", ",", "\"\<\>\""}], "]"}], "}"}], ",", 
          RowBox[{"T", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "qnames", "}"}], ",", 
             RowBox[{"T", "@", "quantities"}]}], "]"}], "]"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"savedir", "<>", "filename", "<>", 
          RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
          RowBox[{"symptomnames", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
         "csvquantities"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"g1", ",", "allgenes"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "allsymptoms"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.749986355545104*^9, 3.749986435432844*^9}, {
   3.7499864988781557`*^9, 3.749986526349804*^9}, {3.7499865646322713`*^9, 
   3.7499865796706977`*^9}, {3.7499866302303867`*^9, 
   3.7499866346607943`*^9}, {3.7499872639658995`*^9, 
   3.7499873010315647`*^9}, {3.74998734380684*^9, 3.749987380794505*^9}, {
   3.7499875199935493`*^9, 3.7499875270291615`*^9}, {3.749987669005011*^9, 
   3.749987683793837*^9}, {3.7499879795859566`*^9, 3.7499880071980047`*^9}, {
   3.7500073255644426`*^9, 3.750007326266444*^9}, {3.75000745501347*^9, 
   3.750007456495473*^9}, {3.7500075144651747`*^9, 3.750007560922056*^9}, {
   3.7500077607438073`*^9, 3.750007816482705*^9}, {3.750007909708469*^9, 
   3.7500079453077316`*^9}, {3.750008026599474*^9, 3.7500080911065874`*^9}, {
   3.7500084602510357`*^9, 3.750008594395672*^9}, {3.7500087242346992`*^9, 
   3.7500087827192025`*^9}, {3.7500088231856737`*^9, 3.7500088318904886`*^9}, 
   3.7500090001523843`*^9, {3.7500092850868845`*^9, 3.7500093117005315`*^9}, {
   3.750009472521214*^9, 3.7500095011472645`*^9}, {3.7500095457009425`*^9, 
   3.7500095628609724`*^9}, {3.750009613046261*^9, 3.750009648130722*^9}, {
   3.7500098180306206`*^9, 3.750009818732622*^9}, {3.7500098655327044`*^9, 
   3.750009929165216*^9}, {3.750010065838056*^9, 3.750010075307273*^9}, {
   3.7500101301257687`*^9, 3.7500101719026423`*^9}, {3.750010311213887*^9, 
   3.7500103140218925`*^9}, {3.7500104865747952`*^9, 
   3.750010487479597*^9}},ExpressionUUID->"656204ee-2c7c-4b90-a8d3-\
39c18dc5ba1a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.750011060767307*^9, 
  3.7500110612041073`*^9}},ExpressionUUID->"428545ba-f714-46b7-9cfd-\
c22153e4abb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "logprob", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"meanf", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spread", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"resu", "=", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"savedir", "<>", "filename", "<>", 
            RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
            RowBox[{"symptomnames", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], 
          "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", ";;"}], ",", 
            RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"values", "=", 
         RowBox[{"resu", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fmax", "=", 
         RowBox[{"Max", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fmin", "=", 
         RowBox[{"Min", "[", "values", "]"}]}], ";", 
        RowBox[{"drms", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"values", "-", "meanf"}], ")"}], "^", "2"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"arms", "=", 
         RowBox[{"Abs", "@", 
          RowBox[{
           RowBox[{"Differences", "[", "values", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"only", " ", "works", " ", "for", " ", "two"}], "-", 
          RowBox[{"valued", " ", "case"}]}], " ", "*)"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"g1", ",", "fmax", ",", "fmin", ",", "arms", ",", "drms"}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"g1", ",", "allgenes"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<diffmeasures_1gene_s\>\"", "<>", 
       RowBox[{"symptomnames", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
          "\"\<gene1\>\"", ",", "\"\<max\>\"", ",", "\"\<min\>\"", ",", 
           "\"\<spread\>\"", ",", "\"\<rms_mean\>\""}], "}"}], "}"}], ",", 
        "spread"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "allsymptoms"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.749986355545104*^9, 3.749986435432844*^9}, {
   3.7499864988781557`*^9, 3.749986526349804*^9}, {3.7499865646322713`*^9, 
   3.7499865796706977`*^9}, {3.7499866302303867`*^9, 
   3.7499866346607943`*^9}, {3.7499872639658995`*^9, 
   3.7499873010315647`*^9}, {3.74998734380684*^9, 3.749987380794505*^9}, {
   3.7499875199935493`*^9, 3.7499875270291615`*^9}, {3.749987669005011*^9, 
   3.749987683793837*^9}, {3.7499879795859566`*^9, 3.7499880071980047`*^9}, {
   3.7500073255644426`*^9, 3.750007326266444*^9}, {3.75000745501347*^9, 
   3.750007456495473*^9}, {3.7500075144651747`*^9, 3.750007560922056*^9}, {
   3.7500077607438073`*^9, 3.750007816482705*^9}, {3.750007909708469*^9, 
   3.7500079453077316`*^9}, {3.750008026599474*^9, 3.7500080911065874`*^9}, {
   3.7500084602510357`*^9, 3.750008594395672*^9}, {3.7500087242346992`*^9, 
   3.7500087827192025`*^9}, {3.7500088231856737`*^9, 3.7500088318904886`*^9}, 
   3.7500090001523843`*^9, {3.7500092850868845`*^9, 3.7500093117005315`*^9}, {
   3.750009472521214*^9, 3.7500095011472645`*^9}, {3.7500095457009425`*^9, 
   3.7500095628609724`*^9}, {3.750009613046261*^9, 3.750009648130722*^9}, {
   3.7500098180306206`*^9, 3.750009818732622*^9}, {3.7500098655327044`*^9, 
   3.750009929165216*^9}, {3.750010065838056*^9, 3.750010075307273*^9}, {
   3.7500101301257687`*^9, 3.7500101719026423`*^9}, {3.750010311213887*^9, 
   3.7500103140218925`*^9}, {3.7500104865747952`*^9, 3.750010487479597*^9}, {
   3.7500112361428146`*^9, 3.750011371270252*^9}, {3.750011403624709*^9, 
   3.750011462873613*^9}, {3.750011505633288*^9, 3.750011523464119*^9}, 
   3.7500143778958483`*^9, {3.7500554210086946`*^9, 3.750055455079154*^9}, {
   3.750055511738454*^9, 3.750055512643255*^9}, {3.7500555943873987`*^9, 
   3.7500556333104672`*^9}, {3.7500557131358075`*^9, 3.750055754897081*^9}, {
   3.7500557884371395`*^9, 3.750055961987445*^9}, {3.7500560501119995`*^9, 
   3.7500561369271517`*^9}, {3.750056308387053*^9, 
   3.7500563091358547`*^9}},ExpressionUUID->"7c930844-9799-4a15-a7ec-\
570beb879ec8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7500112279216003`*^9, 
  3.750011228498801*^9}},ExpressionUUID->"7e179b1e-b662-45c8-9318-\
108341b63165"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datadir", "=", "\"\<1gene-results_math\\\\\>\""}], ";", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"sy_", ",", "g1_"}], "]"}], ":=", 
   RowBox[{"T", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"datadir", "<>", "\"\<gene\>\"", "<>", 
       RowBox[{"ToString", "[", "g1", "]"}], "<>", "\"\<_s\>\"", "<>", 
       RowBox[{"symptomnames", "[", 
        RowBox[{"[", "sy", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75005932966496*^9, 
  3.7500594082578983`*^9}},ExpressionUUID->"5c2376dd-2189-4a26-a4ff-\
108a33f9d2e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "spreads", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"spreads", "[", "sy_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"thespread", "=", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"\"\<diffmeasures_1gene_s\>\"", "<>", 
         RowBox[{"symptomnames", "[", 
          RowBox[{"[", "sy", "]"}], "]"}], "<>", "\"\<.csv\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;"}], ",", ";;"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"thespread", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "3"}], "]"}], "]"}], "=", 
      RowBox[{"-", 
       RowBox[{"thespread", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "3"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"spreads", "[", "sy", "]"}], "=", "thespread"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.750056589486947*^9, 3.7500566031369705`*^9}, {
  3.750059850035074*^9, 
  3.7500598526402783`*^9}},ExpressionUUID->"f1afbafb-c78c-440e-924c-\
7f83bbaccda0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",Expre\
ssionUUID->"7e657153-6fa0-47f5-ae9d-b04af68f7a5d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geneseq", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<dataset1_binarized.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"5", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geneseq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\< \>\"", "<>", 
      RowBox[{"geneseq", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "geneseq"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.750059536505723*^9, 
  3.750059558454962*^9}},ExpressionUUID->"79588f39-401f-4bd1-91a7-\
6ceb89887c62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numpairs", "=", 
   RowBox[{"Length", "@", "allgenes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sortcolumn", "=", "4"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"2", ":", " ", "fmax"}], ",", " ", 
    RowBox[{"3", ":", " ", "fmin"}], ",", " ", 
    RowBox[{"4", ":", " ", 
     RowBox[{"fmax", "-", "fmin"}]}], ",", " ", 
    RowBox[{"5", ":", " ", 
     RowBox[{"rms", "-", "dev"}]}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"columnnames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<maxfr\>\"", ",", "\"\<minfr\>\"", ",", "\"\<spread\>\"", ",", 
     "\"\<devrms\>\"", ",", "\"\<autorms\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sortspreads", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"spreads", "[", "sym", "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "sortcolumn", "]"}], "]"}], ">", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "sortcolumn", "]"}], "]"}]}], ")"}], "&"}]}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"data", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"data2", "[", 
           RowBox[{"sym", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"sortspreads", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "numpairs"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"min", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"max", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"ticknames", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"geneseq", "[", 
            RowBox[{"[", 
             RowBox[{"sortspreads", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}], "<>", 
           "\"\<        \>\"", "<>", 
           RowBox[{"alnames", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<        \>\"", "<>", 
           RowBox[{"alnames", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "numpairs"}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"min", ",", "max"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "7"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<gene\>\"", ",", "41"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"freq", "[", 
             RowBox[{"symptom", "|", "\"\<gene allele\>\""}], "]"}], ",", 
            "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Large", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Auto", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"T", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"numpairs", "*", "nalleles"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                  RowBox[{"(", "ticknames", ")"}]}], ")"}]}]}], "}"}]}], ",", 
            "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", 
         RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{
                 RowBox[{"numpairs", "*", "nalleles"}], "+", 
                 RowBox[{"1", "/", "2"}]}], ",", "nalleles"}], "]"}], ",", 
              "Thick"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"numpairs", "*", "nalleles"}], "+", "1"}], ",", "2"}], 
             "}"}]}], "]"}], ",", "Auto"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"a4longside", "*", 
         RowBox[{"{", 
          RowBox[{"5.5", ",", "1"}], "}"}]}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<symptom \>\"", "<>", 
             RowBox[{"symptomnames", "[", 
              RowBox[{"[", "sym", "]"}], "]"}]}], ",", "42"}], "]"}], ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"labelposition", "[", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.99"}], "}"}], "]"}]}]}], "]"}]}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<sort_\>\"", "<>", 
       RowBox[{"columnnames", "[", 
        RowBox[{"[", 
         RowBox[{"sortcolumn", "-", "1"}], "]"}], "]"}], "<>", 
       "\"\<_1gene_std_s\>\"", "<>", 
       RowBox[{"symptomnames", "[", 
        RowBox[{"[", "sym", "]"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      "plot"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"sym", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sortcolumn", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"2", ",", "5"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.750056738404808*^9, 3.750056797263712*^9}, {
  3.750059294923699*^9, 3.7500593010077095`*^9}, {3.7500595054304686`*^9, 
  3.750059519829294*^9}, {3.7500595627761693`*^9, 3.7500595884538145`*^9}, {
  3.7500596271886826`*^9, 3.7500596861099863`*^9}, {3.7500599858811126`*^9, 
  3.7500600217299757`*^9}, {3.7500600563620367`*^9, 3.750060083022483*^9}, {
  3.750060248148773*^9, 3.750060248507574*^9}, {3.750060343730141*^9, 
  3.7500603458361444`*^9}, {3.750060497437211*^9, 3.7500605087628307`*^9}, {
  3.750060744607045*^9, 3.750060745028246*^9}, {3.7500607934507313`*^9, 
  3.750060793887532*^9}, {3.750060944725197*^9, 
  3.7500609519168096`*^9}},ExpressionUUID->"1c4ad68d-0b1c-4957-8a99-\
7fe5c5a842a7"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7500607469002495`*^9},ExpressionUUID->"74a319f0-c483-4f5a-a600-\
9cbb3fb2ba4a"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{
  3.7500607474150505`*^9},ExpressionUUID->"20f1a6a6-8314-4d1d-9d33-\
b1f8b142f9db"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7500565300508423`*^9, 
  3.750056530768444*^9}},ExpressionUUID->"404469b8-a7bd-4527-a26a-\
4bb4679415d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkdata", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"theta", "=", 
          RowBox[{"newtheta", "[", 
           RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
         RowBox[{"tot", "=", 
          RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"tot", "^", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], "}"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7493986917175813`*^9, 3.749398723994038*^9}, {
  3.749398769609518*^9, 3.749399041642796*^9}, {3.7493990840592704`*^9, 
  3.749399161124406*^9}, {3.7493994975233965`*^9, 3.7493994991769996`*^9}, {
  3.7493999618164124`*^9, 
  3.7493999650144176`*^9}},ExpressionUUID->"949fcebf-6630-4974-89d7-\
7ec056b1c7de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkgenes", "=", "94"}], ";", 
  RowBox[{"geneseq", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<allcondfreqs_1gene_thetamax_sA.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"2", ";;", 
       RowBox[{
        RowBox[{"checkgenes", "*", "2"}], "+", "1"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"geneseq", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"i", "/", "2"}], "]"}], "]"}], "<>", "\"\< \>\"", "<>", 
       RowBox[{"geneseq", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "geneseq"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symptomnames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], ";", 
  RowBox[{"allelenames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74939417698925*^9, 3.7493942437105675`*^9}, {
   3.7493992167229033`*^9, 3.7493992549741707`*^9}, {3.7493994616901336`*^9, 
   3.749399463733737*^9}, 3.749403397704248*^9, {3.7494035688053484`*^9, 
   3.7494035688989487`*^9}, {3.749403637289469*^9, 3.7494036377262697`*^9}, {
   3.7498943252257895`*^9, 3.749894328220995*^9}, {3.7498945372753625`*^9, 
   3.749894591703858*^9}, {3.74989462688192*^9, 
   3.749894629908325*^9}},ExpressionUUID->"ddd9523c-2fb0-4d5e-882d-\
ec346a13bc1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"save", " ", "seq", " ", "of", " ", "results"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "checkdata2", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ii", "=", "0"}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", "sym", "]"}], ";", 
       RowBox[{"ii", "=", 
        RowBox[{"ii", "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"datacf", "=", 
        RowBox[{"T", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
           "\"\<condcounts_s\>\"", "<>", "sym", "<>", "\"\<.csv\>\""}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", ";;"}], ",", 
            RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ClearAll", "[", 
        RowBox[{"logprob", ",", "newtheta"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"logprob", "[", 
         RowBox[{"t_", ",", "g_"}], "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r2", "=", 
            RowBox[{"g", "+", "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
           "\[IndentingNewLine]", 
           RowBox[{"Total", "@", 
            RowBox[{"LogGamma", "[", 
             RowBox[{"Total", "@", "r2"}], "]"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Length", "@", 
              RowBox[{"T", "@", "r2"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LogGamma", "[", 
               RowBox[{"Total", "@", "t"}], "]"}], "-", 
              RowBox[{"Total", "@", 
               RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newtheta", "[", "g_", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fm", ",", 
            RowBox[{"dat", "=", 
             RowBox[{"datacf", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", "*", "g"}], "-", "1"}], ",", 
                  RowBox[{"2", "*", "g"}]}], "}"}]}], "]"}], "]"}]}]}], "}"}],
           ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fm", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "/.", 
              RowBox[{
               RowBox[{"FindMaximum", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"logprob", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "dat"}], "]"}], ",", 
                   RowBox[{"x", ">", "0"}], ",", 
                   RowBox[{"y", ">", "0"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "ax"}], "]"}], "]"}], "+", "fm"}], ",", 
             RowBox[{"{", 
              RowBox[{"ax", ",", "2"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"checkdata2", "[", "ii", "]"}], "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"theta", "=", 
            RowBox[{
             RowBox[{"newtheta", "[", "gx", "]"}], "[", 
             RowBox[{"[", "ax", "]"}], "]"}]}], ";", 
           RowBox[{"tot", "=", 
            RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"theta", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tot", "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], 
            "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ax", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.749967862242958*^9, 3.749967915704252*^9}, {
  3.7499683919730883`*^9, 3.749968514808704*^9}, {3.749968563262389*^9, 
  3.749968594743244*^9}, {3.749969163084443*^9, 3.7499691640204444`*^9}, {
  3.7499691962657013`*^9, 3.7499692148609333`*^9}, {3.7499693673200016`*^9, 
  3.749969386320835*^9}, {3.7499700250649567`*^9, 
  3.7499700291677637`*^9}},ExpressionUUID->"536cdbe8-3a51-4257-970f-\
90083eced56f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"checkdata2", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.749969402435663*^9, 
  3.749969409752076*^9}},ExpressionUUID->"ece1d4ae-2f33-4853-8eda-\
924a8d4b49bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"94", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.749969414853285*^9},ExpressionUUID->"38400018-34af-495a-88ad-\
028ec3235e52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"checkdata2", "[", "1", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7499687808983717`*^9, 3.749968789868387*^9}, 
   3.7499694260073047`*^9, {3.7499848375346375`*^9, 
   3.74998483896984*^9}},ExpressionUUID->"58da92a6-178b-4547-aa5f-\
5905b87b674c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2756319526680829`", ",", "0.0012737518041848663`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2752730740625184`", ",", "0.0012811059664809077`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7499687903987885`*^9, 3.7499693327659407`*^9, {3.7499694211868963`*^9, 
   3.749969426444105*^9}, {3.749984833915431*^9, 
   3.749984839281841*^9}},ExpressionUUID->"99278845-4f5f-457e-ae9f-\
a35f5052c9af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"checkdata", "[", "1", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7499694349929204`*^9, 
  3.7499694447897377`*^9}},ExpressionUUID->"36fa06da-69b3-4e95-aeda-\
961bed771935"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2704645174256137`", ",", "0.005820250052258079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.290820976025382`", ",", "0.008613744369602194`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2754524003763278`", ",", "0.0017166152309875794`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2755495133228772`", ",", "0.001708835734207135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2756319526680829`", ",", "0.0012737518041848663`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2752730740625184`", ",", "0.0012811059664809077`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.27564479716789453`", ",", "0.0017530163921328753`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2753730936046129`", ",", "0.0017514701862331341`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.27547795737876446`", ",", "0.0009436112562456003`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.2756522116694023`", ",", "0.0009515903973003147`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.749969445101738*^9},ExpressionUUID->"bc613a15-862c-49b8-b8ca-\
fd88edd538a2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
     RowBox[{"checkdata", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7499696542835054`*^9, 
  3.7499696558435087`*^9}},ExpressionUUID->"c4557707-46ba-4e85-807c-\
827ea08dbe3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7487700291959352`*^9},ExpressionUUID->"6d8ddea8-8e13-4f80-a9cf-\
f5e6221f3640"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ii", "=", "0"}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", "sym", "]"}], ";", 
    RowBox[{"ii", "=", 
     RowBox[{"ii", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"min", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"max", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"checkdata2", "[", "ii", "]"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"sortdata", "=", 
     RowBox[{
     "SortBy", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"checkdata", "[", "ii", "]"}], "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "=", 
             RowBox[{"newtheta", "[", 
              RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
            RowBox[{"tot", "=", 
             RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"theta", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Times", "@@", "theta"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"tot", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "tot"}], ")"}]}], ")"}]}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"rows", ":", " ", "genes"}], ",", " ", 
          RowBox[{"cols", ":", " ", "alleles"}], ",", " ", 
          RowBox[{"3", 
           RowBox[{"rd", ":", " ", 
            RowBox[{"mean", "+", "std"}]}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"min", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"max", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"plot", "=", 
         RowBox[{"ErrorListPlot", "[", 
          RowBox[{
           RowBox[{"checkdata", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"min", ",", "max"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", "False"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", 
            RowBox[{"1", "/", "7"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
           RowBox[{"Axes", "\[Rule]", "None"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"gene", ",", "41"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"freq", "[", 
                 RowBox[{"symptom", "|", "\"\<gene allele\>\""}], "]"}], ",", 
                "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", "Large", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Auto", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"T", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"checkgenes", "*", "2"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"(", "geneseq", ")"}]}], ")"}]}]}], "}"}]}], ",", 
                "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"PointSize", "[", 
             RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{
                 RowBox[{"checkgenes", "*", "2"}], "+", 
                 RowBox[{"1", "/", "2"}]}], ",", "2"}], "]"}], ",", "Auto"}], 
             "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"a4longside", "*", 
             RowBox[{"{", 
              RowBox[{"6", ",", "1"}], "}"}]}]}], ",", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<symptom \>\"", "<>", "sym"}], ",", "42"}], "]"}],
               ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"labelposition", "[", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "0.9"}], "}"}], "]"}]}]}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<1gene_std_s\>\"", "<>", "sym", "<>", "\"\<.pdf\>\""}], 
          ",", "plot"}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7487698432280083`*^9, 3.748769875863266*^9}, {
   3.748769955314205*^9, 3.748769965563423*^9}, {3.7487700321755404`*^9, 
   3.7487701834178057`*^9}, {3.7487702156318626`*^9, 3.748770249842723*^9}, {
   3.748770289968993*^9, 3.748770378640549*^9}, {3.748770562736472*^9, 
   3.7487706457910185`*^9}, {3.748770681764682*^9, 3.748770747737198*^9}, {
   3.7487708531163826`*^9, 3.74877085743759*^9}, {3.748770895345657*^9, 
   3.748771202244996*^9}, {3.748771589250476*^9, 3.7487715914188795`*^9}, {
   3.7488059019148307`*^9, 3.7488059044888353`*^9}, {3.7488059412113*^9, 
   3.7488059609609346`*^9}, {3.7488065107839003`*^9, 
   3.7488065551815786`*^9}, {3.7488067494059196`*^9, 
   3.7488067639919453`*^9}, {3.7488068521165*^9, 3.748806885188558*^9}, {
   3.748807121528973*^9, 3.7488071281745853`*^9}, {3.7488072092323275`*^9, 
   3.7488072128983335`*^9}, {3.748807258684414*^9, 3.74880733593575*^9}, {
   3.748807380536228*^9, 3.748807380910629*^9}, {3.7488074194270964`*^9, 
   3.748807547253721*^9}, {3.7488077257648344`*^9, 3.748807727714838*^9}, {
   3.748807883122311*^9, 3.748807953823635*^9}, {3.74880801341674*^9, 
   3.748808016193545*^9}, {3.749393283712081*^9, 3.749393304974919*^9}, 
   3.749393347126193*^9, {3.749393432178542*^9, 3.7493934664674025`*^9}, {
   3.749393542285536*^9, 3.749393546825144*^9}, {3.7493937756941457`*^9, 
   3.7493939765756984`*^9}, {3.749394267032609*^9, 3.7493942688266115`*^9}, {
   3.7493992758158073`*^9, 3.7493992929758377`*^9}, {3.7493993414763227`*^9, 
   3.7493994280096745`*^9}, 3.749399760820659*^9, {3.7494013690988846`*^9, 
   3.7494015420885887`*^9}, {3.7494033796238165`*^9, 
   3.7494033956606445`*^9}, {3.74940346692157*^9, 3.749403556746527*^9}, {
   3.7494036507054925`*^9, 3.7494036548394995`*^9}, {3.7498943526506376`*^9, 
   3.749894362447455*^9}, {3.749894427281169*^9, 3.74989442785837*^9}, {
   3.7499674226809855`*^9, 3.749967424630989*^9}, {3.749967775678406*^9, 
   3.7499678306529026`*^9}, {3.7499695579533367`*^9, 
   3.7499695871409874`*^9}, {3.749969675998744*^9, 3.74996977607292*^9}, {
   3.749969812530184*^9, 
   3.749969820142997*^9}},ExpressionUUID->"250e614b-77b1-4776-b389-\
fc92796b5932"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"with", " ", "quantiles", " ", "instead", " ", "of", " ", "std"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Print", "[", "sym", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"datacf", "=", 
       RowBox[{"T", "[", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{"\"\<condcounts_s\>\"", "<>", "sym", "<>", "\"\<.csv\>\""}],
           "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;"}], ",", 
           RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ClearAll", "[", 
       RowBox[{"logprob", ",", "newtheta"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"logprob", "[", 
        RowBox[{"t_", ",", "g_"}], "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r2", "=", 
           RowBox[{
            RowBox[{"datacf", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", "*", "g"}], "-", "1"}], ",", 
                 RowBox[{"2", "*", "g"}]}], "}"}]}], "]"}], "]"}], "+", 
            "t"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"LogGamma", "[", "r2", "]"}]}]}], "-", 
          "\[IndentingNewLine]", 
          RowBox[{"Total", "@", 
           RowBox[{"LogGamma", "[", 
            RowBox[{"Total", "@", "r2"}], "]"}]}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Length", "@", 
             RowBox[{"T", "@", "r2"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"LogGamma", "[", 
              RowBox[{"Total", "@", "t"}], "]"}], "-", 
             RowBox[{"Total", "@", 
              RowBox[{"LogGamma", "[", "t", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newtheta", "[", 
        RowBox[{"g_", ",", "i_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"datacf", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", 
           RowBox[{
            RowBox[{"2", "*", "g"}], "-", "1", "+", "i"}]}], "]"}], "]"}], 
        "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "/.", 
          RowBox[{
           RowBox[{"FindMaximum", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"logprob", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], ",", "g"}], "]"}], ",", 
               RowBox[{"x", ">", "0"}], ",", 
               RowBox[{"y", ">", "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "1"}], "}"}]}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"checkdata", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"theta", "=", 
             RowBox[{"newtheta", "[", 
              RowBox[{"gx", ",", "ax"}], "]"}]}], ";", 
            RowBox[{"tot", "=", 
             RowBox[{"Total", "@", "theta"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"gx", "*", "2"}], "-", "1", "+", "ax"}], ",", 
                RowBox[{
                 RowBox[{"theta", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/", "tot"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ErrorBar", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"theta", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "/", "tot"}], "+", 
                RowBox[{"Quantile", "[", 
                 RowBox[{
                  RowBox[{"BetaDistribution", "[", 
                   RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0.05", ",", "0.95"}], "}"}]}], "]"}]}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"gx", ",", "1", ",", "checkgenes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ax", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"min", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"max", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2", ",", "1", ",", "2"}], "]"}], "]"}]}], 
        "]"}]}], ";", 
      RowBox[{"plot", "=", 
       RowBox[{"ErrorListPlot", "[", 
        RowBox[{
         RowBox[{"checkdata", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"min", ",", "max"}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "6"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "Auto"}], ",", 
         RowBox[{"Axes", "\[Rule]", "None"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"gene", ",", "41"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"freq", "[", 
               RowBox[{"symptom", "|", "\"\<gene allele\>\""}], "]"}], ",", 
              "41"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", "Large", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Auto", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"T", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"checkgenes", "*", "2"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"(", "geneseq", ")"}]}], ")"}]}]}], "}"}]}], ",", 
              "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"PointSize", "[", 
           RowBox[{"Scaled", "[", "0.005", "]"}], "]"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{
               RowBox[{"checkgenes", "*", "2"}], "+", 
               RowBox[{"1", "/", "2"}]}], ",", "2"}], "]"}], ",", "Auto"}], 
           "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"a4longside", "*", 
           RowBox[{"{", 
            RowBox[{"6", ",", "1"}], "}"}]}]}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<symptom \>\"", "<>", "sym"}], ",", "42"}], "]"}], 
            ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"labelposition", "[", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.9"}], "}"}], "]"}]}]}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "\"\<mathematica_05quantile_s\>\"", "<>", "sym", "<>", 
         "\"\<.pdf\>\""}], ",", "plot"}], "]"}], ";"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sym", ",", "symptomnames"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7487698432280083`*^9, 3.748769875863266*^9}, {
   3.748769955314205*^9, 3.748769965563423*^9}, {3.7487700321755404`*^9, 
   3.7487701834178057`*^9}, {3.7487702156318626`*^9, 3.748770249842723*^9}, {
   3.748770289968993*^9, 3.748770378640549*^9}, {3.748770562736472*^9, 
   3.7487706457910185`*^9}, {3.748770681764682*^9, 3.748770747737198*^9}, {
   3.7487708531163826`*^9, 3.74877085743759*^9}, {3.748770895345657*^9, 
   3.748771202244996*^9}, {3.748771589250476*^9, 3.7487715914188795`*^9}, {
   3.7488059019148307`*^9, 3.7488059044888353`*^9}, {3.7488059412113*^9, 
   3.7488059609609346`*^9}, {3.7488065107839003`*^9, 
   3.7488065551815786`*^9}, {3.7488067494059196`*^9, 
   3.7488067639919453`*^9}, {3.7488068521165*^9, 3.748806885188558*^9}, {
   3.748807121528973*^9, 3.7488071281745853`*^9}, {3.7488072092323275`*^9, 
   3.7488072128983335`*^9}, {3.748807258684414*^9, 3.74880733593575*^9}, {
   3.748807380536228*^9, 3.748807380910629*^9}, {3.7488074194270964`*^9, 
   3.748807547253721*^9}, {3.7488077257648344`*^9, 3.748807727714838*^9}, {
   3.748807883122311*^9, 3.748807953823635*^9}, {3.74880801341674*^9, 
   3.748808016193545*^9}, {3.749393283712081*^9, 3.749393304974919*^9}, 
   3.749393347126193*^9, {3.749393432178542*^9, 3.7493934664674025`*^9}, {
   3.749393542285536*^9, 3.749393546825144*^9}, {3.7493937756941457`*^9, 
   3.7493939765756984`*^9}, {3.749394267032609*^9, 3.7493942688266115`*^9}, {
   3.7493992758158073`*^9, 3.7493992929758377`*^9}, {3.7493993414763227`*^9, 
   3.7493994280096745`*^9}, 3.749399760820659*^9, {3.7494013690988846`*^9, 
   3.7494015420885887`*^9}, {3.7494018369925065`*^9, 3.749401846368123*^9}, {
   3.749401959343521*^9, 3.7494020263456388`*^9}, 3.749402066422109*^9, {
   3.7494022584428463`*^9, 3.749402316771349*^9}, {3.749402444831974*^9, 
   3.7494024605890017`*^9}, {3.7494025395407405`*^9, 3.749402540991543*^9}, {
   3.7494026637959585`*^9, 3.749402682796792*^9}, {3.7494027561013207`*^9, 
   3.7494027648997364`*^9}, {3.749403674869935*^9, 
   3.7494036834811497`*^9}},ExpressionUUID->"d2d3b139-bfa9-4eb7-8d95-\
fd52c3658f6c"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7493998077299414`*^9},ExpressionUUID->"1f3238b7-6506-42fd-9935-\
e116df721746"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{
  3.749399808665943*^9},ExpressionUUID->"e35dba00-33b6-4d4f-ad8d-\
f69b29f4374e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldtheta", "[", 
  RowBox[{"3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7493957562162247`*^9, 
  3.749395773048654*^9}},ExpressionUUID->"39a58b44-cc59-4885-80a9-\
dc86c2d73ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1660", ",", "601"}], "}"}]], "Output",
 CellChangeTimes->{{3.749395760553032*^9, 3.7493957734074545`*^9}, 
   3.7493968915474195`*^9},ExpressionUUID->"1692c5db-e65c-4826-84dc-\
c7df12d13b99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newtheta", "[", 
  RowBox[{"3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.749395505523784*^9, 3.7493955107341933`*^9}, {
  3.749395724470169*^9, 3.7493957248289695`*^9}, {3.7493957749518576`*^9, 
  3.7493957754666586`*^9}},ExpressionUUID->"035048e8-4773-4b03-a721-\
befb2bf13c09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"88092.48199797937`", ",", "33460.17300242095`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.749395512138196*^9, 3.7493956023999543`*^9, {3.7493956912733107`*^9, 
   3.7493957253905706`*^9}, {3.749395763735438*^9, 3.749395775950259*^9}, 
   3.749396893856223*^9},ExpressionUUID->"a54d2d59-0a0b-4d65-8f93-\
ebb1cffee5ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bd", "[", 
  RowBox[{"0.5", ",", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"(", 
     RowBox[{"newtheta", "[", 
      RowBox[{"3", ",", "0"}], "]"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7493950899546547`*^9, 3.7493951025126762`*^9}, {
  3.749395139281941*^9, 3.7493951867216244`*^9}, {3.74939691471346*^9, 
  3.749396915665062*^9}},ExpressionUUID->"2314762f-b3a5-4626-91e6-\
927c716cfa27"],

Cell[BoxData["4.036684122427634115432`10.756603019377652*^-5576"], "Output",
 CellChangeTimes->{{3.7493950934490604`*^9, 3.7493951031210775`*^9}, {
  3.7493951442427497`*^9, 3.7493951872364254`*^9}, {3.74939690903505*^9, 
  3.7493969172562647`*^9}},ExpressionUUID->"e507613e-9fcb-453a-95e7-\
0a67c69e0bbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"1", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"bd", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"newtheta", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7493221480808372`*^9, 3.749322217703759*^9}, {
  3.7493949932646847`*^9, 3.749395012546318*^9}, {3.749395107551485*^9, 
  3.7493951317159276`*^9}, {3.749395191448433*^9, 3.74939522419289*^9}, {
  3.7493953812539663`*^9, 3.749395408179613*^9}, {3.74939693176429*^9, 
  3.7493969563499327`*^9}},ExpressionUUID->"0d10eb8b-5dd5-41bf-a9d4-\
08f603c91cd2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[14, 15], 0.9333333333333333]], Thickness[Large], Opacity[1.],
       LineBox[CompressedData["
1:eJw9l3k4VV/Ux0kyJrMMJUISESpyz1mnECJTZEjKVBQyNagkQkgIyZg5Gco8
JvOU7nyuUDKTSpJChuq97/O87+/8cc/zefZZe6/1Xd+9n7tlnK9Yum1iYWF5
yvz53/cJt1la62d9lOX/ns26Ej6j4nLw/6yRlZJRJa75HxuTBiozxfX+YxvX
ldcJ4lb/8UfV+7oPxV3/42wRs4ho8YD/OISzak+UeNh/bGuXU7bwI+k/5vkX
4mCwM+s/lreYn+14kP8fXydrQ8qvov9YrFpghJW17D+undAlUgiV/3H7pUxJ
u7nq/3hJAdn2wqvuP960WsIvKd8I09bDVwTbUtkP/Ttfe+plE7yZohpQKu7w
EcM0yd1KLTCzWZstf4+wqHT819Wi+VZoW50XjEWRHV9XRkf61drhdbjbHTcS
7+78L6/6+GI7QISfqzuUJ0KRb0fh96mpTkibv3H78TsllRiPmgvZct1ASBMI
ZzvyRW0ZK5lyD+6B+5sGXmeT3DUD1DurRTt6YXxgltv0hdrh0ZedD2gyfXCf
zX/poXet9volRvrem28hMyH1oeL+Vh2rQ2cf7Q9+C41TMRyn67p0SllnIjTC
3sLjnfcfau4k6TimrPgisW/Bes4hOVr8vU5bl4ShRe5bECpqs6U1/tK5v8vp
142+t7BmGXBoy4YiQejdN5NeCSIkaAi1NBjEEjxzrh0jSRPBqEmv8GNtIqHT
899huhwReiyNHeIKUgnX2AR2D+8nAm+FefDJ/AIChZy6fVyDCFxvZtxuCJUS
FNNk+Wa0iHCcyNb98UAl4a5bCdtXhAhHt5cohsfVEYbUNFe/HyPCmLMFCN1q
JqhvNM3/MiCC53eLOUZlByG6R39q1YQIytZXn61feUOYTCAP/bUgApQH+ta4
UwkERxsKmw0RfDVEjWMV+gmP9451cjoQIf7tbFIb4QNh/pd741YnIgxmPi5P
CB8nHG/9USZ4gQjRWbNB78NnCFkPbhaIXSZCqd3pZ91zc4Tfp9nSpXyIwDm9
+8CV2EWCuWxMvMxVIpy02Zf45M0KoeibcITCTSJY0VZ3yl//S9jUkHlrXzBz
fiGpuY4gNuRMmIKvWhgRtLREn81/4USqzcouHIwiwtk7CZ+u4NsQXkkthyOx
RPhq3655wVQYcZtptYBEIgh/bo5/NCmONFcYGeilECFI0rfp3+1diGgQnWCU
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
sZ5/Ig0Cqljsyqmzlss0cI7ZtF37sQrmcnVjaesq08+vb1Tqyysz98fJPeF/
aWC2drmFdmkvNjW/1IKx0oHtwOZWhV2KWKPnU9sNNjo8fZJkUD2ugLm5f4/y
56JDYM5zbCJSDjsy80RWlZcOu1xvRSh578b4XbFXX/jocPjQL/K6oyzWdO7R
nJMwHb6kc12xc96FJXzUDt8hRodDt97/G5rdiV08M7FjSJwON4dTkw/I7sAE
bTTMzKXpEFvgI2pJF8dmGR8+8cjS4TTndB+L4XbstWXY3R45OuAj+6ZLqaKY
u2l/BapEhwChTsfi7cIYSgw6saZMh/jpnADyO0FM6ITCZI0qHbht4m4mFwhg
zfrXhVUO0iHL/eAht2k+LKlD+sXsYToUPsYMykd5MY+jvfr5R+jQPenzLHqZ
G0NbfEbOIXQo/xstSlTkwoQR8euSzP81Z9LeaZhf5cC+NLZtGzhGhxjPG6Ir
79mxVq1LzxP06fDbWHu6wHYzdlnz1RCXMR0cFs+qE5+wYq3U/tL6k3TQyOPp
HHBgwUS8FoIvmtNhwfcvt8Clv3CJi+eU6CmmXlCcNo5uQEuBvEKXNR0uSa7d
PHVoDYSPYav+tnTY6lky/cz0N3iM2BNlz9Ch59c1a6WIZRASi/e7e54O+zQv
V+ma/AT3qmJ9VRc6UJ62B7UM/IDXZl3bR9zo4NZRJnP49gIIzo1+jXGnQ7Vc
ycswn3m4GLnWrHOZDvZPpr/wicxBk5xIwhcv5no2t7OvTX4GgTZVt1QfOmzm
zJM4NvQJXq268qxcpYPO0JadxQemgD85eKTgBh0q92UajcRNgJt6WoXVLTrM
pI1Z5/OOQyO5OoztDh2CBt8bCJuMwrbLFJvKu3Qog+upXtXD4MrxRcnpHh2w
Y+9IuOl7aMjb/HdbBB0cPw9HL4kNgsuwdr7XAzrYTg5pcisxoP6G1XWpWGY/
IttytP83T5ErJ97G02GNp8wuDaeCc0XUjpuJdDgprcHuxLw3153MX1BMZs53
8rOiCQsReL80dwyk0EHO3skv4d4bcIoYSo5IZ+opPXheRKcHeFr4kKlsOtzp
d1/NPNwB58/s5U/Mo8Pr6LtS+VfboGZFd/LoMzrUBztEdFS1AHeSY+3Cc6b+
18Odetqb4JxaYFRWCdPvO30scMFGqCYmOpi+ZOpx7rdVz9M64PJ4qfqnnA50
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
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#1"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[14, 15], 0.9333333333333333], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 15], 0.4666666666666667]], Thickness[Large], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
74ewHr/y5CO5yv8D5w0CTQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#2"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[2, 15], 0.13333333333333333`], 
       NCache[
        Rational[8, 15], 0.5333333333333333], 
       NCache[
        Rational[1, 5], 0.2]], Thickness[Large], Opacity[1.], 
      Dashing[{0, Small}], LineBox[CompressedData["
1:eJxF13k0VV/0AHAyU6ZIkmROkakMee/ua5aQUMk8k6FMzQllJolShlBJhiIy
Z5bMuvdKhkxJ+JapIlH4vd9av99795+7Pmuvu9c5e5991rqiTufNXLfQ0dEd
oKej+9+3oesM3vCfLkL3fw+j9i7fMUEJ+H8rZz5Mfy14iOpj3f0ljwR1qD7t
slKbKGhB9Yh8pPZtQReqs/iPR8QIBlIdyvpaOlowjGrLM4+LFn/co5pjM9RG
f08m1ZIn5meaY7OpvtSjDg+X8qgWKOUZpacvorp8QrvrPamE6ibPR0JnZkup
XpYic730qaB6y2oBt5BkNdUqmw7l5oU1VHeFHep5t7+eapGE76t58w1Uf18Z
G+1TaKI6+9ubDs74Zqo5hZ8vTE6+pTrubJlblsQ7qn+jBZMewa1UByq9Ld3R
3Eb1WOHbWFy0g+q/nh/SZK52wpecBx/eXg+iP6DJsuH2pgvUJe5fEPFh4td/
IupeLNADBQ//SHXUtkpeErYX+2zzHtoHP2dVv4pVlJ09ydFvjIEM295HX3Y/
V6+0MKqPMcWguT6xR967WV27VisAMceg5XOL4qj0uLpVvPynZ5YYtH3I5S4q
5D8SrcBWEOiMAfPeMkYZg9AjU4E1hrxXMJiIDlni2jTU8B8p2Wi5hkH09OnP
N486a6zr5pVcuYFB3LqPgLPBNQ0+geRdn29h8GuXe9T26/ka2lXnvxXFYwDp
sln79zKTekTdMpzvYvC3ozygXVaYZBVjYyZwD4N5jVv68hzKJH/ro9U3UjBQ
yeH94xFsT9pohnNK6Ricd1PpZ1oKIEXLqohNZWAQHGhxIIQlmsR3X/ZjymMM
ItV+K8zxZ5Ky1sVijLMxCMmyXP+w+zVJ1k0QoX+OQXdyYiyfbiupoofrZ2ke
BuOXHY3Ftg2TtFSZczxeYHDbdp9Beu0iqSfz35ndRRh8vV2lVt3GQLZi/bUN
K8Zgy0Lq0FUpAfKU73+Nt0ox6PSwS44j9pP9B8cuqFZgsHba4eL5FoS8rvlR
5nsVBovndU6KXz1BjsrvGsmowWAs7Rm7R64zmW97812zegwWTPIWmicvkLOu
VekyN2Ewq4QOrEtEkWUni1ar3mLgl60r+Nw2lVxplPPSpxUDU+UWzsCbL8ja
ZemOoh0YsN36oJUbUUfuEU7i7+vCIO+51au2gxjZKiK6Peo9BtKZa6fC18fJ
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
fbsJ6fXjL31W5QRcqpO3M3aWILEiG7lsVQSQWuq94x25SbZDO69XviFA/db9
7gXBNQ2W7SZiOxoJ8GiWX22WwjSswyrP4Z0EGGTm2W6cuajxam+vZkgPAQFb
g5Ub2xw0mGrn+ORxAi7v3Ewd3DDQKFoWexP3kQArPYkfKcxCGgzut1kMPhMg
eSyAKeZOzZGCo05Zdb8JGGH9br/HfFn9kKwoAqsEDPo21p5WGFWv4xz/VP+X
Eh8YVSJUWtSxXluBRrpeqEj52c0ack99yfZMfDN7LxipMp73ilNUR/xNr7ft
6YWZnJ9bQc5JDUtFLAm9Xkj33m1xO/WpyvL3XdxTyb1wpdWhvCItV6nMXJ/h
ns4H4AwaaHtJh0sHG4Rnlk59gFPdsUyt7MxCoiOGA0/D+yBbOnKk/xj31iOq
YfcElT5S/19t9rxfpe+lebnj9oRvaD/VDxntAs0kBqjePlr2ZMtbmpmCQi3U
/QappsuzK5rgHaLaP7XoNm8TzbUHolh5zn2imsfQX/Ym5zDVw3JY75Uaml9l
gMSk3QjVtkUqPMIbNIeEPw4dzh+l+uWMcBqn0RjVUY/CHUZNaHYxm5MsPEHz
7pqaV8anaY65Y/0uzolmD5WUH+xXaBYL4zNgyaF5Q+36tv5cmgfnvhA5BTQn
nH5tq1dM8+Z+s4DwGpqH8TsZDL00V0asOPf20XxPw17m6QDNx54dLNUapbn6
cnd76H80J8sdvnNilma/iXQL0QWa9xl5jzUs0cxI/yE7YYXm8TINT4c1mms8
n8orrNP8QIRjeXOT5v8BgiMfwg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#3"]& ], 
    TagBox[
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[11, 15], 0.7333333333333333], 
       NCache[
        Rational[4, 15], 0.26666666666666666`]], Thickness[Large], Opacity[
      1.], Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4751#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     NCache[
      Rational[1, 500], 0.002]], FontFamily -> Automatic],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 21, 
    Thickness[
     Rational[1, 500]], FontFamily -> Automatic],
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749322171184478*^9, 3.7493222467510104`*^9}, {
   3.749395021454934*^9, 3.749395045884577*^9}, {3.7493951158819*^9, 
   3.7493951325739293`*^9}, 3.7493952221648865`*^9, 3.749395290867407*^9, 
   3.749395498581772*^9, 
   3.7493972490074472`*^9},ExpressionUUID->"789f7f02-c953-44d1-b667-\
8883b0fd46c0"]
}, Open  ]]
},
WindowSize->{640, 755},
WindowMargins->{{Automatic, 229}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (32-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 346, 7, 53, "Input",ExpressionUUID->"0de31abf-1d59-4b57-b3bf-379f992303cc"],
Cell[929, 31, 874, 13, 32, "Output",ExpressionUUID->"d2b67f37-677e-4636-bf9c-c47c49ca3a1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1840, 49, 419, 11, 31, "Input",ExpressionUUID->"3c0df4f5-357a-4856-a3d4-b9fbe96aeb33"],
Cell[2262, 62, 2096, 60, 70, "Output",ExpressionUUID->"4db9af3c-568a-48ff-89ce-44e7d22723a3"]
}, Open  ]],
Cell[4373, 125, 1213, 34, 145, "Input",ExpressionUUID->"fb1bb9ee-4ca6-4283-b55e-8db71a85a372"],
Cell[5589, 161, 852, 23, 90, "Input",ExpressionUUID->"f30d45b8-5f12-4baa-9629-0cb6d966ea17"],
Cell[6444, 186, 777, 19, 105, "Input",ExpressionUUID->"9ce342a5-1044-4b5c-8e8f-bbaba906f475"],
Cell[7224, 207, 7911, 186, 738, "Input",ExpressionUUID->"656204ee-2c7c-4b90-a8d3-39c18dc5ba1a"],
Cell[15138, 395, 257, 5, 105, "Input",ExpressionUUID->"428545ba-f714-46b7-9cfd-c22153e4abb6"],
Cell[15398, 402, 5009, 103, 429, "Input",ExpressionUUID->"7c930844-9799-4a15-a7ec-570beb879ec8"],
Cell[20410, 507, 280, 5, 124, "Input",ExpressionUUID->"7e179b1e-b662-45c8-9318-108341b63165"],
Cell[20693, 514, 745, 19, 113, "Input",ExpressionUUID->"5c2376dd-2189-4a26-a4ff-108a33f9d2e3"],
Cell[21441, 535, 1157, 33, 152, "Input",ExpressionUUID->"f1afbafb-c78c-440e-924c-7f83bbaccda0"],
Cell[22601, 570, 154, 3, 31, "Input",ExpressionUUID->"7e657153-6fa0-47f5-ae9d-b04af68f7a5d"],
Cell[22758, 575, 746, 22, 75, "Input",ExpressionUUID->"79588f39-401f-4bd1-91a7-6ceb89887c62"],
Cell[23507, 599, 8257, 214, 876, "Input",ExpressionUUID->"1c4ad68d-0b1c-4957-8a99-7fe5c5a842a7"],
Cell[CellGroupData[{
Cell[31789, 817, 131, 3, 28, "Input",ExpressionUUID->"74a319f0-c483-4f5a-a600-9cbb3fb2ba4a"],
Cell[31923, 822, 132, 3, 32, "Output",ExpressionUUID->"20f1a6a6-8314-4d1d-9d33-b1f8b142f9db"]
}, Open  ]],
Cell[32070, 828, 306, 6, 143, "Input",ExpressionUUID->"404469b8-a7bd-4527-a26a-4bb4679415d9"],
Cell[32379, 836, 1514, 39, 112, "Input",ExpressionUUID->"949fcebf-6630-4974-89d7-7ec056b1c7de"],
Cell[33896, 877, 1647, 42, 173, "Input",ExpressionUUID->"ddd9523c-2fb0-4d5e-882d-ec346a13bc1f"],
Cell[35546, 921, 5789, 149, 466, "Input",ExpressionUUID->"536cdbe8-3a51-4257-970f-90083eced56f"],
Cell[CellGroupData[{
Cell[41360, 1074, 226, 5, 31, "Input",ExpressionUUID->"ece1d4ae-2f33-4853-8eda-924a8d4b49bc"],
Cell[41589, 1081, 186, 5, 32, "Output",ExpressionUUID->"38400018-34af-495a-88ad-028ec3235e52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41812, 1091, 318, 7, 28, "Input",ExpressionUUID->"58da92a6-178b-4547-aa5f-5905b87b674c"],
Cell[42133, 1100, 486, 13, 32, "Output",ExpressionUUID->"99278845-4f5f-457e-ae9f-a35f5052c9af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42656, 1118, 264, 7, 28, "Input",ExpressionUUID->"36fa06da-69b3-4e95-aeda-961bed771935"],
Cell[42923, 1127, 1160, 32, 109, "Output",ExpressionUUID->"bc613a15-862c-49b8-b8ca-fd88edd538a2"]
}, Open  ]],
Cell[44098, 1162, 766, 24, 53, "Input",ExpressionUUID->"c4557707-46ba-4e85-807c-827ea08dbe3a"],
Cell[44867, 1188, 201, 5, 31, "Input",ExpressionUUID->"6d8ddea8-8e13-4f80-a9cf-f5e6221f3640"],
Cell[45071, 1195, 9632, 221, 779, "Input",ExpressionUUID->"250e614b-77b1-4776-b389-fc92796b5932"],
Cell[54706, 1418, 11543, 274, 848, "Input",ExpressionUUID->"d2d3b139-bfa9-4eb7-8d95-fd52c3658f6c"],
Cell[CellGroupData[{
Cell[66274, 1696, 131, 3, 28, "Input",ExpressionUUID->"1f3238b7-6506-42fd-9935-e116df721746"],
Cell[66408, 1701, 130, 3, 32, "Output",ExpressionUUID->"e35dba00-33b6-4d4f-ad8d-f69b29f4374e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66575, 1709, 212, 5, 28, "Input",ExpressionUUID->"39a58b44-cc59-4885-80a9-dc86c2d73ec8"],
Cell[66790, 1716, 231, 5, 32, "Output",ExpressionUUID->"1692c5db-e65c-4826-84dc-c7df12d13b99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67058, 1726, 313, 6, 28, "Input",ExpressionUUID->"035048e8-4773-4b03-a721-befb2bf13c09"],
Cell[67374, 1734, 359, 7, 32, "Output",ExpressionUUID->"a54d2d59-0a0b-4d65-8f93-ebb1cffee5ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67770, 1746, 428, 10, 31, "Input",ExpressionUUID->"2314762f-b3a5-4626-91e6-927c716cfa27"],
Cell[68201, 1758, 306, 4, 35, "Output",ExpressionUUID->"e507613e-9fcb-453a-95e7-0a67c69e0bbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68544, 1767, 1297, 33, 97, "Input",ExpressionUUID->"0d10eb8b-5dd5-41bf-a9d4-08f603c91cd2"],
Cell[69844, 1802, 46033, 798, 345, "Output",ExpressionUUID->"789f7f02-c953-44d1-b667-8883b0fd46c0"]
}, Open  ]]
}
]
*)

